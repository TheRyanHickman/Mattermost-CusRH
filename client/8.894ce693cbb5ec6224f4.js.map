{"version":3,"sources":["webpack:///./node_modules/mattermost-redux/selectors/entities/admin.js","webpack:///./node_modules/mattermost-redux/selectors/entities/bots.js","webpack:///./node_modules/mattermost-redux/actions/bots.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/mattermost-redux/actions/schemes.js","webpack:///./node_modules/mattermost-redux/selectors/entities/schemes.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/mattermost-redux/actions/jobs.js","webpack:///./node_modules/mattermost-redux/selectors/entities/jobs.js","webpack:///./node_modules/flexsearch/dist/flexsearch.es5.js","webpack:///./node_modules/mattermost-redux/constants/schemes.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/es6.string.small.js","webpack:///./node_modules/mark.js/dist/mark.js"],"names":["Object","defineProperty","exports","value","getLogs","state","entities","admin","logs","getAudits","audits","getConfig","config","getLdapGroups","ldapGroups","getLdapGroupsCount","ldapGroupsCount","getEnvironmentConfig","environmentConfig","getComplianceReports","complianceReports","getClusterInfo","clusterInfo","getUserAccessTokens","userAccessTokens","getBotAccounts","bots","accounts","createBot","bot","_helpers","bindClientFunc","clientFunc","_client","Client4","onSuccess","_action_types","BotTypes","RECEIVED_BOT_ACCOUNT","params","patchBot","botUserId","botPatch","loadBot","getBot","loadBots","page","arguments","length","undefined","perPage","BOTS_PER_PAGE_DEFAULT","getBotsIncludeDeleted","RECEIVED_BOT_ACCOUNTS","disableBot","enableBot","assignBot","newOwnerId","__webpack_require__","$export","$entries","S","entries","it","getScheme","schemeId","onRequest","SchemeTypes","GET_SCHEME_REQUEST","RECEIVED_SCHEME","GET_SCHEME_SUCCESS","onFailure","GET_SCHEME_FAILURE","getSchemes","scope","_constants","General","PAGE_SIZE_DEFAULT","GET_SCHEMES_REQUEST","RECEIVED_SCHEMES","GET_SCHEMES_SUCCESS","GET_SCHEMES_FAILURE","createScheme","scheme","CREATE_SCHEME_REQUEST","CREATED_SCHEME","CREATE_SCHEME_SUCCESS","CREATE_SCHEME_FAILURE","deleteScheme","fn","regeneratorRuntime","mark","_callee","dispatch","getState","data","wrap","_context","prev","next","type","DELETE_SCHEME_REQUEST","sent","t0","forceLogoutIfNecessary","_reduxBatchedActions","batchActions","DELETE_SCHEME_FAILURE","error","_errors","logError","abrupt","DELETED_SCHEME","DELETE_SCHEME_SUCCESS","stop","_ref","self","this","args","Promise","resolve","reject","gen","apply","_next","asyncGeneratorStep","_throw","err","_x","_x2","patchScheme","PATCH_SCHEME_REQUEST","PATCHED_SCHEME","PATCH_SCHEME_SUCCESS","PATCH_SCHEME_FAILURE","getSchemeTeams","GET_SCHEME_TEAMS_REQUEST","RECEIVED_SCHEME_TEAMS","GET_SCHEME_TEAMS_SUCCESS","GET_SCHEME_TEAMS_FAILURE","getSchemeChannels","GET_SCHEME_CHANNELS_REQUEST","RECEIVED_SCHEME_CHANNELS","GET_SCHEME_CHANNELS_SUCCESS","GET_SCHEME_CHANNELS_FAILURE","key","arg","info","done","then","makeGetSchemeChannels","_reselect","createSelector","_channels","getAllChannels","props","allChannels","_schemes","ScopeTypes","TEAM","msg","concat","id","console","log","schemeChannels","forEach","item","_item","_slicedToArray","channel","scheme_id","push","makeGetSchemeTeams","_teams","getTeams","allTeams","CHANNEL","schemeTeams","_item2","team","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","_s","_i","_iterableToArrayLimit","TypeError","_nonIterableRest","schemes","module","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","slice","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","source","target","prop","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","helpers","noop","uid","isNullOrUndef","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","createJob","job","JobTypes","CREATE_JOB_REQUEST","RECEIVED_JOB","CREATE_JOB_SUCCESS","CREATE_JOB_FAILURE","getJob","GET_JOB_REQUEST","GET_JOB_SUCCESS","GET_JOB_FAILURE","getJobs","JOBS_CHUNK_SIZE","GET_JOBS_REQUEST","RECEIVED_JOBS","GET_JOBS_SUCCESS","GET_JOBS_FAILURE","getJobsByType","RECEIVED_JOBS_BY_TYPE","cancelJob","CANCEL_JOB_REQUEST","CANCEL_JOB_SUCCESS","CANCEL_JOB_FAILURE","getAllJobs","jobs","makeGetJobsByType","jobsByType","jobsByTypeList","ma","na","defineProperties","Z","pa","qa","ra","writable","sa","ta","Aa","D","I","Ba","za","o","E","H","L","M","K","N","B","ba","F","V","ja","ka","ca","catch","race","all","define","amd","modules","Ca","Da","init","A","da","ua","W","RegExp","replace","U","u","C","ha","G","J","P","Q","R","Y","X","aa","T","ea","va","create","Ea","onmessage","search","content","threshold","limit","postMessage","worker","async","Function","substring","lastIndexOf","Fa","suggest","O","encode","depth","wa","memory","speed","score","balance","fast","la","xa","ya","registerMatcher","registerEncoder","ia","registerLanguage","stemmer","preset","Worker","tokenize","rtl","resolution","matcher","addMatcher","lang","doc","field","tag","Ga","importScripts","_ctx","query","bool","oa","Ha","find","contextual","export","import","icase","simple","advanced","Blob","URL","createObjectURL","core","speciesConstructor","promiseResolve","finally","onFinally","isFunction","createHTML","_typeof","classCallCheck","instance","Constructor","createClass","protoProps","staticProps","_extends","assign","DOMIterator","iframes","exclude","iframesTimeout","filteredCtx","NodeList","isPrototypeOf","querySelectorAll","isDescendant","contexts","contains","ifr","successFn","errorFn","ifrWin","contentWindow","trim","href","location","_this","called","tout","clearTimeout","isIframeBlank","getIframeContents","readyState","observeIframeLoad","_this2","eachCalled","forEachIframe","waitForIframes","querySelector","handled","_this3","open","checkEnd","onIframeReady","con","whatToShow","createNodeIterator","contents","prevNode","compCurr","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","compPrev","DOCUMENT_POSITION_FOLLOWING","itr","previousNode","nextNode","currIfr","ifrDict","compareNodeIframe","eCb","fCb","_this4","createInstanceOnIframe","forEachNode","eachCb","filterCb","doneCb","_this5","createIterator","_getIteratorNode","getIteratorNode","checkIframeFilter","ifrNode","handleOpenIframes","_this6","getContexts","ready","iterateThroughNodes","selector","selectors","matchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","webkitMatchesSelector","every","sel","Mark$1","Mark","ie","navigator","userAgent","opt","debug","wildcards","setupWildcardsRegExp","escapeStr","synonyms","createSynonymsRegExp","ignoreJoiners","ignorePunctuation","setupIgnoreJoinersRegExp","diacritics","createDiacriticsRegExp","createMergedBlanksRegExp","createJoinersRegExp","createWildcardsRegExp","createAccuracyRegExp","syn","sens","caseSensitive","joinerPlaceholder","k1","k2","processSynomyms","indx","original","nextChar","test","joiner","dct","acc","accuracy","ls","limiters","lsJoin","limiter","sv","kw","separateWordSearch","kwSplitted","keywords","noMatch","_callNoMatchOnInvalid","callNoMatchOnInvalidRanges","isNumeric","originalLength","cb","nodes","NodeFilter","SHOW_TEXT","textContent","matchesExclude","FILTER_REJECT","FILTER_ACCEPT","hEl","startNode","splitText","ret","repl","replaceChild","dict","sibl","startStr","endStr","wrapRangeInTextNode","previousSibling","regex","ignoreGroups","endCb","matchIdx","getTextNodes","lastIndex","_this7","wrapRangeInMappedTextNode","ranges","_this8","counter","_checkWhitespaceRange","checkWhitespaceRanges","docFrag","createDocumentFragment","normalizeTextNode","normalize","nodeType","nextSibling","nodeValue","regexp","_this9","totalMatches","acrossElements","_this10","_getSeparatedKeywords","getSeparatedKeywords","kwArr","kwArrLen","createRegExp","term","rawRanges","_this11","checkRanges","wrapRangeFromIndex","_this12","SHOW_ELEMENT","unwrapMatches","matchesSel","_opt","markRegExp","markRanges","unmark"],"mappings":"2FAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAE,QAYA,SAAAC,GACA,OAAAA,EAAAC,SAAAC,MAAAC,MAZAN,EAAAO,UAeA,SAAAJ,GACA,OAAAA,EAAAC,SAAAC,MAAAG,QAfAR,EAAAS,UAkBA,SAAAN,GACA,OAAAA,EAAAC,SAAAC,MAAAK,QAlBAV,EAAAW,cAqBA,SAAAR,GACA,OAAAA,EAAAC,SAAAC,MAAAO,YArBAZ,EAAAa,mBAwBA,SAAAV,GACA,OAAAA,EAAAC,SAAAC,MAAAS,iBAxBAd,EAAAe,qBA2BA,SAAAZ,GACA,OAAAA,EAAAC,SAAAC,MAAAW,mBA3BAhB,EAAAiB,qBA8BA,SAAAd,GACA,OAAAA,EAAAC,SAAAC,MAAAa,mBA9BAlB,EAAAmB,eAiCA,SAAAhB,GACA,OAAAA,EAAAC,SAAAC,MAAAe,aAjCApB,EAAAqB,oBAoCA,SAAAlB,GACA,OAAAA,EAAAC,SAAAC,MAAAiB,qDChDAxB,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAuB,eAIA,SAAApB,GACA,OAAAA,EAAAC,SAAAoB,KAAAC,6CCRA3B,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA0B,UAkBA,SAAAC,GACA,SAAAC,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAN,UACAO,UAAAC,EAAAC,SAAAC,qBACAC,OAAA,CAAAV,MArBA3B,EAAAsC,SAyBA,SAAAC,EAAAC,GACA,SAAAZ,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAM,SACAL,UAAAC,EAAAC,SAAAC,qBACAC,OAAA,CAAAE,EAAAC,MA5BAxC,EAAAyC,QAgCA,SAAAF,GACA,SAAAX,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAU,OACAT,UAAAC,EAAAC,SAAAC,qBACAC,OAAA,CAAAE,MAnCAvC,EAAA2C,SAuCA,WACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAAAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAI,EACA,SAAArB,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAkB,sBACAjB,UAAAC,EAAAC,SAAAgB,sBACAd,OAAA,CAAAO,EAAAI,MA5CAhD,EAAAoD,WAgDA,SAAAb,GACA,SAAAX,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAoB,WACAnB,UAAAC,EAAAC,SAAAC,qBACAC,OAAA,CAAAE,MAnDAvC,EAAAqD,UAuDA,SAAAd,GACA,SAAAX,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAqB,UACApB,UAAAC,EAAAC,SAAAC,qBACAC,OAAA,CAAAE,MA1DAvC,EAAAsD,UA8DA,SAAAf,EAAAgB,GACA,SAAA3B,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAsB,UACArB,UAAAC,EAAAC,SAAAC,qBACAC,OAAA,CAAAE,EAAAgB,MAhEA,IAAAxB,EAAcyB,EAAQ,IAEtBtB,EAAoBsB,EAAQ,GAE5B5B,EAAe4B,EAAQ,KAIvBP,EAAA,yBCpBA,IAAAQ,EAAcD,EAAQ,IACtBE,EAAeF,EAAQ,IAARA,EAA4B,GAE3CC,IAAAE,EAAA,UACAC,QAAA,SAAAC,GACA,OAAAH,EAAAG,yCCJA/D,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA8D,UA4BA,SAAAC,GAKA,SAAAnC,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAA8B,UACAE,UAAA9B,EAAA+B,YAAAC,mBACAjC,UAAA,CAAAC,EAAA+B,YAAAE,gBAAAjC,EAAA+B,YAAAG,oBACAC,UAAAnC,EAAA+B,YAAAK,mBACAjC,OAAA,CAAA0B,MArCA/D,EAAAuE,WAyCA,SAAAC,GAKA,IAAA5B,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAEAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA4B,EAAAC,QAAAC,kBACA,SAAA/C,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAuC,WACAP,UAAA9B,EAAA+B,YAAAW,oBACA3C,UAAA,CAAAC,EAAA+B,YAAAY,iBAAA3C,EAAA+B,YAAAa,qBACAT,UAAAnC,EAAA+B,YAAAc,oBACA1C,OAAA,CAAAmC,EAAA5B,EAAAI,MAxDAhD,EAAAgF,aA4DA,SAAAC,GAKA,SAAArD,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAgD,aACAhB,UAAA9B,EAAA+B,YAAAiB,sBACAjD,UAAA,CAAAC,EAAA+B,YAAAkB,eAAAjD,EAAA+B,YAAAmB,uBACAf,UAAAnC,EAAA+B,YAAAoB,sBACAhD,OAAA,CAAA4C,MArEAjF,EAAAsF,aAyEA,SAAAvB,GAKA,OAvDAwB,EA4DAC,mBAAAC,KAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EACA,OAAAL,mBAAAM,KAAA,SAAAC,GACA,OACA,OAAAA,EAAAC,KAAAD,EAAAE,MACA,OAQA,OAPAN,EAAA,CACAO,KAAAhE,EAAA+B,YAAAkC,sBACAN,KAAA,MACiBD,GACjBC,EAAA,KACAE,EAAAC,KAAA,EACAD,EAAAE,KAAA,EACAlE,EAAAC,QAAAsD,aAAAvB,GAEA,OACA8B,EAAAE,EAAAK,KACAL,EAAAE,KAAA,GACA,MAEA,OAQA,OAPAF,EAAAC,KAAA,EACAD,EAAAM,GAAAN,EAAA,UACA,EAAAnE,EAAA0E,wBAAAP,EAAAM,GAAAV,EAAAC,GACAD,GAAA,EAAAY,EAAAC,cAAA,EACAN,KAAAhE,EAAA+B,YAAAwC,sBACAC,MAAAX,EAAAM,KACiB,EAAAM,EAAAC,UAAAb,EAAAM,MAAAT,GACjBG,EAAAc,OAAA,UACAH,MAAAX,EAAAM,KAGA,QAWA,OAVAV,EAAA,CACAO,KAAAhE,EAAA+B,YAAA6C,eACAjB,KAAA,CACA9B,aAEiB6B,GACjBD,EAAA,CACAO,KAAAhE,EAAA+B,YAAA8C,sBACAlB,KAAA,MACiBD,GACjBG,EAAAc,OAAA,UACAhB,SAGA,QACA,UACA,OAAAE,EAAAiB,SAGStB,EAAA,gBAtDTuB,EA1DgC,WAAqB,IAAAC,EAAAC,KAAAC,EAAAvE,UAAmC,WAAAwE,QAAA,SAAAC,EAAAC,GAAgD,IAAAC,EAAAjC,EAAAkC,MAAAP,EAAAE,GAAgC,SAAAM,EAAAzH,GAAwB0H,EAAAH,EAAAF,EAAAC,EAAAG,EAAAE,EAAA,OAAA3H,GAA0E,SAAA2H,EAAAC,GAAuBF,EAAAH,EAAAF,EAAAC,EAAAG,EAAAE,EAAA,QAAAC,GAAyEH,OAAA3E,MAmH1W,SAAA+E,EAAAC,GACA,OAAAd,EAAAQ,MAAAN,KAAAtE,YA3DA,IAzDA0C,EA0DA0B,GAhFAjH,EAAAgI,YAgJA,SAAAjE,EAEAkB,GAKA,SAAArD,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAgG,YACAhE,UAAA9B,EAAA+B,YAAAgE,qBACAhG,UAAA,CAAAC,EAAA+B,YAAAiE,eAAAhG,EAAA+B,YAAAkE,sBACA9D,UAAAnC,EAAA+B,YAAAmE,qBACA/F,OAAA,CAAA0B,EAAAkB,MA3JAjF,EAAAqI,eA+JA,SAAAtE,GAKA,IAAAnB,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAEAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA4B,EAAAC,QAAAC,kBACA,SAAA/C,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAqG,eACArE,UAAA9B,EAAA+B,YAAAqE,yBACArG,UAAA,CAAAC,EAAA+B,YAAAsE,sBAAArG,EAAA+B,YAAAuE,0BACAnE,UAAAnC,EAAA+B,YAAAwE,yBACApG,OAAA,CAAA0B,EAAAnB,EAAAI,MA9KAhD,EAAA0I,kBAkLA,SAAA3E,GAKA,IAAAnB,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAEAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA4B,EAAAC,QAAAC,kBACA,SAAA/C,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAA0G,kBACA1E,UAAA9B,EAAA+B,YAAA0E,4BACA1G,UAAA,CAAAC,EAAA+B,YAAA2E,yBAAA1G,EAAA+B,YAAA4E,6BACAxE,UAAAnC,EAAA+B,YAAA6E,4BACAzG,OAAA,CAAA0B,EAAAnB,EAAAI,MAhMAQ,EAAQ,IAERA,EAAQ,IAER,IAAAzB,EAAcyB,EAAQ,IAEtBtB,EAAoBsB,EAAQ,GAE5BiB,EAAiBjB,EAAQ,IAEzB+C,EAA2B/C,EAAQ,KAEnC5B,EAAe4B,EAAQ,KAEvBmD,EAAcnD,EAAQ,KAEtB,SAAAmE,EAAAH,EAAAF,EAAAC,EAAAG,EAAAE,EAAAmB,EAAAC,GAA4E,IAAM,IAAAC,EAAAzB,EAAAuB,GAAAC,GAA0B/I,EAAAgJ,EAAAhJ,MAA0B,MAAAyG,GAA+B,YAAfa,EAAAb,GAAyBuC,EAAAC,KAAiB5B,EAAArH,GAAyBoH,QAAAC,QAAArH,GAAAkJ,KAAAzB,EAAAE,uCC3BzN9H,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAuE,aACAvE,EAAA8D,YACA9D,EAAAoJ,sBAkDA,WACA,SAAAC,EAAAC,gBAAAC,EAAAC,eAAA,SAAArJ,EAAAsJ,GAGA,OAAA3F,EAAA3D,EAAAsJ,EAAA1F,WACG,SAAA2F,EAAAzE,GACH,IAAAA,EACA,SAGA,GAAAA,EAAAT,QAAAmF,EAAAC,WAAAC,KAAA,CACA,IAAAC,EAAA,4BAAAC,OAAA9E,EAAA+E,GAAA,gFAGA,OAFAC,QAAAC,IAAAJ,GAEA,GAGA,IAAAK,EAEA,GAcA,OAZArK,OAAA8D,QAAA8F,GAAAU,QAAA,SAAAC,GAGA,IAAAC,EAAAC,EAAAF,EAAA,GACAG,EAEAF,EAAA,GAEAE,EAAAC,YAAAxF,EAAA+E,IACAG,EAAAO,KAAAF,KAGAL,KAlFAnK,EAAA2K,mBAwFA,WACA,SAAAtB,EAAAC,gBAAAsB,EAAAC,SAAA,SAAA1K,EAAAsJ,GAGA,OAAA3F,EAAA3D,EAAAsJ,EAAA1F,WACG,SAAA+G,EAAA7F,GACH,IAAAA,EACA,SAGA,GAAAA,EAAAT,QAAAmF,EAAAC,WAAAmB,QAAA,CACA,IAAAjB,EAAA,kBAAAC,OAAA9E,EAAA+E,GAAA,iFAGA,OAFAC,QAAAC,IAAAJ,GAEA,GAGA,IAAAkB,EAEA,GAcA,OAZAlL,OAAA8D,QAAAkH,GAAAV,QAAA,SAAAC,GAGA,IAAAY,EAAAV,EAAAF,EAAA,GACAa,EAEAD,EAAA,GAEAC,EAAAT,YAAAxF,EAAA+E,IACAgB,EAAAN,KAAAQ,KAGAF,KAvHAxH,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,IAERA,EAAQ,KAERA,EAAQ,IAER,IAAA6F,EAAgB7F,EAAQ,IAExB+F,EAAgB/F,EAAQ,IAExBoH,EAAapH,EAAQ,IAErBmG,EAAenG,EAAQ,MAEvB,SAAA+G,EAAAY,EAAAC,GAAiC,OAMjC,SAAAD,GAA+B,GAAAE,MAAAC,QAAAH,GAAA,OAAAA,EANEI,CAAAJ,IAIjC,SAAAA,EAAAC,GAAwC,KAAAI,OAAAC,YAAA3L,OAAAqL,IAAA,uBAAArL,OAAA4L,UAAAC,SAAAC,KAAAT,IAAyG,OAAU,IAAAU,EAAA,GAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAjJ,EAAoB,IAAM,QAAAkJ,EAAAC,EAAAf,EAAAK,OAAAC,cAA0CK,GAAAG,EAAAC,EAAAjG,QAAAiD,QAA4C2C,EAAAnB,KAAAuB,EAAAhM,QAAqBmL,GAAAS,EAAA/I,SAAAsI,GAAlCU,GAAA,IAAyE,MAAAjE,GAAckE,GAAA,EAAWC,EAAAnE,EAAY,QAAU,IAAMiE,GAAA,MAAAI,EAAA,QAAAA,EAAA,SAAmD,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAJ5dM,CAAAhB,EAAAC,IAEjC,WAA6B,UAAAgB,UAAA,wDAFIC,GAQjC,SAAA9H,EAAApE,GAKA,OAAAA,EAAAC,SAAAkM,gBAGA,SAAAxI,EAAA3D,EAEA6J,GAMA,OADAzF,EAAApE,GACA6J;;;;;;;AC/C4DuC,EAAAvM,QAG3D,SAAAwM,GAA2B,aAE5BA,OAAAC,eAAA,WAAAD,EAAA,QAAAA,EAIA,IAAAE,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QAuLA,SAAA9F,GACA,OAAA+F,EAAAF,EAAA7F,KAtLAgG,UACAC,QA8NA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGA,WAAAG,EAGA,QAOA,CAAAF,EADA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA7OAE,QAgPA,SAAAtG,GACA,OAAAyF,EAAAO,EAAAhG,KAhPAuG,SAmPA,SAAAvG,GACA,OAAA0F,EAAAM,EAAAhG,KAnPAwG,YAsPA,SAAAxG,GACA,OAAA2F,EAAAK,EAAAhG,KArPAyG,UACAC,QAoRA,SAAAC,GACA,IAGAC,EAAAP,EAHAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAAAV,EAAA,KAFAS,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA7RAS,QAiSA,SAAA9G,GACA,OAAAyF,EAAAgB,EAAAzG,KAjSA+G,SAoSA,SAAA/G,GACA,OAAA0F,EAAAe,EAAAzG,KApSAgH,YAuSA,SAAAhH,GACA,OAAA2F,EAAAc,EAAAzG,KAtSAiH,UACAC,QA4UA,SAAAlH,GACA,OAAAuF,EAAA0B,EAAAjH,KA5UAmH,QA+UA,SAAAnH,GACA,OAAAwF,EAAAyB,EAAAjH,KA/UAoH,SAkVA,SAAApH,GACA,OAAA0F,EAAAuB,EAAAjH,KAlVAqH,YAqVA,SAAArH,GACA,OAAA2F,EAAAsB,EAAAjH,KApVAsH,WACAC,SAmWA,SAAAvH,GACA,OAAAuF,EAAA+B,EAAAtH,KAnWAwH,SAsWA,SAAAxH,GACA,OAAAwF,EAAA8B,EAAAtH,KAtWAyH,SAyWA,SAAAzH,GACA,OAAAyF,EAAA6B,EAAAtH,KAzWA0H,aA4WA,SAAA1H,GACA,OAAA2F,EAAA2B,EAAAtH,KA3WA2H,cACAC,YAkeA,SAAA5H,GACA,OAAAuF,EAAAoC,EAAA3H,KAleA6H,YAqeA,SAAA7H,GACA,OAAAwF,EAAAmC,EAAA3H,KAreA8H,YAweA,SAAA9H,GACA,OAAAyF,EAAAkC,EAAA3H,KAxeA+H,aA2eA,SAAA/H,GACA,OAAA0F,EAAAiC,EAAA3H,KA3eAgI,YA8eA,SAAAhI,GACA,OAAA6F,EAAA8B,EAAA3H,KA9eAiI,YAifA,SAAAjI,GACA,OAAA4F,EAAA+B,EAAA3H,KAhfAkI,UACAC,UACAC,QAqZA,SAAApI,GACA,OAAA+F,EAAAoC,EAAAnI,KApZAqI,UACAC,UACAvC,UAEAwC,UACAC,QAscA,SAAAxI,GACA,OAAAqI,EAAAE,EAAAvI,KAtcAyI,QAycA,SAAAzI,GACA,OAAAsI,EAAAC,EAAAvI,MAtcA,SAAAuF,EAAAmD,GACA,IAMAvC,EAAAE,EANAsC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EA0BA,OAvBAE,GAAAF,EACA3C,EAAA,EACAwC,GAAAK,EACA7C,GAAAyC,EAAAC,GAAAI,EACAL,GAAAI,EACA7C,EAAA,GAAA0C,EAAAF,GAAAM,EACAJ,GAAAG,IACA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAEA9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MAEA,IACAA,GAAA,KAEAE,GAAAyC,EAAAE,GAAA,EASA,CAAA7C,EAAA,KAPA6C,GAAAF,EACA,EACAzC,GAAA,GACA4C,GAAAD,EAAAF,GAEAG,GAAA,EAAAD,EAAAF,IAEA,IAAAzC,GAGA,SAAAb,EAAAkD,GACA,IAMAvC,EAAAC,EANAuC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EAwBA,OApBA1C,EADA,GAAA4C,EACA,EAEAC,EAAAD,EAAA,OAEAA,GAAAF,EACA3C,EAAA,EACAwC,GAAAK,EACA7C,GAAAyC,EAAAC,GAAAI,EACAL,GAAAI,EACA7C,EAAA,GAAA0C,EAAAF,GAAAM,EACAJ,GAAAG,IACA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAEA9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MAEA,IACAA,GAAA,KAIA,CAAAA,EAAAC,EAFA4C,EAAA,YAKA,SAAAvD,EAAAiD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvC,EAAAZ,EAAAmD,GAAA,GACAQ,EAAA,MAAAH,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IAEA,OAAA1C,EAAA,IAAA+C,EAAA,IAAAL,GAGA,SAAAnD,EAAAgD,GACA,IAGAS,EAHAR,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAOA,OAJAS,EAAAJ,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAQ,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAP,EAAAO,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAxD,EAAA+C,GACA,OAAAU,EAAAC,KAAAC,UAAAZ,IAGA,SAAA9C,EAAA8C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGAC,IAAA,OAAAI,KAAAQ,KAAAZ,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAQ,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAQ,KAAAV,EAAA,iBAAAA,EAAA,MAEA,IAAAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EACAa,EAAA,MAAAf,EAAA,MAAAC,EAAA,MAAAC,EAEA,WAAAW,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA7D,EAAA6C,GACA,IAAAiB,EAAA/D,EAAA8C,GACAc,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAeA,OAXAF,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAMA,CAJA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IASA,SAAA1D,EAAAE,GACA,IAGA0D,EAAAC,EAAAC,EAAApB,EAAAqB,EAHA5D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGA,MAAAE,EAEA,OADA2D,EAAA,IAAA1D,EACA0D,KAOAH,EAAA,EAAAvD,GAHAwD,EADAxD,EAAA,GACAA,GAAA,EAAAD,GAEAC,EAAAD,EAAAC,EAAAD,GAGAsC,EAAA,QACA,QAAA1E,EAAA,EAAiBA,EAAA,EAAOA,KACxB8F,EAAA3D,EAAA,MAAAnC,EAAA,IACA,GAAA8F,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEAlB,EAAA1E,GAAA,IAAA+F,EAGA,OAAArB,EAmCA,SAAAjC,EAAAE,GACA,IAAAR,EAAAQ,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAqD,EAAAjB,KAAAkB,MAAA9D,GAAA,EAEA+D,EAAA/D,EAAA4C,KAAAkB,MAAA9D,GACAgE,EAAA,IAAAtD,GAAA,EAAAT,GACAgE,EAAA,IAAAvD,GAAA,EAAAT,EAAA8D,GACAG,EAAA,IAAAxD,GAAA,EAAAT,GAAA,EAAA8D,IACArD,EAAA,IAAAA,EAEA,OAAAmD,GACA,OACA,OAAAnD,EAAAwD,EAAAF,GACA,OACA,OAAAC,EAAAvD,EAAAsD,GACA,OACA,OAAAA,EAAAtD,EAAAwD,GACA,OACA,OAAAF,EAAAC,EAAAvD,GACA,OACA,OAAAwD,EAAAF,EAAAtD,GACA,OACA,OAAAA,EAAAsD,EAAAC,IA+BA,SAAAnD,EAAAqD,GACA,IAIAtG,EAAA6C,EAAAqD,EAAAK,EAJApE,EAAAmE,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGA1G,EAAA+E,KAAAkB,MAAA,EAAA9D,GAEA+D,EAAA,EAAA/D,EAAAnC,EACA,MAAAA,KACAkG,EAAA,EAAAA,GAEAK,EAAAC,EAAAN,IALArD,EAAA,EAAA4D,GAKAD,GAEAxG,GACA,QACA,OACA,OAAA2E,EAAA9B,EAAkB+B,EAAA2B,EAAO1B,EAAA2B,EAAQ,MACjC,OAAA7B,EAAA4B,EAAkB3B,EAAA/B,EAAOgC,EAAA2B,EAAQ,MACjC,OAAA7B,EAAA6B,EAAmB5B,EAAA/B,EAAOgC,EAAA0B,EAAO,MACjC,OAAA5B,EAAA6B,EAAmB5B,EAAA2B,EAAO1B,EAAAhC,EAAO,MACjC,OAAA8B,EAAA4B,EAAkB3B,EAAA4B,EAAQ3B,EAAAhC,EAAO,MACjC,OAAA8B,EAAA9B,EAAkB+B,EAAA4B,EAAQ3B,EAAA0B,EAG1B,WAAA5B,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAqD,GACA,IAIAhC,EAAAC,EAAAC,EAJA+B,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAlB,EAAAkB,EAAA,OACAxB,EAAAwB,EAAA,OAMA,OAHAhC,EAAA,EAAAI,KAAAD,IAAA,EAAA8B,GAAA,EAAAzB,MACAP,EAAA,EAAAG,KAAAD,IAAA,EAAA+B,GAAA,EAAA1B,MACAN,EAAA,EAAAE,KAAAD,IAAA,EAAAW,GAAA,EAAAN,MACA,KAAAR,EAAA,IAAAC,EAAA,IAAAC,GAoBA,SAAAX,EAAAyB,GACA,IAGAhB,EAAAC,EAAAC,EAHAW,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAqBA,OAjBAf,GAAA,MAAAY,EAAA,OAAAC,EAAA,MAAAC,EACAb,EAAA,MAAAW,GAAA,KAAAC,EAAA,MAAAC,EAGAf,GALAA,EAAA,OAAAa,GAAA,OAAAC,GAAA,MAAAC,GAKA,eAAAX,KAAAQ,IAAAZ,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAG,KAAAQ,IAAAX,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAE,KAAAQ,IAAAV,EAAA,YACAA,GAAA,MAEAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GAEA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAwB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAeA,OAXAF,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAMA,CAJA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IASA,SAAArB,EAAAyC,GACA,IAGAtB,EAAAC,EAAAC,EAAAqB,EAHA1E,EAAAyE,EAAA,GACAE,EAAAF,EAAA,GACAjC,EAAAiC,EAAA,GAeA,OAZAzE,GAAA,EAEA0E,GADAtB,EAAA,IAAApD,EAAA,OACA,kBAEAoD,EAAA,IAAAV,KAAAQ,KAAAlD,EAAA,WACA0E,EAAAhC,KAAAQ,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAAwB,EAAA,IAAAD,EAAA,qBAAAhC,KAAAQ,IAAAyB,EAAA,IAAAD,EAAA,GAEArB,IAAA,iBAAAA,EAAA,SAAAqB,EAAAlC,EAAA,0BAAAE,KAAAQ,IAAAwB,EAAAlC,EAAA,OAEA,CAAAW,EAAAC,EAAAC,GAGA,SAAA3D,EAAA+E,GACA,IAGAG,EAAA9E,EAAAyE,EAHAvE,EAAAyE,EAAA,GACAE,EAAAF,EAAA,GACAjC,EAAAiC,EAAA,GASA,OANAG,EAAAlC,KAAAmC,MAAArC,EAAAmC,IACA7E,EAAA,IAAA8E,EAAA,EAAAlC,KAAAoC,IACA,IACAhF,GAAA,KAEAyE,EAAA7B,KAAAqC,KAAAJ,IAAAnC,KACA,CAAAxC,EAAAuE,EAAAzE,GAGA,SAAAmC,EAAAtI,GACA,OAAAkI,EAAAG,EAAArI,IAGA,SAAAuI,EAAA8C,GACA,IAGAL,EAAAnC,EAAAoC,EAHA5E,EAAAgF,EAAA,GACAT,EAAAS,EAAA,GACAlF,EAAAkF,EAAA,GAMA,OAHAJ,EAAA9E,EAAA,MAAA4C,KAAAoC,GACAH,EAAAJ,EAAA7B,KAAAuC,IAAAL,GACApC,EAAA+B,EAAA7B,KAAAwC,IAAAN,GACA,CAAA5E,EAAA2E,EAAAnC,GAWA,SAAAlB,EAAA6D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAGAzL,EAAA,GACA,QAAAzH,KAAA8J,EACArC,EAAAC,KAAAC,UAAAmC,EAAA9J,OAGA,IAAAmT,EAAA,WACA,WAAAC,GAGA,QAAAC,KAAA1P,EAAA,CAEAwP,EAAAE,EAAA,gBAAAA,GAEA,gBAAApT,GAGA,MAFA,iBAAAA,IACAA,EAAAqC,MAAAK,UAAA2Q,MAAAzQ,KAAA/I,YACA6J,EAAA0P,GAAApT,IALA,CAOGoT,GAEH,IAAAE,EAAA,cAAAC,KAAAH,GACAI,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAGAJ,EAAAM,GAAAN,EAAAM,IAAA,IAEAC,GAAAP,EAAAE,GAAA,SAAAA,GACA,gBAAApT,GACA,iBAAAA,IACAA,EAAAqC,MAAAK,UAAA2Q,MAAAzQ,KAAA/I,YAEA,IAAAsO,EAAAzE,EAAA0P,GAAApT,GACA,oBAAAmI,QAAApO,IAAAoO,EACA,OAAAA,EAEA,QAAA/F,EAAA,EAAqBA,EAAA+F,EAAArO,OAAgBsI,IACrC+F,EAAA/F,GAAA+E,KAAAuM,MAAAvL,EAAA/F,IACA,OAAA+F,GAXA,CAaGiL,GAKH,IAAAD,EAAA,WACAhV,KAAAwV,MAAA,IAKAR,EAAAzQ,UAAAkR,WAAA,SAAAC,EAAAzV,GACA,IAAA0V,EAAA1V,EAAA,GACA,YAAArE,IAAA+Z,EAEA3V,KAAA4V,UAAAF,IAGA,iBAAAC,IACAA,EAAAzR,MAAAK,UAAA2Q,MAAAzQ,KAAAxE,IAGAD,KAAA6V,UAAAH,EAAAC,KAIAX,EAAAzQ,UAAAsR,UAAA,SAAAH,EAAAC,GAIA,OAHA3V,KAAA0V,QACA1V,KAAAwV,MAAA,GACAxV,KAAAwV,MAAAE,GAAAC,EACA3V,MAMAgV,EAAAzQ,UAAAqR,UAAA,SAAAF,GACA,IAAAI,EAAA9V,KAAAwV,MAAAE,GACA,IAAAI,EAAA,CACA,IAAAC,EAAA/V,KAAA0V,MACAL,EAAArV,KAAAwV,MAAAO,GACAD,EAAAf,EAAAgB,GAAAL,GAAAL,GAEArV,KAAAwV,MAAAE,GAAAI,EAEA,OAAAA,GAGA,qCAAA7S,QAAA,SAAAyS,GACAV,EAAAzQ,UAAAmR,GAAA,SAAAI,GACA,OAAA9V,KAAAyV,WAAAC,EAAAha,cAIA,IAAAsa,EAAAjB,EAEAkB,EAAA,CACAtK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAMAoB,EAAA,CACAC,UACAC,UACAC,OAqHA,SAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACA,OAAAC,KAAArB,MAAA,MAtHAsB,OAyHA,SAAAF,GACA,IAAAG,EAAAL,EAAAE,GACA,OAAAG,KAAAvB,MAAA,MA1HAwB,SACAC,SA4HA,SAAAL,GACA,IAAAR,EAAAK,EAAAG,GACA,OAAAR,EACAA,EAAA,IAEAA,EAAAM,EAAAE,IACAR,EAAA,IAEAA,EAAAY,EAAAJ,IACAR,EAAA,QADA,GAlIAc,UAwIA,SAAAL,EAAAtL,GACA,IAAAA,OAAArP,IAAAqP,GAAA,IAAAsL,EAAA5a,OAAAsP,EAAAsL,EAAA,GACA,UAAAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,KAEAtL,GAAA,GAAAA,EAAA,EACA4L,EAAA7N,KAAAuM,MAAA,IAAAtK,IACA,KA/IA6L,UAmJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAEA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAtJAS,aACAC,cAgKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAEA,IAAAnO,EAAAI,KAAAuM,MAAAgB,EAAA,YACA1N,EAAAG,KAAAuM,MAAAgB,EAAA,YACAzN,EAAAE,KAAAuM,MAAAgB,EAAA,YAEA,aAAA3N,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAvKAoO,iBACAC,UAgLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAEA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAnLAW,aACAC,UA+LA,SAAA9M,EAAAwM,GAIA,YAHAnb,IAAAmb,IACAA,OAAAnb,IAAA2O,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACA3O,IAAAmb,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAnMAtL,QAsMA,SAAA9C,GACA,OAAA2O,EAAA3O,EAAAuM,MAAA,QApMA,SAAAiB,EAAAG,GACA,GAAAA,EAAA,CAGA,IAMA3N,EAAA,QACAsC,EAAA,EACAsM,EAAAjB,EAAAiB,MARA,0BASAC,EAAA,GACA,GAAAD,EAAA,CACAA,IAAA,GACAC,EAAAD,EAAA,GACA,QAAAtT,EAAA,EAAqBA,EAAA0E,EAAAhN,OAAgBsI,IACrC0E,EAAA1E,GAAAwT,SAAAF,EAAAtT,GAAAsT,EAAAtT,GAAA,IAEAuT,IACAvM,EAAAjC,KAAAuM,MAAAkC,SAAAD,IAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MAnBA,yCAmBA,CACAC,EAAAD,EAAA,GACAA,IAAA,GACA,QAAAtT,EAAA,EAAqBA,EAAA0E,EAAAhN,OAAgBsI,IACrC0E,EAAA1E,GAAAwT,SAAAF,EAAArC,MAAA,EAAAjR,EAAA,EAAAA,EAAA,OAEAuT,IACAvM,EAAAjC,KAAAuM,MAAAkC,SAAAD,EAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MA5BA,4FA4BA,CACA,QAAAtT,EAAA,EAAqBA,EAAA0E,EAAAhN,OAAgBsI,IACrC0E,EAAA1E,GAAAwT,SAAAF,EAAAtT,EAAA,IAEAgH,EAAAyM,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAjCA,8GAiCA,CACA,QAAAtT,EAAA,EAAqBA,EAAA0E,EAAAhN,OAAgBsI,IACrC0E,EAAA1E,GAAA+E,KAAAuM,MAAA,KAAAmC,WAAAH,EAAAtT,EAAA,KAEAgH,EAAAyM,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAtCA,SAsCA,CACA,kBAAAA,EAAA,GACA,gBAGA,KADA5O,EAAAsN,EAAAsB,EAAA,KAEA,OAIA,QAAAtT,EAAA,EAAkBA,EAAA0E,EAAAhN,OAAgBsI,IAClC0E,EAAA1E,GAAA0T,EAAAhP,EAAA1E,GAAA,OASA,OAHAgH,EAJAA,GAAA,GAAAA,EAIA0M,EAAA1M,EAAA,KAHA,EAKAtC,EAAA,GAAAsC,EACAtC,GAGA,SAAAyN,EAAAE,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,4GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAnR,EAAAuR,EAAAF,SAAAF,EAAA,WACAlR,EAAAsR,EAAAD,WAAAH,EAAA,WACAjR,EAAAqR,EAAAD,WAAAH,EAAA,WACAtM,EAAA0M,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAA3Q,EAAAC,EAAAC,EAAA2E,KAIA,SAAAyL,EAAAJ,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,0GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACAnR,EAAAuR,EAAAF,SAAAF,EAAA,WACApO,EAAAwO,EAAAD,WAAAH,EAAA,WACAzO,EAAA6O,EAAAD,WAAAH,EAAA,WACAtM,EAAA0M,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAA3Q,EAAA+C,EAAAL,EAAAmC,KA+CA,SAAA+L,EAAAT,EAAAQ,GAIA,YAHAnb,IAAAmb,IACAA,OAAAnb,IAAA2a,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAAnO,EAAAI,KAAAuM,MAAAgB,EAAA,YACA1N,EAAAG,KAAAuM,MAAAgB,EAAA,YACAzN,EAAAE,KAAAuM,MAAAgB,EAAA,YACA,cAAA3N,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAAiO,GAAAR,EAAA,WAUA,SAAAa,EAAAX,EAAAM,GAIA,YAHAnb,IAAAmb,IACAA,OAAAnb,IAAA6a,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAM,EAAA,IAkBA,SAAAY,EAAAE,EAAA9O,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAA8O,GAAA5O,GAGA,SAAA4N,EAAAgB,GACA,IAAAC,EAAAD,EAAArT,SAAA,IAAAuT,cACA,OAAAD,EAAAnc,OAAA,MAAAmc,IAKA,IAAAR,EAAA,GACA,QAAAU,KAAA/B,EACAqB,EAAArB,EAAA+B,MAOA,IAAAC,EAAA,SAAAC,GACA,OAAAA,aAAAD,EACAC,EAEAlY,gBAAAiY,GAIAjY,KAAAmY,OAAA,EACAnY,KAAA2V,OAAA,CACAhN,IAAA,QACAxC,IAAA,QACAS,IAAA,QACA2D,IAAA,QACAK,KAAA,UACAmM,MAAA,QAKA,iBAAAmB,GACApC,EAAAI,EAAAC,QAAA+B,IAEAlY,KAAA6V,UAAA,MAAAC,IACGA,EAAAI,EAAAE,QAAA8B,IACHlY,KAAA6V,UAAA,MAAAC,IACGA,EAAAI,EAAAQ,OAAAwB,KACHlY,KAAA6V,UAAA,MAAAC,GAEE,iBAAAoC,SAEFtc,KADAka,EAAAoC,GACAtP,QAAAhN,IAAAka,EAAA3C,IACAnT,KAAA6V,UAAA,MAAAC,QACGla,IAAAka,EAAAxP,QAAA1K,IAAAka,EAAAsC,UACHpY,KAAA6V,UAAA,MAAAC,QACGla,IAAAka,EAAAhP,QAAAlL,IAAAka,EAAAhd,MACHkH,KAAA6V,UAAA,MAAAC,QACGla,IAAAka,EAAA3M,QAAAvN,IAAAka,EAAAuC,UACHrY,KAAA6V,UAAA,MAAAC,QACGla,IAAAka,EAAAjL,QAAAjP,IAAAka,EAAA/I,MACH/M,KAAA6V,UAAA,OAAAC,MAnCA,IAAAmC,EAAAC,GAcA,IAAApC,GA0BAmC,EAAA1T,UAAA,CACA+T,QAAA,WACA,OAAAtY,KAAAmY,OAEAxP,IAAA,WACA,OAAA3I,KAAAuY,SAAA,MAAA7c,YAEAyK,IAAA,WACA,OAAAnG,KAAAuY,SAAA,MAAA7c,YAEAkL,IAAA,WACA,OAAA5G,KAAAuY,SAAA,MAAA7c,YAEA6O,IAAA,WACA,OAAAvK,KAAAuY,SAAA,MAAA7c,YAEAkP,KAAA,WACA,OAAA5K,KAAAuY,SAAA,OAAA7c,YAGA8c,SAAA,WACA,OAAAxY,KAAA2V,OAAAhN,KAEA8P,SAAA,WACA,OAAAzY,KAAA2V,OAAAxP,KAEAuS,SAAA,WACA,OAAA1Y,KAAA2V,OAAA/O,KAEA+R,SAAA,WACA,IAAAhD,EAAA3V,KAAA2V,OACA,WAAAA,EAAAoB,MACApB,EAAApL,IAAA3H,OAAA,CAAA+S,EAAAoB,QAEApB,EAAApL,KAEAqO,UAAA,WACA,OAAA5Y,KAAA2V,OAAA/K,MAEAiO,UAAA,WACA,IAAAlD,EAAA3V,KAAA2V,OACA,OAAAA,EAAAhN,IAAA/F,OAAA,CAAA+S,EAAAoB,SAEA+B,UAAA,WACA,IAAAnD,EAAA3V,KAAA2V,OACA,OAAAA,EAAAxP,IAAAvD,OAAA,CAAA+S,EAAAoB,SAEAA,MAAA,SAAA/M,GACA,YAAApO,IAAAoO,EACAhK,KAAA2V,OAAAoB,OAEA/W,KAAA6V,UAAA,QAAA7L,GACAhK,OAGAmT,IAAA,SAAAnJ,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAiF,MAAA,SAAAjF,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAoC,KAAA,SAAApC,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAgP,IAAA,SAAAhP,GAKA,OAJAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAEAhK,KAAA+Y,WAAA,QAAA/O,IAEAiP,WAAA,SAAAjP,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAoO,UAAA,SAAApO,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAkP,YAAA,SAAAlP,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAqO,UAAA,SAAArO,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAmP,UAAA,SAAAnP,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEAlR,MAAA,SAAAkR,GACA,OAAAhK,KAAA+Y,WAAA,QAAA/O,IAEA+C,KAAA,SAAA/C,GACA,OAAAhK,KAAA+Y,WAAA,SAAA/O,IAEAgH,QAAA,SAAAhH,GACA,OAAAhK,KAAA+Y,WAAA,SAAA/O,IAEA6K,OAAA,SAAA7K,GACA,OAAAhK,KAAA+Y,WAAA,SAAA/O,IAEAkC,MAAA,SAAAlC,GACA,OAAAhK,KAAA+Y,WAAA,SAAA/O,IAGA4M,UAAA,WACA,OAAAV,EAAAU,UAAA5W,KAAA2V,OAAAhN,MAEAmO,UAAA,WACA,OAAAZ,EAAAY,UAAA9W,KAAA2V,OAAAhN,IAAA3I,KAAA2V,OAAAoB,QAEAC,WAAA,WACA,OAAAd,EAAAc,WAAAhX,KAAA2V,OAAAhN,IAAA3I,KAAA2V,OAAAoB,QAEAE,cAAA,WACA,OAAAf,EAAAe,cAAAjX,KAAA2V,OAAAhN,IAAA3I,KAAA2V,OAAAoB,QAEAI,UAAA,WACA,OAAAjB,EAAAiB,UAAAnX,KAAA2V,OAAAxP,IAAAnG,KAAA2V,OAAAoB,QAEAK,WAAA,WACA,OAAAlB,EAAAkB,WAAApX,KAAA2V,OAAAxP,IAAAnG,KAAA2V,OAAAoB,QAEAM,UAAA,WACA,OAAAnB,EAAAmB,UAAArX,KAAA2V,OAAApL,IAAAvK,KAAA2V,OAAAoB,QAEAtL,QAAA,WACA,OAAAyK,EAAAzK,QAAAzL,KAAA2V,OAAAhN,IAAA3I,KAAA2V,OAAAoB,QAGAqC,UAAA,WACA,IAAAzQ,EAAA3I,KAAA2V,OAAAhN,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGA0Q,WAAA,WAIA,IAFA,IAAA1Q,EAAA3I,KAAA2V,OAAAhN,IACA2Q,EAAA,GACArV,EAAA,EAAiBA,EAAA0E,EAAAhN,OAAgBsI,IAAA,CACjC,IAAAsV,EAAA5Q,EAAA1E,GAAA,IACAqV,EAAArV,GAAAsV,GAAA,OAAAA,EAAA,MAAAvQ,KAAAQ,KAAA+P,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,IAAAC,EAAA1Z,KAAAqZ,aACAM,EAAAF,EAAAJ,aACA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAA7Z,KAAAwZ,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAAnR,EAAA3I,KAAA2V,OAAAhN,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAGAoR,MAAA,WACA,OAAA/Z,KAAA8Z,QAGAE,OAAA,WAEA,IADA,IAAArR,EAAA,GACA1E,EAAA,EAAiBA,EAAA,EAAOA,IACxB0E,EAAA1E,GAAA,IAAAjE,KAAA2V,OAAAhN,IAAA1E,GAGA,OADAjE,KAAA6V,UAAA,MAAAlN,GACA3I,MAGAia,QAAA,SAAAtP,GACA,IAAAxE,EAAAnG,KAAA2V,OAAAxP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA3K,KAAA6V,UAAA,MAAA1P,GACAnG,MAGAka,OAAA,SAAAvP,GACA,IAAAxE,EAAAnG,KAAA2V,OAAAxP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA3K,KAAA6V,UAAA,MAAA1P,GACAnG,MAGAma,SAAA,SAAAxP,GACA,IAAAxE,EAAAnG,KAAA2V,OAAAxP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA3K,KAAA6V,UAAA,MAAA1P,GACAnG,MAGAoa,WAAA,SAAAzP,GACA,IAAAxE,EAAAnG,KAAA2V,OAAAxP,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAwE,EACA3K,KAAA6V,UAAA,MAAA1P,GACAnG,MAGAqa,OAAA,SAAA1P,GACA,IAAAJ,EAAAvK,KAAA2V,OAAApL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACA3K,KAAA6V,UAAA,MAAAtL,GACAvK,MAGAsa,QAAA,SAAA3P,GACA,IAAAJ,EAAAvK,KAAA2V,OAAApL,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACA3K,KAAA6V,UAAA,MAAAtL,GACAvK,MAGAua,UAAA,WACA,IAAA5R,EAAA3I,KAAA2V,OAAAhN,IAEAqB,EAAA,GAAArB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADA3I,KAAA6V,UAAA,OAAA7L,QACAhK,MAGAwa,QAAA,SAAA7P,GACA,IAAAoM,EAAA/W,KAAA2V,OAAAoB,MAEA,OADA/W,KAAA6V,UAAA,QAAAkB,IAAApM,GACA3K,MAGAya,QAAA,SAAA9P,GACA,IAAAoM,EAAA/W,KAAA2V,OAAAoB,MAEA,OADA/W,KAAA6V,UAAA,QAAAkB,IAAApM,GACA3K,MAGA0a,OAAA,SAAAC,GACA,IAAAxU,EAAAnG,KAAA2V,OAAAxP,IACA6S,GAAA7S,EAAA,GAAAwU,GAAA,IAGA,OAFAxU,EAAA,GAAA6S,EAAA,MAAAA,IACAhZ,KAAA6V,UAAA,MAAA1P,GACAnG,MAOA4a,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACAzQ,OAAAxO,IAAAkf,EAAA,GAAAA,EAEA3R,EAAA,EAAAiB,EAAA,EACAa,EALAjL,KAKA+W,QAAA0C,EAAA1C,QAEAgE,IAAA5R,EAAA8B,IAAA,EAAA9B,KAAA8B,IAAA,EAAA9B,EAAA8B,IAAA,KACA+P,EAAA,EAAAD,EAEA,OAAA/a,KACA2I,IACAoS,EAZA/a,KAYAmT,MAAA6H,EAAAvB,EAAAtG,MACA4H,EAbA/a,KAaAiP,QAAA+L,EAAAvB,EAAAxK,QACA8L,EAdA/a,KAcAoM,OAAA4O,EAAAvB,EAAArN,QAEA2K,MAhBA/W,KAgBA+W,QAAA3M,EAAAqP,EAAA1C,SAAA,EAAA3M,KAGA6Q,OAAA,WACA,OAAAjb,KAAA2I,OAGAuS,MAAA,WAKA,IAGApiB,EAAAiG,EAHAoc,EAAA,IAAAlD,EACAmD,EAAApb,KAAA2V,OACA0F,EAAAF,EAAAxF,OAGA,QAAA2F,KAAAF,EACAA,EAAA9V,eAAAgW,KACAxiB,EAAAsiB,EAAAE,GAEA,oBADAvc,EAAA,GAAcyF,SAAAC,KAAA3L,IAEduiB,EAAAC,GAAAxiB,EAAAoc,MAAA,GACK,oBAAAnW,EACLsc,EAAAC,GAAAxiB,EAEAgK,QAAAvD,MAAA,0BAAAzG,IAKA,OAAAqiB,IAIAlD,EAAA1T,UAAAgX,OAAA,CACA5S,IAAA,uBACAxC,IAAA,iCACAS,IAAA,6BACA2D,IAAA,gCACAK,KAAA,qCAGAqN,EAAA1T,UAAAiX,MAAA,CACA7S,IAAA,cACAxC,IAAA,cACAS,IAAA,cACA2D,IAAA,cACAK,KAAA,mBAGAqN,EAAA1T,UAAAqR,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAA3V,KAAA2V,OACAG,EAAA,GAEA7R,EAAA,EAAgBA,EAAAyR,EAAA/Z,OAAkBsI,IAClC6R,EAAAJ,EAAA+F,OAAAxX,IAAA0R,EAAAD,GAAAzR,GAQA,OALA,IAAA0R,EAAAoB,QACAjB,EAAA7K,EAAA0K,EAAAoB,OAIAjB,GAGAmC,EAAA1T,UAAAsR,UAAA,SAAAH,EAAAI,GACA,IAIA7R,EAkCAyX,EAtCA/F,EAAA3V,KAAA2V,OACA4F,EAAAvb,KAAAub,OACAC,EAAAxb,KAAAwb,MACAzE,EAAA,EAKA,GAFA/W,KAAAmY,OAAA,EAEA,UAAAzC,EACAqB,EAAAjB,OACE,GAAAA,EAAAna,OAEFga,EAAAD,GAAAI,EAAAZ,MAAA,EAAAQ,EAAA/Z,QACAob,EAAAjB,EAAAJ,EAAA/Z,aACE,QAAAC,IAAAka,EAAAJ,EAAA+F,OAAA,KAEF,IAAAxX,EAAA,EAAaA,EAAAyR,EAAA/Z,OAAkBsI,IAC/B0R,EAAAD,GAAAzR,GAAA6R,EAAAJ,EAAA+F,OAAAxX,IAGA8S,EAAAjB,EAAA7K,OACE,QAAArP,IAAAka,EAAAyF,EAAA7F,GAAA,KAEF,IAAAiG,EAAAJ,EAAA7F,GAEA,IAAAzR,EAAA,EAAaA,EAAAyR,EAAA/Z,OAAkBsI,IAC/B0R,EAAAD,GAAAzR,GAAA6R,EAAA6F,EAAA1X,IAGA8S,EAAAjB,EAAAiB,MAKA,GAFApB,EAAAoB,MAAA/N,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAAnN,IAAAmb,EAAApB,EAAAoB,UAEA,UAAArB,EACA,SAMA,IAAAzR,EAAA,EAAYA,EAAAyR,EAAA/Z,OAAkBsI,IAC9ByX,EAAA1S,KAAAC,IAAA,EAAAD,KAAAD,IAAAyS,EAAA9F,GAAAzR,GAAA0R,EAAAD,GAAAzR,KACA0R,EAAAD,GAAAzR,GAAA+E,KAAAuM,MAAAmG,GAIA,QAAAE,KAAAL,EACAK,IAAAlG,IACAC,EAAAiG,GAAA5F,EAAAN,GAAAkG,GAAAjG,EAAAD,KAIA,UAGAuC,EAAA1T,UAAAgU,SAAA,SAAA7C,EAAAzV,GACA,IAAA6V,EAAA7V,EAAA,GAEA,YAAArE,IAAAka,EAEA9V,KAAA4V,UAAAF,IAIA,iBAAAI,IACAA,EAAA5R,MAAAK,UAAA2Q,MAAAzQ,KAAAxE,IAGAD,KAAA6V,UAAAH,EAAAI,GACA9V,OAGAiY,EAAA1T,UAAAwU,WAAA,SAAArD,EAAAmG,EAAA7R,GACA,IAAA8R,EAAA9b,KAAA2V,OAAAD,GACA,YAAA9Z,IAAAoO,EAEA8R,EAAAD,GACE7R,IAAA8R,EAAAD,GAEF7b,MAIA8b,EAAAD,GAAA7R,EACAhK,KAAA6V,UAAAH,EAAAoG,GAEA9b,OAGA,oBAAA+b,SACAA,OAAA9D,SAGA,IAiBApV,EAjBAmZ,EAAA/D,EAKAgE,EAAA,CAIAC,KAAA,aAOAC,KACAtZ,EAAA,EACA,WACA,OAAAA,MAUAuZ,cAAA,SAAAtjB,GACA,OAAAA,SASAqL,QAAA,SAAArL,GACA,GAAAoL,MAAAC,SAAAD,MAAAC,QAAArL,GACA,SAEA,IAAAiG,EAAApG,OAAA4L,UAAAC,SAAAC,KAAA3L,GACA,kBAAAiG,EAAAsd,OAAA,iBAAAtd,EAAAsd,QAAA,IAYAC,SAAA,SAAAxjB,GACA,cAAAA,GAAA,oBAAAH,OAAA4L,UAAAC,SAAAC,KAAA3L,IAQAyjB,SAAA,SAAAzjB,GACA,wBAAAA,gBAAA0jB,SAAAD,SAAAzjB,IASA2jB,eAAA,SAAA3jB,EAAA4jB,GACA,gBAAA5jB,EAAA4jB,EAAA5jB,GAUA6jB,sBAAA,SAAA7jB,EAAA+iB,EAAAa,GACA,OAAAT,EAAAQ,eAAAR,EAAA9X,QAAArL,KAAA+iB,GAAA/iB,EAAA4jB,IAWAE,SAAA,SAAAxe,EAAA6B,EAAA4c,GACA,GAAAze,GAAA,mBAAAA,EAAAqG,KACA,OAAArG,EAAAkC,MAAAuc,EAAA5c,IAaA6c,KAAA,SAAAC,EAAA3e,EAAAye,EAAAG,GACA,IAAA/Y,EAAAgZ,EAAAC,EACA,GAAAjB,EAAA9X,QAAA4Y,GAEA,GADAE,EAAAF,EAAAphB,OACAqhB,EACA,IAAA/Y,EAAAgZ,EAAA,EAAqBhZ,GAAA,EAAQA,IAC7B7F,EAAAqG,KAAAoY,EAAAE,EAAA9Y,WAGA,IAAAA,EAAA,EAAeA,EAAAgZ,EAAShZ,IACxB7F,EAAAqG,KAAAoY,EAAAE,EAAA9Y,WAGG,GAAAgY,EAAAK,SAAAS,GAGH,IAFAG,EAAAvkB,OAAAukB,KAAAH,GACAE,EAAAC,EAAAvhB,OACAsI,EAAA,EAAcA,EAAAgZ,EAAShZ,IACvB7F,EAAAqG,KAAAoY,EAAAE,EAAAG,EAAAjZ,IAAAiZ,EAAAjZ,KAYAkZ,YAAA,SAAAC,EAAAC,GACA,IAAApZ,EAAAqZ,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAAzhB,SAAA0hB,EAAA1hB,OACA,SAGA,IAAAsI,EAAA,EAAAqZ,EAAAF,EAAAzhB,OAA+BsI,EAAAqZ,IAAUrZ,EAIzC,GAHAsZ,EAAAH,EAAAnZ,GACAuZ,EAAAH,EAAApZ,GAEAsZ,aAAArZ,OAAAsZ,aAAAtZ,OACA,IAAA+X,EAAAkB,YAAAI,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQAtC,MAAA,SAAAE,GACA,GAAAa,EAAA9X,QAAAiX,GACA,OAAAA,EAAAqC,IAAAxB,EAAAf,OAGA,GAAAe,EAAAK,SAAAlB,GAAA,CAMA,IALA,IAAAC,EAAA,GACA6B,EAAAvkB,OAAAukB,KAAA9B,GACAsC,EAAAR,EAAAvhB,OACAyN,EAAA,EAESA,EAAAsU,IAAUtU,EACnBiS,EAAA6B,EAAA9T,IAAA6S,EAAAf,MAAAE,EAAA8B,EAAA9T,KAGA,OAAAiS,EAGA,OAAAD,GAQAuC,QAAA,SAAA/b,EAAAyZ,EAAAD,EAAAwC,GACA,IAAAC,EAAAxC,EAAAzZ,GACAkc,EAAA1C,EAAAxZ,GAEAqa,EAAAK,SAAAuB,IAAA5B,EAAAK,SAAAwB,GACA7B,EAAA8B,MAAAF,EAAAC,EAAAF,GAEAvC,EAAAzZ,GAAAqa,EAAAf,MAAA4C,IAQAE,UAAA,SAAApc,EAAAyZ,EAAAD,GACA,IAAAyC,EAAAxC,EAAAzZ,GACAkc,EAAA1C,EAAAxZ,GAEAqa,EAAAK,SAAAuB,IAAA5B,EAAAK,SAAAwB,GACA7B,EAAAgC,QAAAJ,EAAAC,GACGzC,EAAA/V,eAAA1D,KACHyZ,EAAAzZ,GAAAqa,EAAAf,MAAA4C,KAaAC,MAAA,SAAA1C,EAAAD,EAAAwC,GACA,IAEAG,EAAA9Z,EAAAiZ,EAAAQ,EAAAtU,EAFA8U,EAAAjC,EAAA9X,QAAAiX,KAAA,CAAAA,GACAkC,EAAAY,EAAAviB,OAGA,IAAAsgB,EAAAK,SAAAjB,GACA,OAAAA,EAMA,IAFA0C,GADAH,KAAA,IACAO,QAAAlC,EAAA0B,QAEA1Z,EAAA,EAAaA,EAAAqZ,IAAUrZ,EAEvB,GADAmX,EAAA8C,EAAAja,GACAgY,EAAAK,SAAAlB,GAKA,IADA8B,EAAAvkB,OAAAukB,KAAA9B,GACAhS,EAAA,EAAAsU,EAAAR,EAAAvhB,OAAkCyN,EAAAsU,IAAUtU,EAC5C2U,EAAAb,EAAA9T,GAAAiS,EAAAD,EAAAwC,GAIA,OAAAvC,GAUA4C,QAAA,SAAA5C,EAAAD,GACA,OAAAa,EAAA8B,MAAA1C,EAAAD,EAAA,CAAwC+C,OAAAlC,EAAA+B,aAUxCI,OAAA,SAAA/C,GAIA,IAHA,IAAAgD,EAAA,SAAAvlB,EAAA8I,GACAyZ,EAAAzZ,GAAA9I,GAEAmL,EAAA,EAAAqZ,EAAA5hB,UAAAC,OAA0CsI,EAAAqZ,IAAUrZ,EACpDgY,EAAAa,KAAAphB,UAAAuI,GAAAoa,GAEA,OAAAhD,GAMAiD,SAAA,SAAAC,GACA,IAAAC,EAAAxe,KACAye,EAAAF,KAAAjZ,eAAA,eAAAiZ,EAAAG,YAAA,WACA,OAAAF,EAAAle,MAAAN,KAAAtE,YAGAijB,EAAA,WACA3e,KAAA0e,YAAAD,GAYA,OATAE,EAAApa,UAAAia,EAAAja,UACAka,EAAAla,UAAA,IAAAoa,EACAF,EAAAL,OAAAnC,EAAAqC,SAEAC,GACAtC,EAAAmC,OAAAK,EAAAla,UAAAga,GAGAE,EAAAG,UAAAJ,EAAAja,UACAka,IAIAI,EAAA5C,EAWAA,EAAA6C,aAAA7C,EAAAW,SAUAX,EAAA8C,QAAA,SAAAC,EAAA9b,EAAA+b,GACA,OAAA/a,MAAAK,UAAAwa,QAAAta,KAAAua,EAAA9b,EAAA+b,IAUAhD,EAAAiD,kBAAAjD,EAAAQ,eASAR,EAAAkD,yBAAAlD,EAAAU,sBAOA,IAAAyC,EAAA,CACAC,OAAA,SAAA/U,GACA,OAAAA,GAGAgV,WAAA,SAAAhV,GACA,OAAAA,KAGAiV,YAAA,SAAAjV,GACA,OAAAA,KAAA,IAGAkV,cAAA,SAAAlV,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAmV,YAAA,SAAAnV,GACA,OAAAA,OAGAoV,aAAA,SAAApV,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGAqV,eAAA,SAAArV,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGAsV,YAAA,SAAAtV,GACA,OAAAA,SAGAuV,aAAA,SAAAvV,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGAwV,eAAA,SAAAxV,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGAyV,YAAA,SAAAzV,GACA,OAAAA,WAGA0V,aAAA,SAAA1V,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGA2V,eAAA,SAAA3V,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGA4V,WAAA,SAAA5V,GACA,SAAAtB,KAAAuC,IAAAjB,GAAAtB,KAAAoC,GAAA,KAGA+U,YAAA,SAAA7V,GACA,OAAAtB,KAAAwC,IAAAlB,GAAAtB,KAAAoC,GAAA,KAGAgV,cAAA,SAAA9V,GACA,WAAAtB,KAAAuC,IAAAvC,KAAAoC,GAAAd,GAAA,IAGA+V,WAAA,SAAA/V,GACA,WAAAA,EAAA,EAAAtB,KAAAQ,IAAA,MAAAc,EAAA,KAGAgW,YAAA,SAAAhW,GACA,WAAAA,EAAA,IAAAtB,KAAAQ,IAAA,MAAAc,IAGAiW,cAAA,SAAAjW,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAAtB,KAAAQ,IAAA,MAAAc,EAAA,IAEA,MAAAtB,KAAAQ,IAAA,QAAAc,KAGAkW,WAAA,SAAAlW,GACA,OAAAA,GAAA,EACAA,IAEAtB,KAAAqC,KAAA,EAAAf,KAAA,IAGAmW,YAAA,SAAAnW,GACA,OAAAtB,KAAAqC,KAAA,GAAAf,GAAA,GAAAA,IAGAoW,cAAA,SAAApW,GACA,OAAAA,GAAA,OACA,IAAAtB,KAAAqC,KAAA,EAAAf,KAAA,GAEA,IAAAtB,KAAAqC,KAAA,GAAAf,GAAA,GAAAA,GAAA,IAGAqW,cAAA,SAAArW,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAa,EAAA,GACAA,EAAA,EACA5E,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAoC,IAAApC,KAAA4X,KAAA,EAAA3V,IAEAA,EAAAjC,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,KAGAyW,eAAA,SAAAvW,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAa,EAAA,GACAA,EAAA,EACA5E,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAoC,IAAApC,KAAA4X,KAAA,EAAA3V,GAEAA,EAAAjC,KAAAQ,IAAA,MAAAc,GAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,GAAA,IAGA0W,iBAAA,SAAAxW,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,GAAA,IACA,GAEAF,IACAA,EAAA,KAEAa,EAAA,GACAA,EAAA,EACA5E,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAoC,IAAApC,KAAA4X,KAAA,EAAA3V,GAEAX,EAAA,EACAW,EAAAjC,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,IAAA,GAEAa,EAAAjC,KAAAQ,IAAA,OAAAc,GAAA,IAAAtB,KAAAwC,KAAAlB,EAAAjE,IAAA,EAAA2C,KAAAoC,IAAAhB,GAAA,OAEA2W,WAAA,SAAAzW,GACA,IAAAjE,EAAA,QACA,OAAAiE,MAAAjE,EAAA,GAAAiE,EAAAjE,IAGA2a,YAAA,SAAA1W,GACA,IAAAjE,EAAA,QACA,OAAAiE,GAAA,GAAAA,IAAAjE,EAAA,GAAAiE,EAAAjE,GAAA,GAGA4a,cAAA,SAAA3W,GACA,IAAAjE,EAAA,QACA,OAAAiE,GAAA,MACAA,MAAA,GAAAjE,GAAA,QAAAiE,EAAAjE,GAAA,GAEA,KAAAiE,GAAA,GAAAA,IAAA,GAAAjE,GAAA,QAAAiE,EAAAjE,GAAA,IAGA6a,aAAA,SAAA5W,GACA,SAAA8U,EAAA+B,cAAA,EAAA7W,IAGA6W,cAAA,SAAA7W,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGA8W,gBAAA,SAAA9W,GACA,OAAAA,EAAA,GACA,GAAA8U,EAAA8B,aAAA,EAAA5W,GAEA,GAAA8U,EAAA+B,cAAA,EAAA7W,EAAA,QAIA+W,EAAA,CACAjC,WAYAP,EAAAyC,cAAAlC,EAEA,IAAAhU,EAAApC,KAAAoC,GACAmW,EAAAnW,EAAA,IACAoW,GAAA,EAAApW,EACAqW,GAAArW,EAAA,EACAsW,GAAAtW,EAAA,EACAuW,GAAA,EAAAvW,EAAA,EAKAwW,GAAA,CAKAC,MAAA,SAAAC,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAAG,MAAAH,EAAAI,SAcAC,YAAA,SAAAJ,EAAAtY,EAAAC,EAAAuY,EAAAC,EAAAE,GACA,GAAAA,EAAA,CACA,IAAAxZ,EAAAI,KAAAD,IAAAqZ,EAAAF,EAAA,EAAAD,EAAA,GACAI,EAAA5Y,EAAAb,EACA0Z,EAAA5Y,EAAAd,EACA2Z,EAAA9Y,EAAAwY,EAAArZ,EACA4Z,EAAA9Y,EAAAwY,EAAAtZ,EAEAmZ,EAAAU,OAAAhZ,EAAA6Y,GACAD,EAAAE,GAAAD,EAAAE,GACAT,EAAAW,IAAAL,EAAAC,EAAA1Z,GAAAwC,GAAAqW,IACAM,EAAAW,IAAAH,EAAAD,EAAA1Z,GAAA6Y,GAAA,GACAM,EAAAW,IAAAH,EAAAC,EAAA5Z,EAAA,EAAA6Y,IACAM,EAAAW,IAAAL,EAAAG,EAAA5Z,EAAA6Y,GAAArW,IACIiX,EAAAE,GACJR,EAAAU,OAAAJ,EAAA3Y,GACAqY,EAAAW,IAAAH,EAAAD,EAAA1Z,GAAA6Y,OACAM,EAAAW,IAAAL,EAAAC,EAAA1Z,EAAA6Y,GAAArW,EAAAqW,KACIa,EAAAE,GACJT,EAAAW,IAAAL,EAAAC,EAAA1Z,GAAAwC,EAAA,GACA2W,EAAAW,IAAAL,EAAAG,EAAA5Z,EAAA,EAAAwC,IAEA2W,EAAAW,IAAAL,EAAAC,EAAA1Z,GAAAwC,KAEA2W,EAAAY,YACAZ,EAAAU,OAAAhZ,EAAAC,QAEAqY,EAAAa,KAAAnZ,EAAAC,EAAAuY,EAAAC,IAIAW,UAAA,SAAAd,EAAAe,EAAAV,EAAA3Y,EAAAC,EAAAqZ,GACA,IAAAhkB,EAAAikB,EAAAC,EAAAC,EAAAC,EACAC,GAAAL,GAAA,GAAAxB,EAEA,IAAAuB,GAAA,iBAAAA,GAEA,+BADA/jB,EAAA+jB,EAAAte,aACA,+BAAAzF,GAMA,KAAA6Y,MAAAwK,OAAA,IAMA,OAFAL,EAAAsB,YAEAP,GAEA,QACAf,EAAAW,IAAAjZ,EAAAC,EAAA0Y,EAAA,EAAAZ,IACAO,EAAAY,YACA,MACA,eACAZ,EAAAU,OAAAhZ,EAAAT,KAAAwC,IAAA4X,GAAAhB,EAAA1Y,EAAAV,KAAAuC,IAAA6X,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAA7Z,EAAAT,KAAAwC,IAAA4X,GAAAhB,EAAA1Y,EAAAV,KAAAuC,IAAA6X,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAA7Z,EAAAT,KAAAwC,IAAA4X,GAAAhB,EAAA1Y,EAAAV,KAAAuC,IAAA6X,GAAAhB,GACAL,EAAAY,YACA,MACA,kBASAO,EAAAd,GADAe,EAAA,KAAAf,GAEAY,EAAAha,KAAAuC,IAAA6X,EAAA1B,IAAAwB,EACAD,EAAAja,KAAAwC,IAAA4X,EAAA1B,IAAAwB,EACAnB,EAAAW,IAAAjZ,EAAAuZ,EAAAtZ,EAAAuZ,EAAAE,EAAAC,EAAAhY,EAAAgY,EAAA3B,IACAM,EAAAW,IAAAjZ,EAAAwZ,EAAAvZ,EAAAsZ,EAAAG,EAAAC,EAAA3B,GAAA2B,GACArB,EAAAW,IAAAjZ,EAAAuZ,EAAAtZ,EAAAuZ,EAAAE,EAAAC,IAAA3B,IACAM,EAAAW,IAAAjZ,EAAAwZ,EAAAvZ,EAAAsZ,EAAAG,EAAAC,EAAA3B,GAAA2B,EAAAhY,GACA2W,EAAAY,YACA,MACA,WACA,IAAAI,EAAA,CACAG,EAAAla,KAAAua,QAAAnB,EACAL,EAAAa,KAAAnZ,EAAAyZ,EAAAxZ,EAAAwZ,EAAA,EAAAA,EAAA,EAAAA,GACA,MAEAE,GAAA1B,GAEA,cACAsB,EAAAha,KAAAuC,IAAA6X,GAAAhB,EACAa,EAAAja,KAAAwC,IAAA4X,GAAAhB,EACAL,EAAAU,OAAAhZ,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAuB,OAAA7Z,EAAAwZ,EAAAvZ,EAAAsZ,GACAjB,EAAAuB,OAAA7Z,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAuB,OAAA7Z,EAAAwZ,EAAAvZ,EAAAsZ,GACAjB,EAAAY,YACA,MACA,eACAS,GAAA1B,GAEA,YACAsB,EAAAha,KAAAuC,IAAA6X,GAAAhB,EACAa,EAAAja,KAAAwC,IAAA4X,GAAAhB,EACAL,EAAAU,OAAAhZ,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAuB,OAAA7Z,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAU,OAAAhZ,EAAAwZ,EAAAvZ,EAAAsZ,GACAjB,EAAAuB,OAAA7Z,EAAAwZ,EAAAvZ,EAAAsZ,GACA,MACA,WACAA,EAAAha,KAAAuC,IAAA6X,GAAAhB,EACAa,EAAAja,KAAAwC,IAAA4X,GAAAhB,EACAL,EAAAU,OAAAhZ,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAuB,OAAA7Z,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAU,OAAAhZ,EAAAwZ,EAAAvZ,EAAAsZ,GACAjB,EAAAuB,OAAA7Z,EAAAwZ,EAAAvZ,EAAAsZ,GACAI,GAAA1B,GACAsB,EAAAha,KAAAuC,IAAA6X,GAAAhB,EACAa,EAAAja,KAAAwC,IAAA4X,GAAAhB,EACAL,EAAAU,OAAAhZ,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAuB,OAAA7Z,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAU,OAAAhZ,EAAAwZ,EAAAvZ,EAAAsZ,GACAjB,EAAAuB,OAAA7Z,EAAAwZ,EAAAvZ,EAAAsZ,GACA,MACA,WACAA,EAAAha,KAAAuC,IAAA6X,GAAAhB,EACAa,EAAAja,KAAAwC,IAAA4X,GAAAhB,EACAL,EAAAU,OAAAhZ,EAAAuZ,EAAAtZ,EAAAuZ,GACAlB,EAAAuB,OAAA7Z,EAAAuZ,EAAAtZ,EAAAuZ,GACA,MACA,WACAlB,EAAAU,OAAAhZ,EAAAC,GACAqY,EAAAuB,OAAA7Z,EAAAT,KAAAuC,IAAA6X,GAAAhB,EAAA1Y,EAAAV,KAAAwC,IAAA4X,GAAAhB,GAIAL,EAAAyB,OACAzB,EAAA0B,eAnGA1B,EAAA2B,UAAAZ,EAAArZ,EAAAqZ,EAAAb,MAAA,EAAAvY,EAAAoZ,EAAAZ,OAAA,EAAAY,EAAAb,MAAAa,EAAAZ,SA6GAyB,eAAA,SAAAC,EAAAC,GAGA,OAAAD,EAAAna,EAAAoa,EAAAxB,KAFA,MAEAuB,EAAAna,EAAAoa,EAAAtB,MAFA,MAGAqB,EAAAla,EAAAma,EAAAvB,IAHA,MAGAsB,EAAAla,EAAAma,EAAArB,OAHA,MAMAsB,SAAA,SAAA/B,EAAA8B,GACA9B,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAAiB,EAAAxB,KAAAwB,EAAAvB,IAAAuB,EAAAtB,MAAAsB,EAAAxB,KAAAwB,EAAArB,OAAAqB,EAAAvB,KACAP,EAAAiC,QAGAC,WAAA,SAAAlC,GACAA,EAAAmC,WAGAZ,OAAA,SAAAvB,EAAAoC,EAAA9I,EAAA+I,GACA,IAAAC,EAAAhJ,EAAAiJ,YACA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAA1a,EAAA4R,EAAA5R,GAAA,EACAsY,EAAAuB,OAAAiB,EAAAH,EAAA/I,EAAA3R,EAAAya,EAAAza,GACAqY,EAAAuB,OAAAiB,EAAAH,EAAAD,EAAAza,EAAA2R,EAAA3R,OACI,UAAA2a,IAAAD,GAAA,UAAAC,GAAAD,EACJrC,EAAAuB,OAAAa,EAAA1a,EAAA4R,EAAA3R,GAEAqY,EAAAuB,OAAAjI,EAAA5R,EAAA0a,EAAAza,GAEAqY,EAAAuB,OAAAjI,EAAA5R,EAAA4R,EAAA3R,QAIA2R,EAAAmJ,QAKAzC,EAAA0C,cACAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBACAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBACAT,EAAA/I,EAAAsJ,kBAAAtJ,EAAAqJ,sBACAN,EAAA/I,EAAAwJ,kBAAAxJ,EAAAuJ,sBACAvJ,EAAA5R,EACA4R,EAAA3R,GAVAqY,EAAAuB,OAAAjI,EAAA5R,EAAA4R,EAAA3R,KAcAob,GAAAlD,GAWA/C,EAAAgD,MAAAD,GAAAC,MASAhD,EAAAkG,qBAAA,SAAAhD,GACAA,EAAAsB,YACAzB,GAAAO,YAAA7hB,MAAAshB,GAAAlmB,YAGA,IAAAspB,GAAA,CAIAC,KAAA,SAAA5nB,EAAAsY,GACA,OAAAkJ,EAAAd,MAAA/d,KAAA3C,KAAA2C,KAAA3C,GAAA,IAA4DsY,KAI5DqP,GAAAC,KAAA,UACAC,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAAT,GAEAvI,GAAAoC,EAAApC,eAuBAiJ,GAAA,CASAC,aAAA,SAAA7sB,EAAAoqB,GACA,IAAA0C,GAAA,GAAA9sB,GAAAye,MAAA,wCACA,IAAAqO,GAAA,WAAAA,EAAA,GACA,WAAA1C,EAKA,OAFApqB,GAAA8sB,EAAA,GAEAA,EAAA,IACA,SACA,OAAA9sB,EACA,QACAA,GAAA,IAMA,OAAAoqB,EAAApqB,GAUA+sB,UAAA,SAAA/sB,GACA,IAAAwR,EAAA1B,EAAAE,EAAAxC,EAWA,OATAuY,EAAAvC,SAAAxjB,IACAwR,GAAAxR,EAAAwpB,KAAA,EACA1Z,GAAA9P,EAAAypB,OAAA,EACAzZ,GAAAhQ,EAAA0pB,QAAA,EACAlc,GAAAxN,EAAAupB,MAAA,GAEA/X,EAAA1B,EAAAE,EAAAxC,GAAAxN,GAAA,EAGA,CACAwpB,IAAAhY,EACAiY,MAAA3Z,EACA4Z,OAAA1Z,EACAuZ,KAAA/b,EACA4b,OAAA5X,EAAAxB,EACAmZ,MAAA3b,EAAAsC,IAWAkd,WAAA,SAAAlI,GACA,IAAAmI,EAAAN,GAAAO,OACA9C,EAAAzG,GAAAmB,EAAAqI,SAAAF,EAAAV,iBACAa,EAAA,CACAC,OAAA1J,GAAAmB,EAAAwI,WAAAL,EAAAX,mBACAiB,WAAAxH,EAAAjB,QAAA+H,aAAAlJ,GAAAmB,EAAAyI,WAAAN,EAAAR,mBAAArC,GACAA,OACAJ,MAAArG,GAAAmB,EAAA0I,UAAAP,EAAAT,kBACAxK,OAAA,KACAxE,OAAA,IAIA,OADA4P,EAAA5P,OA7FA,SAAA4P,GACA,OAAAA,GAAArH,EAAAzC,cAAA8J,EAAAhD,OAAArE,EAAAzC,cAAA8J,EAAAC,QACA,MAGAD,EAAApD,MAAAoD,EAAApD,MAAA,SACAoD,EAAApL,OAAAoL,EAAApL,OAAA,QACAoL,EAAAhD,KAAA,MACAgD,EAAAC,OAqFAI,CAAAL,GACAA,GAYA/lB,QAAA,SAAAqmB,EAAAC,EAAA5K,GACA,IAAA5X,EAAAqZ,EAAAxkB,EAEA,IAAAmL,EAAA,EAAAqZ,EAAAkJ,EAAA7qB,OAAmCsI,EAAAqZ,IAAUrZ,EAE7C,QAAArI,KADA9C,EAAA0tB,EAAAviB,WAIArI,IAAA6qB,GAAA,mBAAA3tB,IACAA,IAAA2tB,SAEA7qB,IAAAigB,GAAAgD,EAAA1a,QAAArL,KACAA,IAAA+iB,SAEAjgB,IAAA9C,GACA,OAAAA,IAMA4tB,GAAA7H,EACA8H,GAAAtF,EACAuF,GAAA9B,GACAlH,GAAA8H,GACAgB,GAAAC,UACAD,GAAAE,UACAF,GAAA9I,WAmDA,IAAAiJ,GAAA,SAAAC,GACAJ,GAAAtI,OAAApe,KAAA8mB,GACA9mB,KAAA+mB,WAAAzmB,MAAAN,KAAAtE,YAGAgrB,GAAAtI,OAAAyI,GAAAtiB,UAAA,CAEAwiB,WAAA,WACA/mB,KAAAgnB,QAAA,GAGAC,MAAA,WACA,IAAAzI,EAAAxe,KAKA,OAJAwe,EAAA0I,QACA1I,EAAA0I,MAAAR,GAAAxL,MAAAsD,EAAA2I,SAEA3I,EAAA4I,OAAA,GACA5I,GAGA6I,WAAA,SAAAC,GACA,IAAA9I,EAAAxe,KACAunB,EAAA/I,EAAA2I,OACAK,EAAAhJ,EAAA4I,OACAK,EAAAjJ,EAAA0I,MAGA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAAjJ,EAAA0I,MAAA,IAGAM,IACAA,EAAAhJ,EAAA4I,OAAA,IAvFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACArjB,EAAAqZ,EAAA1b,EAAA8lB,EAAAC,EAAAtM,EAAAtc,EAAA6oB,EAAAC,EADA3K,EAAAvkB,OAAAukB,KAAAqK,GAGA,IAAAtjB,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAgCsI,EAAAqZ,IAAUrZ,EAa1C,GAZArC,EAAAsb,EAAAjZ,GAEAoX,EAAAkM,EAAA3lB,GAIA6lB,EAAAniB,eAAA1D,KACA6lB,EAAA7lB,GAAAyZ,IAGAqM,EAAAD,EAAA7lB,MAEAyZ,GAAA,MAAAzZ,EAAA,IAYA,GARA4lB,EAAAliB,eAAA1D,KACA4lB,EAAA5lB,GAAA8lB,GAGAC,EAAAH,EAAA5lB,IAEA7C,SAAAsc,WAEAsM,EACA,cAAA5oB,GAEA,IADA6oB,EAAA5L,EAAA2L,IACAxP,QACA0P,EAAA7L,EAAAX,IACAlD,MAAA,CACAsP,EAAA7lB,GAAAimB,EAAAjN,IAAAgN,EAAAN,GAAAxQ,YACA,eAGI,GAAA4P,GAAAnK,SAAAoL,IAAAjB,GAAAnK,SAAAlB,GAAA,CACJoM,EAAA7lB,GAAA+lB,GAAAtM,EAAAsM,GAAAL,EACA,SAIAG,EAAA7lB,GAAAyZ,GA6CAyM,CAAAN,EAAAC,EAAAF,EAAAD,GAEA9I,IAfAA,EAAA0I,MAAAK,EACA/I,EAAA4I,OAAA,KACA5I,IAgBAuJ,gBAAA,WACA,OACAte,EAAAzJ,KAAAmnB,OAAA1d,EACAC,EAAA1J,KAAAmnB,OAAAzd,IAIAse,SAAA,WACA,OAAAtB,GAAAuB,SAAAjoB,KAAAmnB,OAAA1d,IAAAid,GAAAuB,SAAAjoB,KAAAmnB,OAAAzd,MAIAmd,GAAAzI,OAAAsI,GAAApI,SAEA,IAAA4J,GAAArB,GAEAsB,GAAAD,GAAA9J,OAAA,CACA0D,MAAA,KACAsG,YAAA,EACAC,SAAA,GACA1B,OAAA,GACA2B,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAGAC,GAAAN,GAUAxvB,OAAAC,eAAAuvB,GAAA5jB,UAAA,mBACAmkB,IAAA,WACA,OAAA1oB,QAUArH,OAAAC,eAAAuvB,GAAA5jB,UAAA,iBACAmkB,IAAA,WACA,OAAA1oB,KAAA8hB,OAEA6G,IAAA,SAAA7vB,GACAkH,KAAA8hB,MAAAhpB,KAIA2sB,GAAAR,KAAA,UACA2D,UAAA,CACAC,SAAA,IACAlC,OAAA,eACAmC,WAAApC,GAAAxK,KACA6M,WAAArC,GAAAxK,QAIA,IAAA8M,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAArH,EAAA8G,EAAAC,EAAAO,GACA,IACAnlB,EAAAqZ,EADA2L,EAAAjpB,KAAAipB,WAWA,IARAL,EAAA9G,QACA8G,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACAtH,EAAA0H,WAAA,GAGAvlB,EAAA,EAAAqZ,EAAA2L,EAAAttB,OAAuCsI,EAAAqZ,IAAUrZ,EACjD,GAAAglB,EAAAhlB,GAAA6d,UAEA,YADAmH,EAAAhlB,GAAA2kB,GAKAK,EAAA1lB,KAAAqlB,GAGA,IAAAK,EAAAttB,QACAqE,KAAAypB,yBAIAC,gBAAA,SAAA5H,GACA,IAAAjG,EAAA6K,GAAAiD,UAAA3pB,KAAAipB,WAAA,SAAAL,GACA,OAAAA,EAAA9G,aAGA,IAAAjG,IACA7b,KAAAipB,WAAAW,OAAA/N,EAAA,GACAiG,EAAA0H,WAAA,IAIAC,sBAAA,WACA,IAAAjL,EAAAxe,KACA,OAAAwe,EAAA0K,UAIA1K,EAAA0K,QAAAxC,GAAAmD,iBAAAplB,KAAAsX,OAAA,WACAyC,EAAA0K,QAAA,KACA1K,EAAAsL,kBAQAA,YAAA,WACA9pB,KAEA+pB,UAFA/pB,KAKAipB,WAAAttB,OAAA,GALAqE,KAMAypB,yBAOAM,QAAA,WAMA,IALA,IACAnB,EAAA9G,EAAAuG,EAAA2B,EADAf,EAAAjpB,KAAAipB,WAEAhlB,EAAA,EAGAA,EAAAglB,EAAAttB,QACAitB,EAAAK,EAAAhlB,GACA6d,EAAA8G,EAAA9G,MACAuG,EAAAO,EAAAP,SAIA2B,EAAAhhB,KAAAkB,OAAAof,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAR,GAAA,EACAO,EAAAR,YAAApf,KAAAD,IAAAihB,EAAA3B,GAEA3B,GAAA9J,SAAAgM,EAAAN,OAAA,CAAAxG,EAAA8G,GAAA9G,GACA4E,GAAA9J,SAAAgM,EAAAL,oBAAA,CAAAK,GAAA9G,GAEA8G,EAAAR,aAAAC,GACA3B,GAAA9J,SAAAgM,EAAAJ,oBAAA,CAAAI,GAAA9G,GACAA,EAAA0H,WAAA,EACAP,EAAAW,OAAA3lB,EAAA,MAEAA,IAMA9D,GAAAumB,GAAA9I,QAAAzd,QAEA8pB,GAAA,0CAgDA,SAAAC,GAAAlL,EAAAmL,GACA,IAAAC,EAAApL,EAAAqL,SACA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAzO,EAAAyO,EAAAvL,QAAAoL,IACA,IAAAtO,GACAyO,EAAAV,OAAA/N,EAAA,GAGAyO,EAAA3uB,OAAA,IAIAsuB,GAAAhnB,QAAA,SAAArB,UACAod,EAAApd,YAGAod,EAAAqL,WAIA,IAAAE,GAAA,SAAAzI,EAAA0I,GACAxqB,KAAA+mB,WAAAjF,EAAA0I,IAGA9D,GAAAtI,OAAAmM,GAAAhmB,UAAA,CAMAkmB,mBAAA,KAMAC,gBAAA,KAEA3D,WAAA,SAAAjF,EAAA0I,GACAxqB,KACA8hB,QADA9hB,KAEA6b,MAAA2O,EAFAxqB,KAGA2qB,aAHA3qB,KAIA4qB,eAGAC,YAAA,SAAAL,GACAxqB,KAAA6b,MAAA2O,GAGAG,WAAA,WACA,IAAAnM,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACAC,EAAAxM,EAAAyM,aAEA,OAAAH,EAAAI,SAAAJ,EAAAI,WAAA1M,EAAAsD,MAAAqJ,SACAL,EAAAI,QAAAF,EAAAE,SAAA1M,EAAAsD,MAAAlE,QAAAuN,OAAAC,MAAA,GAAAvoB,IAEA,OAAAioB,EAAAO,SAAAP,EAAAO,WAAA7M,EAAAsD,MAAAqJ,SACAL,EAAAO,QAAAL,EAAAK,SAAA7M,EAAAsD,MAAAlE,QAAAuN,OAAAG,MAAA,GAAAzoB,KAIAooB,WAAA,WACA,OAAAjrB,KAAA8hB,MAAApjB,KAAA6sB,SAAAvrB,KAAA6b,QAGAkP,QAAA,WACA,OAAA/qB,KAAA8hB,MAAA0J,eAAAxrB,KAAA6b,QAGA4P,cAAA,SAAAC,GACA,OAAA1rB,KAAA8hB,MAAAqJ,OAAAO,IAMAC,iBAAA,WACA,OAAA3rB,KAAA+qB,UAAAM,SAMAO,iBAAA,WACA,OAAA5rB,KAAA+qB,UAAAG,SAMAW,eAAA,WACA,OAAA7rB,KAAAyrB,cAAAzrB,KAAA2rB,qBAMAG,eAAA,WACA,OAAA9rB,KAAAyrB,cAAAzrB,KAAA4rB,qBAGAG,MAAA,WACA/rB,KAAAgsB,QAAA,IAMAC,QAAA,WACAjsB,KAAAksB,OACAhC,GAAAlqB,KAAAksB,MAAAlsB,OAIAmsB,kBAAA,WACA,IACAptB,EADAiB,KACAyqB,mBACA,OAAA1rB,GAAA,IAAAA,EAAA,CACAqtB,OAHApsB,KAGA8hB,MACAuK,cAJArsB,KAIA6b,SAIAyQ,eAAA,SAAAzQ,GACA,IACA9c,EADAiB,KACA0qB,gBACA,OAAA3rB,GAAA,IAAAA,EAAA,CACAqtB,OAHApsB,KAGA8hB,MACAuK,cAJArsB,KAIA6b,MACA0Q,OAAA1Q,KAIA+O,YAAA,WACA,IAIA3mB,EAAAqZ,EAHAwN,EADA9qB,KACA+qB,UACArsB,EAFAsB,KAEAirB,aAAAvsB,MAAA,GACA8tB,EAAA1B,EAAApsB,KAGA,IAAAuF,EAAA,EAAAqZ,EAAA5e,EAAA/C,OAAiCsI,EAAAqZ,IAAUrZ,EAC3CuoB,EAAAvoB,GAAAuoB,EAAAvoB,IAPAjE,KAOAssB,eAAAroB,GAGA6mB,EAAAE,QAAAF,EAAAE,SAVAhrB,KAUAmsB,qBAGAM,mBAAA,SAAA5Q,GACA,IAAA6Q,EAAA1sB,KAAAssB,eAAAzQ,GACA7b,KAAA+qB,UAAArsB,KAAAkrB,OAAA/N,EAAA,EAAA6Q,GACA1sB,KAAA2sB,cAAAD,EAAA7Q,GAAA,IAGA+Q,sBAAA,WACA,IAzMA5N,EAAAmL,EAyMA3L,EAAAxe,KACAgrB,EAAAxM,EAAAyM,aACAvsB,EAAAssB,EAAAtsB,OAAAssB,EAAAtsB,KAAA,IAKA8f,EAAA0N,QAAAxtB,IACA8f,EAAA0N,OAEAhC,GAAA1L,EAAA0N,MAAA1N,GAGA9f,GAAA/F,OAAAk0B,aAAAnuB,KAtNAyrB,EAuNA3L,GAvNAQ,EAuNAtgB,GAtNA2rB,SACArL,EAAAqL,SAAAC,UAAA/mB,KAAA4mB,IAIAxxB,OAAAC,eAAAomB,EAAA,YACA8N,cAAA,EACAC,YAAA,EACAj0B,MAAA,CACAwxB,UAAA,CAAAH,MAIAF,GAAAhnB,QAAA,SAAArB,GACA,IAAAorB,EAAA,SAAAprB,EAAA6Z,OAAA,GAAA1D,cAAAnW,EAAAsT,MAAA,GACA+X,EAAAjO,EAAApd,GAEAjJ,OAAAC,eAAAomB,EAAApd,EAAA,CACAkrB,cAAA,EACAC,YAAA,EACAj0B,MAAA,WACA,IAAAmH,EAAAiE,MAAAK,UAAA2Q,MAAAzQ,KAAA/I,WACAwxB,EAAAD,EAAA3sB,MAAAN,KAAAC,GAQA,OANAymB,GAAA5J,KAAAkC,EAAAqL,SAAAC,UAAA,SAAA6C,GACA,mBAAAA,EAAAH,IACAG,EAAAH,GAAA1sB,MAAA6sB,EAAAltB,KAIAitB,SA0LA1O,EAAA0N,MAAAxtB,GAKA8f,EAAA4O,kBAGApB,OAAAtF,GAAAxK,KAEAmL,WAAA,SAAAgG,GAMA,IALA,IAAAvC,EAAA9qB,KAAA+qB,UACAuC,EAAAxC,EAAApsB,MAAA,GACA4e,EAAAgQ,EAAA3xB,OACAsI,EAAA,EAEQA,EAAAqZ,IAAUrZ,EAClBqpB,EAAArpB,GAAAojB,WAAAgG,GAGAvC,EAAAE,SACAF,EAAAE,QAAA3D,WAAAgG,IAIAE,KAAA,WACA,IAAAzC,EAAA9qB,KAAA+qB,UACAuC,EAAAxC,EAAApsB,MAAA,GACA4e,EAAAgQ,EAAA3xB,OACAsI,EAAA,EAMA,IAJA6mB,EAAAE,SACAF,EAAAE,QAAAuC,OAGQtpB,EAAAqZ,IAAUrZ,EAClBqpB,EAAArpB,GAAAspB,QAIAC,iBAAA,SAAAd,GACAhG,GAAA3I,MAAA2O,EAAAvF,OAAAuF,EAAAe,gBAAA,WACAf,EAAAe,gBAGAC,cAAA,SAAAhB,GACA,IAAA1B,EAAAhrB,KAAA8hB,MAAApjB,KAAA6sB,SAAAmB,EAAAL,eACAxQ,EAAA6Q,EAAAH,OACAoB,EAAAjB,EAAAiB,QAAA,GACApG,EAAAmF,EAAAvF,OACAyG,EAAAlH,GAAAkH,cAEAlB,EAAAe,eAAA,CACAI,gBAAAtG,EAAAsG,gBACAC,YAAAvG,EAAAuG,YACAC,YAAAxG,EAAAwG,aAGAxG,EAAAsG,gBAAA1tB,GAAA,CAAAwtB,EAAAK,qBAAAhD,EAAAgD,qBAAAJ,EAAArG,EAAAsG,uBAAAjyB,EAAAigB,GACA0L,EAAAuG,YAAA3tB,GAAA,CAAAwtB,EAAAM,iBAAAjD,EAAAiD,iBAAAL,EAAArG,EAAAuG,mBAAAlyB,EAAAigB,GACA0L,EAAAwG,YAAA5tB,GAAA,CAAAwtB,EAAAO,iBAAAlD,EAAAkD,iBAAA3G,EAAAwG,kBAAAnyB,EAAAigB,IAMAuR,eAAA,WACA,IACAtC,EADA9qB,KACA+qB,UACArsB,EAFAsB,KAEAirB,aAAAvsB,KACAyvB,EAAArD,EAAApsB,KAAA/C,OACAyyB,EAAA1vB,EAAA/C,OAEAyyB,EAAAD,EACArD,EAAApsB,KAAAkrB,OAAAwE,EAAAD,EAAAC,GACGA,EAAAD,GARHnuB,KASAquB,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAA7G,EAAA8G,GACA,QAAArqB,EAAA,EAAiBA,EAAAqqB,IAAWrqB,EAC5BjE,KAAAysB,mBAAAjF,EAAAvjB,IAOAsqB,WAAA,WACA,IAAAD,EAAA5yB,UAAAC,OACAqE,KAAAquB,eAAAruB,KAAAirB,aAAAvsB,KAAA/C,OAAA2yB,MAMAE,UAAA,WACAxuB,KAAA+qB,UAAArsB,KAAA+vB,OAMAC,YAAA,WACA1uB,KAAA+qB,UAAArsB,KAAAiwB,SAMAC,aAAA,SAAApH,EAAA8G,GACAtuB,KAAA+qB,UAAArsB,KAAAkrB,OAAApC,EAAA8G,GACAtuB,KAAAquB,eAAA7G,EAAA9rB,UAAAC,OAAA,IAMAkzB,cAAA,WACA7uB,KAAAquB,eAAA,EAAA3yB,UAAAC,WAIA4uB,GAAAnM,OAAAsI,GAAApI,SAEA,IAAAwQ,GAAAvE,GAEA9E,GAAAR,KAAA,UACAqI,SAAA,CACA5K,IAAA,CACAmL,gBAAApI,GAAAO,OAAAd,aACA4I,YAAA,OACAC,YAAA,EACAgB,YAAA,aAKA,IAAAC,GAAA9G,GAAA9J,OAAA,CACA6Q,aAAA,SAAAC,GACA,IAAAC,EAAAnvB,KAAAknB,MAEA,QAAAiI,GACAnmB,KAAAQ,IAAA0lB,EAAAC,EAAA1lB,EAAA,GAAAT,KAAAQ,IAAA2lB,EAAA/M,OAAA+M,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAAnvB,KAAAknB,MAEA,GAAAiI,EAAA,CAQA,IAPA,IAAAK,EAAA9I,GAAA+I,kBAAAN,EAAA,CAAgE1lB,EAAA6lB,EAAA5lB,EAAA6lB,IAChEG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAGAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SACAA,EAAAD,GACAC,GAAA,EAAA7mB,KAAAoC,GAEA,KAAAskB,EAAAG,GACAH,GAAA,EAAA1mB,KAAAoC,GAEA,KAAAskB,EAAAE,GACAF,GAAA,EAAA1mB,KAAAoC,GAIA,IAAA0kB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YAEA,OAAAH,GAAAC,EAEA,UAGAG,eAAA,WACA,IAAAf,EAAAnvB,KAAAknB,MACAiJ,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACAxmB,EAAA0lB,EAAA1lB,EAAAT,KAAAuC,IAAA4kB,GAAAC,EACA1mB,EAAAylB,EAAAzlB,EAAAV,KAAAwC,IAAA2kB,GAAAC,IAIAC,QAAA,WACA,IAAAlB,EAAAnvB,KAAAknB,MACA,OAAAle,KAAAoC,KAAA+jB,EAAAU,SAAAV,EAAAS,aAAA,EAAA5mB,KAAAoC,MAAApC,KAAAQ,IAAA2lB,EAAAc,YAAA,GAAAjnB,KAAAQ,IAAA2lB,EAAAa,YAAA,KAGAjI,gBAAA,WACA,IAAAoH,EAAAnvB,KAAAknB,MACAoJ,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YAEA,OACAvmB,EAAA0lB,EAAA1lB,EAAAT,KAAAuC,IAAA+kB,GAAAC,EACA7mB,EAAAylB,EAAAzlB,EAAAV,KAAAwC,IAAA8kB,GAAAC,IAIAhD,KAAA,WACA,IAKAiD,EALAzO,EAAA/hB,KAAAosB,OAAArK,IACAoN,EAAAnvB,KAAAknB,MACAuJ,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAGAhN,EAAAgC,OAEAhC,EAAAsB,YACAtB,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAV,KAAAC,IAAAkmB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACA3O,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAylB,EAAAa,YAAAU,EAAAD,GAAA,GACA1O,EAAAY,YAEAZ,EAAA6O,UAAAzB,EAAAtB,gBACA9L,EAAAyB,OAEA2L,EAAApB,cACA,UAAAoB,EAAAJ,aAGAhN,EAAAsB,YACAmN,EAAAG,EAAAxB,EAAAc,YACAlO,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAylB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GACArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACAjO,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAylB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEAzO,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAinB,EAAAD,EAAA1nB,KAAAoC,GAAA,EAAAqlB,EAAAznB,KAAAoC,GAAA,GAEA2W,EAAAY,YACAZ,EAAAiC,OAEAjC,EAAAsB,YACAtB,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAylB,EAAAc,YAAAQ,EAAAC,GACA3O,EAAAW,IAAAyM,EAAA1lB,EAAA0lB,EAAAzlB,EAAAylB,EAAAa,YAAAU,EAAAD,GAAA,GACA1O,EAAAY,YAEAZ,EAAA8O,UAAA,EAAA1B,EAAApB,YACAhM,EAAA+O,SAAA,UAEA/O,EAAA8O,UAAA1B,EAAApB,YACAhM,EAAA+O,SAAA,SAGA/O,EAAAgP,YAAA5B,EAAArB,YACA/L,EAAA0B,UAGA1B,EAAAmC,aAIA8M,GAAAtK,GAAAjK,eAEAyI,GAAAO,GAAAO,OAAAd,aAEAO,GAAAR,KAAA,UACAqI,SAAA,CACA2D,KAAA,CACAzM,QAAA,GACAqJ,gBAAA3I,GACA6I,YAAA,EACAD,YAAA5I,GACAgM,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACA9N,MAAA,MAKA,IAAA+N,GAAArJ,GAAA9J,OAAA,CACAmP,KAAA,WACA,IAQA1R,EAAA2V,EAAArN,EAAAsN,EAPAtC,EADAnvB,KACAknB,MACAnF,EAFA/hB,KAEAosB,OAAArK,IACA2P,EAAAvC,EAAAuC,SACAC,EAJA3xB,KAIA4xB,UAAA1c,QACA6Q,EAAAN,GAAAO,OACA6L,EAAA9L,EAAAuH,SAAA2D,KACAa,GAAA,EA2BA,IAlCA9xB,KAWA+xB,OAAAJ,EAAAh2B,QACAg2B,EAAApuB,KAAAouB,EAAA,IAGA5P,EAAAgC,OAGAhC,EAAAiQ,QAAA7C,EAAA+B,gBAAAW,EAAAX,eAGAnP,EAAAkQ,aACAlQ,EAAAkQ,YAAA9C,EAAAgC,YAAAU,EAAAV,YAGApP,EAAAmQ,eAAAlB,GAAA7B,EAAAiC,iBAAAS,EAAAT,kBACArP,EAAA+O,SAAA3B,EAAAkC,iBAAAQ,EAAAR,gBACAtP,EAAA8O,UAAAG,GAAA7B,EAAApB,YAAA8D,EAAA9D,aACAhM,EAAAgP,YAAA5B,EAAArB,aAAA/H,EAAAb,aAGAnD,EAAAsB,YACAyO,GAAA,EAEAjW,EAAA,EAAiBA,EAAA8V,EAAAh2B,SAAuBkgB,EACxC2V,EAAAG,EAAA9V,GACAsI,EAAAuC,GAAAyL,aAAAR,EAAA9V,GACA4V,EAAAD,EAAAtK,MAGA,IAAArL,EACA4V,EAAAW,OACArQ,EAAAU,OAAAgP,EAAAhoB,EAAAgoB,EAAA/nB,GACAooB,EAAAjW,IAGAsI,GAAA,IAAA2N,EAAA3N,EAAAwN,EAAAG,GAEAL,EAAAW,OACAN,IAAAjW,EAAA,IAAA6V,IAAA,IAAAI,EAEA/P,EAAAU,OAAAgP,EAAAhoB,EAAAgoB,EAAA/nB,GAGAgd,GAAAE,OAAAtD,OAAAvB,EAAAoC,EAAA+C,MAAAsK,EAAAtK,OAEA4K,EAAAjW,IAKAkG,EAAA0B,SACA1B,EAAAmC,aAIAmO,GAAA3L,GAAAjK,eAEA6V,GAAA7M,GAAAO,OAAAd,aAkBA,SAAAqN,GAAArD,GACA,IAAAC,EAAAnvB,KAAAknB,MACA,QAAAiI,GAAAnmB,KAAAwpB,IAAAtD,EAAAC,EAAA1lB,GAAA0lB,EAAA/M,OAAA+M,EAAAsD,UAlBAhN,GAAAR,KAAA,UACAqI,SAAA,CACA1J,MAAA,CACAxB,OAAA,EACAsQ,WAAA,SACA7E,gBAAAyE,GACAxE,YAAAwE,GACAvE,YAAA,EAEA0E,UAAA,EACArD,YAAA,EACAlB,iBAAA,MAeA,IAAAyE,GAAAzK,GAAA9J,OAAA,CACAiR,QAAA,SAAAH,EAAA0D,GACA,IAAAzD,EAAAnvB,KAAAknB,MACA,QAAAiI,GAAAnmB,KAAAQ,IAAA0lB,EAAAC,EAAA1lB,EAAA,GAAAT,KAAAQ,IAAAopB,EAAAzD,EAAAzlB,EAAA,GAAAV,KAAAQ,IAAA2lB,EAAAsD,UAAAtD,EAAA/M,OAAA,IAGA6M,aAAAsD,GACAM,SAAAN,GACAO,SAbA,SAAAF,GACA,IAAAzD,EAAAnvB,KAAAknB,MACA,QAAAiI,GAAAnmB,KAAAwpB,IAAAI,EAAAzD,EAAAzlB,GAAAylB,EAAA/M,OAAA+M,EAAAsD,WAaAvC,eAAA,WACA,IAAAf,EAAAnvB,KAAAknB,MACA,OACAzd,EAAA0lB,EAAA1lB,EACAC,EAAAylB,EAAAzlB,IAIA2mB,QAAA,WACA,OAAArnB,KAAAoC,GAAApC,KAAAQ,IAAAxJ,KAAAknB,MAAA9E,OAAA,IAGA2F,gBAAA,WACA,IAAAoH,EAAAnvB,KAAAknB,MACA,OACAzd,EAAA0lB,EAAA1lB,EACAC,EAAAylB,EAAAzlB,EACAqpB,QAAA5D,EAAA/M,OAAA+M,EAAApB,cAIAR,KAAA,SAAAyF,GACA,IAAA7D,EAAAnvB,KAAAknB,MACAnF,EAAA/hB,KAAAosB,OAAArK,IACA2Q,EAAAvD,EAAAuD,WACA3P,EAAAoM,EAAApM,SACAX,EAAA+M,EAAA/M,OACA3Y,EAAA0lB,EAAA1lB,EACAC,EAAAylB,EAAAzlB,EACAqc,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aAEAiK,EAAAiD,YAKAx2B,IAAAo3B,GAAAtM,GAAAE,OAAAjD,eAAAwL,EAAA6D,MACAjR,EAAAgP,YAAA5B,EAAArB,aAAA5I,EACAnD,EAAA8O,UAAAwB,GAAAlD,EAAApB,YAAAhI,EAAAuH,SAAA1J,MAAAmK,aACAhM,EAAA6O,UAAAzB,EAAAtB,iBAAA3I,EACAwB,GAAAE,OAAA/D,UAAAd,EAAA2Q,EAAAtQ,EAAA3Y,EAAAC,EAAAqZ,OAKAkQ,GAAAxN,GAAAO,OAAAd,aAaA,SAAAgO,GAAA/D,GACA,OAAAA,QAAAvzB,IAAAuzB,EAAAlN,MASA,SAAAkR,GAAAhE,GACA,IAAAiE,EAAAC,EAAAC,EAAAtoB,EAAAuoB,EAgBA,OAdAL,GAAA/D,IACAoE,EAAApE,EAAAlN,MAAA,EACAmR,EAAAjE,EAAA1lB,EAAA8pB,EACAF,EAAAlE,EAAA1lB,EAAA8pB,EACAD,EAAAtqB,KAAAD,IAAAomB,EAAAzlB,EAAAylB,EAAAlC,MACAjiB,EAAAhC,KAAAC,IAAAkmB,EAAAzlB,EAAAylB,EAAAlC,QAEAsG,EAAApE,EAAAjN,OAAA,EACAkR,EAAApqB,KAAAD,IAAAomB,EAAA1lB,EAAA0lB,EAAAlC,MACAoG,EAAArqB,KAAAC,IAAAkmB,EAAA1lB,EAAA0lB,EAAAlC,MACAqG,EAAAnE,EAAAzlB,EAAA6pB,EACAvoB,EAAAmkB,EAAAzlB,EAAA6pB,GAGA,CACAlR,KAAA+Q,EACA9Q,IAAAgR,EACA/Q,MAAA8Q,EACA7Q,OAAAxX,GAIA,SAAAwoB,GAAAC,EAAAjW,EAAAkW,GACA,OAAAD,IAAAjW,EAAAkW,EAAAD,IAAAC,EAAAlW,EAAAiW,EAuBA,SAAAE,GAAAxE,EAAAyE,EAAAC,GACA,IAEAvpB,EAAA1B,EAAAE,EAAAxC,EAFAxN,EAAAq2B,EAAApB,YACAqE,EAtBA,SAAAjD,GACA,IAAA2E,EAAA3E,EAAA4E,cACA7G,EAAA,GAEA,OAAA4G,GAIA3E,EAAA6E,WACA7E,EAAAlC,KAAAkC,EAAA1lB,IACAqqB,EAAAN,GAAAM,EAAA,iBAEE3E,EAAAlC,KAAAkC,EAAAzlB,IACFoqB,EAAAN,GAAAM,EAAA,iBAGA5G,EAAA4G,IAAA,EACA5G,GAZAA,EAiBA+G,CAAA9E,GAYA,OATAzI,GAAApK,SAAAxjB,IACAwR,GAAAxR,EAAAwpB,KAAA,EACA1Z,GAAA9P,EAAAypB,OAAA,EACAzZ,GAAAhQ,EAAA0pB,QAAA,EACAlc,GAAAxN,EAAAupB,MAAA,GAEA/X,EAAA1B,EAAAE,EAAAxC,GAAAxN,GAAA,EAGA,CACAwR,EAAA8nB,EAAA9P,KAAAhY,EAAA,IAAAA,EAAAupB,IAAAvpB,EACA1B,EAAAwpB,EAAA7P,OAAA3Z,EAAA,IAAAA,EAAAgrB,IAAAhrB,EACAE,EAAAspB,EAAA5P,QAAA1Z,EAAA,IAAAA,EAAA+qB,IAAA/qB,EACAxC,EAAA8rB,EAAA/P,MAAA/b,EAAA,IAAAA,EAAAstB,IAAAttB,GA0BA,SAAA+oB,GAAAF,EAAA1lB,EAAAC,GACA,IAAAwqB,EAAA,OAAAzqB,EACA0qB,EAAA,OAAAzqB,EACA0qB,KAAAjF,GAAA+E,GAAAC,IAAAhB,GAAAhE,GAEA,OAAAiF,IACAF,GAAAzqB,GAAA2qB,EAAA/R,MAAA5Y,GAAA2qB,EAAA7R,SACA4R,GAAAzqB,GAAA0qB,EAAA9R,KAAA5Y,GAAA0qB,EAAA5R,QAzHAiD,GAAAR,KAAA,UACAqI,SAAA,CACA+G,UAAA,CACAxG,gBAAAoF,GACAnF,YAAAmF,GACAc,cAAA,SACAhG,YAAA,MAsHA,IAAAuG,GAAApM,GAAA9J,OAAA,CACAmP,KAAA,WACA,IAAAxL,EAAA/hB,KAAAosB,OAAArK,IACAoN,EAAAnvB,KAAAknB,MACAqN,EApCA,SAAApF,GACA,IAAAiF,EAAAjB,GAAAhE,GACAlN,EAAAmS,EAAA7R,MAAA6R,EAAA/R,KACAH,EAAAkS,EAAA5R,OAAA4R,EAAA9R,IACAkS,EAAAb,GAAAxE,EAAAlN,EAAA,EAAAC,EAAA,GAEA,OACAuS,MAAA,CACAhrB,EAAA2qB,EAAA/R,KACA3Y,EAAA0qB,EAAA9R,IACAnZ,EAAA8Y,EACA7b,EAAA8b,GAEAwS,MAAA,CACAjrB,EAAA2qB,EAAA/R,KAAAmS,EAAAluB,EACAoD,EAAA0qB,EAAA9R,IAAAkS,EAAAlqB,EACAnB,EAAA8Y,EAAAuS,EAAAluB,EAAAkuB,EAAA5rB,EACAxC,EAAA8b,EAAAsS,EAAAlqB,EAAAkqB,EAAA1rB,IAmBA6rB,CAAAxF,GACAsF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MAEA3S,EAAA6O,UAAAzB,EAAAtB,gBACA9L,EAAA6S,SAAAH,EAAAhrB,EAAAgrB,EAAA/qB,EAAA+qB,EAAAtrB,EAAAsrB,EAAAruB,GAEAquB,EAAAtrB,IAAAurB,EAAAvrB,GAAAsrB,EAAAruB,IAAAsuB,EAAAtuB,IAIA2b,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAA6R,EAAAhrB,EAAAgrB,EAAA/qB,EAAA+qB,EAAAtrB,EAAAsrB,EAAAruB,GACA2b,EAAAiC,OACAjC,EAAA6O,UAAAzB,EAAArB,YACA/L,EAAAa,KAAA8R,EAAAjrB,EAAAirB,EAAAhrB,EAAAgrB,EAAAvrB,EAAAurB,EAAAtuB,GACA2b,EAAAyB,KAAA,WACAzB,EAAAmC,YAGAhC,OAAA,WACA,IAAAiN,EAAAnvB,KAAAknB,MACA,OAAAiI,EAAAlC,KAAAkC,EAAAzlB,GAGA2lB,QAAA,SAAAH,EAAA0D,GACA,OAAAvD,GAAArvB,KAAAknB,MAAAgI,EAAA0D,IAGA3D,aAAA,SAAAC,EAAA0D,GACA,IAAAzD,EAAAnvB,KAAAknB,MACA,OAAAgM,GAAA/D,GACAE,GAAAF,EAAAD,EAAA,MACAG,GAAAF,EAAA,KAAAyD,IAGAC,SAAA,SAAA3D,GACA,OAAAG,GAAArvB,KAAAknB,MAAAgI,EAAA,OAGA4D,SAAA,SAAAF,GACA,OAAAvD,GAAArvB,KAAAknB,MAAA,KAAA0L,IAGA1C,eAAA,WACA,IACAzmB,EAAAC,EADAylB,EAAAnvB,KAAAknB,MAUA,OARAgM,GAAA/D,IACA1lB,EAAA0lB,EAAA1lB,EACAC,GAAAylB,EAAAzlB,EAAAylB,EAAAlC,MAAA,IAEAxjB,GAAA0lB,EAAA1lB,EAAA0lB,EAAAlC,MAAA,EACAvjB,EAAAylB,EAAAzlB,GAGA,CAAUD,IAAAC,MAGV2mB,QAAA,WACA,IAAAlB,EAAAnvB,KAAAknB,MAEA,OAAAgM,GAAA/D,GACAA,EAAAlN,MAAAjZ,KAAAwpB,IAAArD,EAAAzlB,EAAAylB,EAAAlC,MACAkC,EAAAjN,OAAAlZ,KAAAwpB,IAAArD,EAAA1lB,EAAA0lB,EAAAlC,OAGAlF,gBAAA,WACA,IAAAoH,EAAAnvB,KAAAknB,MACA,OACAzd,EAAA0lB,EAAA1lB,EACAC,EAAAylB,EAAAzlB,MAKA4jB,GAAA,GACAuH,GAAA7F,GACA8F,GAAAvD,GACAwD,GAAApC,GACAqC,GAAAV,GACAhH,GAAAuH,OACAvH,GAAAwH,QACAxH,GAAAyH,SACAzH,GAAA0H,aAEA,IAAAC,GAAAvO,GAAA9I,QAAAzd,QAEAslB,GAAAR,KAAA,OACAiQ,MAAA,CACAC,KAAA,SAGAhK,OAAA,CACAC,MAAA,EACArsB,KAAA,WACAq2B,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAIAlK,MAAA,EACAvsB,KAAA,cA4FA,IAAA02B,GAAA3G,GAAA1Q,OAAA,CAEAsM,gBAAA4C,GAAA0H,UAEAjO,WAAA,WACA,IACA+D,EAEAgE,GAAAvqB,UAAAwiB,WAAAzmB,MAHAN,KAGAtE,YAEAovB,EALA9qB,KAKA+qB,WACA2K,MANA11B,KAMAirB,aAAAyK,MACA5K,EAAA6K,KAAA,GAGA3J,OAAA,SAAAD,GACA,IAEA9nB,EAAAqZ,EADAiX,EADAv0B,KACA+qB,UAAArsB,KAKA,IANAsB,KAIA41B,OAJA51B,KAIA61B,WAEA5xB,EAAA,EAAAqZ,EAAAiX,EAAA54B,OAAkCsI,EAAAqZ,IAAUrZ,EAN5CjE,KAOA2sB,cAAA4H,EAAAtwB,KAAA8nB,IAIAY,cAAA,SAAA0H,EAAAxY,EAAAkQ,GACA,IAAAvN,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACAC,EAAAxM,EAAAyM,aACArN,EAAAY,EAAAsX,uBAAAzB,EAAAxY,GAEAwY,EAAA0B,QAAAvX,EAAAiN,cAAAX,EAAAI,SACAmJ,EAAA2B,QAAAxX,EAAAiN,cAAAX,EAAAO,SACAgJ,EAAAhI,cAAA7N,EAAA3C,MACAwY,EAAA9H,OAAA1Q,EACAwY,EAAAlN,OAAA,CACA0G,gBAAAjQ,EAAAiQ,gBACAC,YAAAlQ,EAAAkQ,YACAiG,cAAAnW,EAAAmW,cACAhG,YAAAnQ,EAAAmQ,YACAkI,aAAAjL,EAAAkL,MACAA,MAAA1X,EAAAsD,MAAApjB,KAAAy3B,OAAAta,IAGA2C,EAAA4X,uBAAA/B,EAAAxY,EAAAkQ,GAEAsI,EAAApN,SAMAmP,uBAAA,SAAA/B,EAAAxY,EAAAkQ,GACA,IAAAvN,EAAAxe,KACAunB,EAAA8M,EAAAlN,OACAkP,EAAA7X,EAAAqN,iBACAoB,EAAAoJ,EAAAC,eACAtC,EAAAqC,EAAAE,eACAC,EAAAhY,EAAAoX,QAAApX,EAAAqX,WACAY,EAAAjY,EAAAkY,wBAAAlY,EAAA3C,SACA8a,EAAAnY,EAAAoY,wBAAApY,EAAA3C,QAAA2a,GAEAjP,EAAAyM,aACAzM,EAAA0F,KAAAlB,EAAAkB,EAAAwJ,EAAAxJ,KACA1F,EAAA9d,EAAAuqB,EAAAjI,EAAAkB,EAAAwJ,EAAAI,KAAAF,EAAAG,OACAvP,EAAA7d,EAAAsqB,EAAA2C,EAAAG,OAAA/K,EAAAkB,EAAAwJ,EAAAI,KACAtP,EAAArF,OAAA8R,EAAA2C,EAAAzT,UAAAtnB,EACA2rB,EAAAtF,MAAA+R,OAAAp4B,EAAA+6B,EAAAzT,MASA6T,WAAA,SAAAC,GACA,IAMA/yB,EAAA6mB,EALAhJ,EADA9hB,KACA8hB,MACAnK,EAFA3X,KAEA8rB,iBACAmL,EAAAtf,EAAAiG,QAAAqZ,QACA3Z,OAAA1hB,IAAAo7B,EAAAlV,EAAApjB,KAAA6sB,SAAA5vB,OAAAq7B,EAAA,EACAE,EAAA,GAGA,IAAAjzB,EAAA,EAAaA,EAAAqZ,IAAUrZ,GACvB6mB,EAAAhJ,EAAA0J,eAAAvnB,IACA0xB,KAAA7T,EAAAqV,iBAAAlzB,MACA,IAAAgzB,IACA,IAAAA,IAAA,IAAAC,EAAAnY,QAAA+L,EAAA4K,aACA95B,IAAAq7B,SAAAr7B,IAAAkvB,EAAA4K,QAAA,IAAAwB,EAAAnY,QAAA+L,EAAA4K,UACAwB,EAAA3zB,KAAAunB,EAAA4K,OAIA,OAAAwB,GAOAE,cAAA,WACA,OAAAp3B,KAAA+2B,aAAAp7B,QAUA07B,cAAA,SAAA7M,EAAAxS,GACA,IAAAkf,EAAAl3B,KAAA+2B,WAAAvM,GACA3O,OAAAjgB,IAAAoc,EACAkf,EAAAnY,QAAA/G,IACA,EAEA,WAAA6D,EACAqb,EAAAv7B,OAAA,EACAkgB,GAMAga,SAAA,WACA,IAQA5xB,EAAAqZ,EAPA3F,EADA3X,KACA8rB,iBACAwL,EAFAt3B,KAEAo3B,gBACA5M,EAHAxqB,KAGA6b,MACA0a,EAAA5e,EAAA4e,eACA/O,EAAA+O,EAAA5e,EAAA0K,KAAA1K,EAAA2K,IACAiV,EAAA/P,GAAA+O,EAAA5e,EAAAsK,MAAAtK,EAAAuK,QACAsV,EAAA,GAGA,IAAAvzB,EAAA,EAAAqZ,EAVAtd,KAUA+qB,UAAArsB,KAAA/C,OAA8CsI,EAAAqZ,IAAUrZ,EACxDuzB,EAAAj0B,KAAAoU,EAAA8f,iBAAA,KAAAxzB,EAAAumB,IAOA,OACAzhB,IALA2d,GAAAtK,cAAAzE,EAAAiG,QAAA8Z,cAnOA,SAAA/f,EAAA6f,GACA,IAEA34B,EAAA84B,EAAA1zB,EAAAqZ,EAFAvU,EAAA4O,EAAA4e,eAAA5e,EAAAsK,MAAAtK,EAAAuK,OACA0V,EAAAjgB,EAAAkgB,WAGA,IAAA5zB,EAAA,EAAAqZ,EAAAka,EAAA77B,OAAkCsI,EAAAqZ,IAAUrZ,EAC5C8E,EAAAC,KAAAD,MAAAC,KAAAwpB,IAAAgF,EAAAvzB,GAAAuzB,EAAAvzB,EAAA,KAGA,IAAAA,EAAA,EAAAqZ,EAAAsa,EAAAj8B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3C0zB,EAAAhgB,EAAAmgB,gBAAA7zB,GACA8E,EAAA9E,EAAA,EAAA+E,KAAAD,MAAA4uB,EAAA94B,GAAAkK,EACAlK,EAAA84B,EAGA,OAAA5uB,EAqNAgvB,CAAApgB,EAAA6f,IACA,EAIAA,SACAhQ,QACA+P,MACAD,aACA3f,UAQA+e,wBAAA,SAAAlM,EAAA3O,GACA,IAWA5X,EAAA+zB,EAAAC,EAAAhL,EAAA4J,EAAA3T,EAVApB,EADA9hB,KACA8hB,MACAgJ,EAFA9qB,KAEA+qB,UACApT,EAHA3X,KAGA6rB,iBACA0K,EAAA5e,EAAA4e,eACAhL,EAAAzJ,EAAApjB,KAAA6sB,SACAzyB,GAAA6e,EAAAugB,cAAA3M,EAAAf,GAAA9rB,KAAAmd,IACAsc,EAAAxgB,EAAAiG,QAAAua,aACAlB,EAAAtf,EAAAiG,QAAAqZ,QACAvB,EAAA5K,EAAA4K,MACAlO,EAAA,EAGA,GAAAyP,QAAAr7B,IAAAq7B,QAAAr7B,IAAA85B,EACA,IAAAzxB,EAAA,EAAcA,EAAAumB,IAAkBvmB,GAChC+zB,EAAAlW,EAAA0J,eAAAvnB,IAEA0xB,KACAqC,EAAAtC,WACAsC,EAAAI,WAAAzM,qBAAAhU,EAAA9U,IACAif,EAAAqV,iBAAAlzB,KAEAg0B,GAAAtgB,EAAAugB,cAAA3M,EAAAtnB,GAAAvF,KAAAmd,KACA/iB,EAAA,GAAAm/B,EAAA,GAAAn/B,GAAA,GAAAm/B,EAAA,KACAzQ,GAAAyQ,IAmBA,OAbAhL,EAAAtV,EAAA8f,iBAAAjQ,GACAqP,EAAAlf,EAAA8f,iBAAAjQ,EAAA1uB,GACAoqB,EAAA2T,EAAA5J,OAEArxB,IAAAu8B,GAAAnvB,KAAAwpB,IAAAtP,GAAAiV,IACAjV,EAAAiV,EAEAtB,EADA/9B,GAAA,IAAAy9B,GAAAz9B,EAAA,GAAAy9B,EACAtJ,EAAAkL,EAEAlL,EAAAkL,GAIA,CACAjV,OACA+J,OACA4J,OACAC,OAAAD,EAAA3T,EAAA,IAOA0T,wBAAA,SAAApM,EAAA3O,EAAA2a,GACA,IACA5Y,EAAA4Y,EAAA7e,MAAAiG,QACAya,EAAA,SAAAza,EAAA8Z,aAzPA,SAAA7b,EAAA2a,EAAA5Y,GACA,IAKA4J,EALAgQ,EAAAhB,EAAAgB,OACAG,EAAAH,EAAA3b,GACAhd,EAAAgd,EAAA,EAAA2b,EAAA3b,EAAA,QACA/c,EAAA+c,EAAA2b,EAAA77B,OAAA,EAAA67B,EAAA3b,EAAA,QACAyc,EAAA1a,EAAAwX,mBAiBA,OAdA,OAAAv2B,IAGAA,EAAA84B,GAAA,OAAA74B,EAAA03B,EAAAe,IAAAf,EAAAhP,MAAA1oB,EAAA64B,IAGA,OAAA74B,IAEAA,EAAA64B,IAAA94B,GAGA2oB,EAAAmQ,KAAA3uB,KAAAD,IAAAlK,EAAAC,IAAA,EAAAw5B,EAGA,CACAC,MAHAvvB,KAAAwpB,IAAA1zB,EAAAD,GAAA,EAAAy5B,EAGA9B,EAAAc,WACA3sB,MAAAiT,EAAAyX,cACA7N,SAiOAgR,CAAA3c,EAAA2a,EAAA5Y,GAxRA,SAAA/B,EAAA2a,EAAA5Y,GACA,IAGAsF,EAAAvY,EAHA8tB,EAAA7a,EAAA8Z,aACApJ,EAAAkI,EAAAc,WACAK,EAAAnB,EAAAgB,OAAA3b,GAcA,OAXA6K,GAAAtK,cAAAqc,IACAvV,EAAAsT,EAAAztB,IAAA6U,EAAAwX,mBACAzqB,EAAAiT,EAAAyX,gBAKAnS,EAAAuV,EAAAnK,EACA3jB,EAAA,GAGA,CACA4tB,MAAArV,EAAAoL,EACA3jB,QACA6c,MAAAmQ,EAAAzU,EAAA,GAqQAwV,CAAA7c,EAAA2a,EAAA5Y,GAEA+a,EANA34B,KAMAq3B,cAAA7M,EANAxqB,KAMA+qB,UAAA2K,OACAoB,EAAAuB,EAAA7Q,MAAA6Q,EAAAE,MAAAI,EAAAN,EAAAE,MAAA,EACArV,EAAAla,KAAAD,IACA2d,GAAAjK,eAAAmB,EAAAgb,gBAAAC,KACAR,EAAAE,MAAAF,EAAA1tB,OAEA,OACAsiB,KAAA6J,EAAA5T,EAAA,EACA2T,KAAAC,EAAA5T,EAAA,EACA4T,SACA5T,SAIAqK,KAAA,WACA,IACAzL,EADA9hB,KACA8hB,MACAnK,EAFA3X,KAEA6rB,iBACA0I,EAHAv0B,KAGA+qB,UAAArsB,KACAssB,EAJAhrB,KAIAirB,aACA3N,EAAAiX,EAAA54B,OACAsI,EAAA,EAIA,IAFAyiB,GAAAE,OAAA9C,SAAAhC,EAAAC,IAAAD,EAAAkR,WAEQ/uB,EAAAqZ,IAAUrZ,EAClB2T,MAAAD,EAAAugB,cAAAlN,EAAAtsB,KAAAuF,MACAswB,EAAAtwB,GAAAspB,OAIA7G,GAAAE,OAAA3C,WAAAnC,EAAAC,MAMA+T,uBAAA,SAAAzB,EAAAxY,GACA,IAOA5X,EAAAqZ,EAAA1b,EANAkgB,EADA9hB,KACA8hB,MACAyJ,EAAAzJ,EAAApjB,KAAA6sB,SACAP,EAAAO,EAHAvrB,KAGA6b,OACA8R,EAAA0G,EAAA1G,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA+G,UACA1e,EAAA,GAIA8Q,EAAA,CACA3E,QACAgX,UAAAjd,EACAmP,UACAR,aAdAxqB,KAcA6b,OAGAqB,EAAA,CACA,kBACA,cACA,gBACA,eAGA,IAAAjZ,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAE3C0R,EADA/T,EAAAsb,EAAAjZ,IACAgxB,GAAA,CACAtH,EAAA/rB,GACAopB,EAAAppB,GACAgc,EAAAhc,IACA6kB,EAAA5K,GAGA,OAAAlG,KAIAojB,GAAArS,GAAAjK,eACAuc,GAAAtS,GAAA9I,QAAAzd,QAEAslB,GAAAR,KAAA,UACAiQ,MAAA,CACAC,KAAA,UAGAhK,OAAA,CACAC,MAAA,EACArsB,KAAA,SACAk6B,SAAA,SACAp2B,GAAA,aAEAyoB,MAAA,EACAvsB,KAAA,SACAk6B,SAAA,OACAp2B,GAAA,cAIAq2B,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEAlD,MAAA,SAAAhzB,EAAAxE,GACA,IAAAu3B,EAAAv3B,EAAA6sB,SAAAroB,EAAAsnB,cAAA0L,OAAA,GACAmD,EAAA36B,EAAA6sB,SAAAroB,EAAAsnB,cAAA9rB,KAAAwE,EAAA2Y,OACA,OAAAoa,EAAA,MAAA/yB,EAAAo2B,OAAA,KAAAp2B,EAAAq2B,OAAA,KAAAF,EAAAzwB,EAAA,SAMA,IAAA4wB,GAAA1K,GAAA1Q,OAAA,CAIAsM,gBAAA4C,GAAAyH,MAKA/I,OAAA,SAAAD,GACA,IAAAvN,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACA4G,EAAA7G,EAAApsB,KAGAgoB,GAAA5J,KAAA6U,EAAA,SAAA/N,EAAA/H,GACA2C,EAAAmO,cAAA/I,EAAA/H,EAAAkQ,MAOAY,cAAA,SAAA/I,EAAA/H,EAAAkQ,GACA,IAAAvN,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACA4C,EAAA/J,EAAA+J,QAAA,GACA8L,EAAAjb,EAAAiN,cAAAX,EAAAI,SACAwO,EAAAlb,EAAAiN,cAAAX,EAAAO,SACAzN,EAAAY,EAAAsX,uBAAAlS,EAAA/H,GACAnd,EAAA8f,EAAAyM,aAAAvsB,KAAAmd,GACA8d,EAAAnb,EAAA3C,MAEApS,EAAAsiB,EAAA0N,EAAAG,mBAAA,IAAAH,EAAAhC,iBAAA,iBAAA/4B,IAAAm7B,IAAAhe,EAAA8d,GACAjwB,EAAAqiB,EAAA2N,EAAApD,eAAAoD,EAAAjC,iBAAA/4B,EAAAmd,EAAA8d,GAEA/V,EAAAmS,QAAA0D,EACA7V,EAAAoS,QAAA0D,EACA9V,EAAAkW,SAAAlc,EACAgG,EAAAyI,cAAAsN,EACA/V,EAAA2I,OAAA1Q,EACA+H,EAAAuD,OAAA,CACA0G,gBAAAjQ,EAAAiQ,gBACAC,YAAAlQ,EAAAkQ,YACAC,YAAAnQ,EAAAmQ,YACA0E,UAAA7U,EAAA6U,UACAC,WAAA9U,EAAA8U,WACA3P,SAAAnF,EAAAmF,SACAX,OAAA2J,EAAA,EAAAnO,EAAAwE,OACAgQ,KAAAzE,EAAAyE,MAAAxa,MAAAnO,IAAAmO,MAAAlO,GACAD,IACAC,KAGAka,EAAAqD,SAMAyG,cAAA,SAAA9J,GACA,IAAA2D,EAAA3D,EAAAuD,OACAvJ,EAAAgG,EAAAkW,SACAlM,EAAAlH,GAAAkH,cAEAhK,EAAA6J,eAAA,CACAI,gBAAAtG,EAAAsG,gBACAC,YAAAvG,EAAAuG,YACAC,YAAAxG,EAAAwG,YACA3L,OAAAmF,EAAAnF,QAGAmF,EAAAsG,gBAAAkL,GAAAnb,EAAAoQ,qBAAAJ,EAAAhQ,EAAAiQ,kBACAtG,EAAAuG,YAAAiL,GAAAnb,EAAAqQ,iBAAAL,EAAAhQ,EAAAkQ,cACAvG,EAAAwG,YAAAgL,GAAAnb,EAAAsQ,iBAAAtQ,EAAAmQ,aACAxG,EAAAnF,OAAAxE,EAAAwE,OAAAxE,EAAAwR,aAMA0G,uBAAA,SAAAlS,EAAA/H,GACA,IAQA5X,EAAAqZ,EAAA1b,EAPAkgB,EADA9hB,KACA8hB,MACAyJ,EAAAzJ,EAAApjB,KAAA6sB,SACAP,EAAAO,EAHAvrB,KAGA6b,OACA8R,EAAA/J,EAAA+J,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA1J,MACAllB,EAAAssB,EAAAtsB,KAAAmd,GACAlG,EAAA,GAIA8Q,EAAA,CACA3E,QACAgX,UAAAjd,EACAmP,UACAR,aAfAxqB,KAeA6b,OAGAqB,EAAA,CACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAjZ,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAE3C0R,EADA/T,EAAAsb,EAAAjZ,IACA+0B,GAAA,CACArL,EAAA/rB,GACAopB,EAAAppB,GACAgc,EAAAhc,IACA6kB,EAAA5K,GAWA,OAPAlG,EAAAyM,OAAA4W,GAAA,CACArL,EAAAvL,OACA1jB,IAAAkK,OAAAhN,EACAovB,EAAA5I,OACAxE,EAAAwE,QACAqE,EAAA5K,GAEAlG,KAIAokB,GAAArT,GAAA9I,QAAAzd,QACA65B,GAAAtT,GAAAjK,eAEAgJ,GAAAR,KAAA,YACA2D,UAAA,CAEAqR,eAAA,EAEAC,cAAA,GAEAhF,MAAA,CACAC,KAAA,UAEAgF,eAAA,SAAArY,GACA,IAAAsY,EAAA,GACAA,EAAA72B,KAAA,cAAAue,EAAAjf,GAAA,aAEA,IAAAnE,EAAAojB,EAAApjB,KACA6sB,EAAA7sB,EAAA6sB,SACA4K,EAAAz3B,EAAAy3B,OAEA,GAAA5K,EAAA5vB,OACA,QAAAsI,EAAA,EAAkBA,EAAAsnB,EAAA,GAAA7sB,KAAA/C,SAA6BsI,EAC/Cm2B,EAAA72B,KAAA,qCAAAgoB,EAAA,GAAAsC,gBAAA5pB,GAAA,aACAkyB,EAAAlyB,IACAm2B,EAAA72B,KAAA4yB,EAAAlyB,IAEAm2B,EAAA72B,KAAA,SAKA,OADA62B,EAAA72B,KAAA,SACA62B,EAAAC,KAAA,KAEAC,OAAA,CACAnE,OAAA,CACAoE,eAAA,SAAAzY,GACA,IAAApjB,EAAAojB,EAAApjB,KACA,OAAAA,EAAAy3B,OAAAx6B,QAAA+C,EAAA6sB,SAAA5vB,OACA+C,EAAAy3B,OAAA1Y,IAAA,SAAAyY,EAAAjyB,GACA,IAAA6mB,EAAAhJ,EAAA0J,eAAA,GACAgP,EAAA97B,EAAA6sB,SAAA,GACA7I,EAAAoI,EAAApsB,KAAAuF,GACA0pB,EAAAjL,KAAAiL,QAAA,GACA8M,EAAA3Y,EAAAlE,QAAA0P,SAAA5K,IACAc,EAAAuW,GAAA,CAAApM,EAAAE,gBAAA2M,EAAA3M,gBAAA4M,EAAA5M,sBAAAjyB,EAAAqI,GACAwf,EAAAsW,GAAA,CAAApM,EAAAG,YAAA0M,EAAA1M,YAAA2M,EAAA3M,kBAAAlyB,EAAAqI,GACAy2B,EAAAX,GAAA,CAAApM,EAAAI,YAAAyM,EAAAzM,YAAA0M,EAAA1M,kBAAAnyB,EAAAqI,GAEA,OACAm2B,KAAAlE,EACAtF,UAAApN,EACAuN,YAAAtN,EACAoN,UAAA6J,EACA1T,OAAApP,MAAA4iB,EAAA97B,KAAAuF,KAAA6mB,EAAApsB,KAAAuF,GAAA+iB,OAGAnL,MAAA5X,KAIA,KAIA02B,QAAA,SAAAC,EAAAC,GACA,IAEA52B,EAAAqZ,EAAAwN,EAFAjP,EAAAgf,EAAAhf,MACAiG,EAAA9hB,KAAA8hB,MAGA,IAAA7d,EAAA,EAAAqZ,GAAAwE,EAAApjB,KAAA6sB,UAAA,IAAA5vB,OAAyDsI,EAAAqZ,IAAUrZ,GACnE6mB,EAAAhJ,EAAA0J,eAAAvnB,IAEAvF,KAAAmd,KACAiP,EAAApsB,KAAAmd,GAAAmL,QAAA8D,EAAApsB,KAAAmd,GAAAmL,QAIAlF,EAAAkK,WAKA8O,iBAAA,GAGA/X,UAAA,GAAA/Z,KAAAoC,GAGA2vB,cAAA,EAAA/xB,KAAAoC,GAGA8tB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEAlD,MAAA,SAAA8E,EAAAt8B,GACA,IAAAu8B,EAAAv8B,EAAAy3B,OAAA6E,EAAAnf,OACA/iB,EAAA,KAAA4F,EAAA6sB,SAAAyP,EAAAxQ,cAAA9rB,KAAAs8B,EAAAnf,OAWA,OATA6K,GAAAviB,QAAA82B,IAGAA,IAAA/lB,SACA,IAAApc,EAEAmiC,GAAAniC,EAGAmiC,OAMA,IAAAC,GAAApM,GAAA1Q,OAAA,CAEAsM,gBAAA4C,GAAAuH,IAEAlK,WAAAjE,GAAAxK,KAGAif,aAAA,SAAA3Q,GAGA,IAFA,IAAA4Q,EAAA,EAEAC,EAAA,EAAiBA,EAAA7Q,IAAkB6Q,EACnCr7B,KAAA8hB,MAAAqV,iBAAAkE,MACAD,EAIA,OAAAA,GAGApP,OAAA,SAAAD,GACA,IAaA9nB,EAAAqZ,EAbAkB,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MACAkR,EAAAlR,EAAAkR,UACAsI,EAAAxZ,EAAAlE,QACA2d,EAAAvI,EAAAzQ,MAAAyQ,EAAA3Q,KACAmZ,EAAAxI,EAAAxQ,OAAAwQ,EAAA1Q,IACAmZ,EAAAzyB,KAAAD,IAAAwyB,EAAAC,GACAlG,EAAA,CAAgB7rB,EAAA,EAAAC,EAAA,GAChBohB,EAAAtM,EAAAuM,UACA2Q,EAAA5Q,EAAApsB,KACAo8B,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cACAY,EAAAnd,EAAAod,eAAApd,EAAA3C,OAIA,GAAAkf,EAAA,EAAA/xB,KAAAoC,GAAA,CACA,IAAAwkB,EAAA0L,EAAAvY,UAAA,EAAA/Z,KAAAoC,IAEAykB,GADAD,GAAA,EAAA5mB,KAAAoC,IAAAwkB,GAAA5mB,KAAAoC,IAAA,EAAAwkB,GAAA5mB,KAAAoC,GAAA,MACA2vB,EACAvT,EAAA,CAAgB/d,EAAAT,KAAAuC,IAAAqkB,GAAAlmB,EAAAV,KAAAwC,IAAAokB,IAChB2H,EAAA,CAAc9tB,EAAAT,KAAAuC,IAAAskB,GAAAnmB,EAAAV,KAAAwC,IAAAqkB,IACdgM,EAAAjM,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAA5mB,KAAAoC,IAAA,EAAApC,KAAAoC,IAAAykB,EACAiM,EAAAlM,GAAA,GAAA5mB,KAAAoC,IAAA,GAAApC,KAAAoC,IAAAykB,GAAAD,GAAA,IAAA5mB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAAykB,EACAkM,EAAAnM,IAAA5mB,KAAAoC,KAAApC,KAAAoC,IAAAykB,GAAAD,GAAA5mB,KAAAoC,IAAApC,KAAAoC,IAAAykB,EACAmM,EAAApM,GAAA,IAAA5mB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAAykB,GAAAD,GAAA,IAAA5mB,KAAAoC,IAAA,IAAApC,KAAAoC,IAAAykB,EACAoM,EAAAnB,EAAA,IACA/xB,EAAA,CAAcU,EAAAsyB,GAAA,EAAA/yB,KAAAD,IAAAye,EAAA/d,GAAA+d,EAAA/d,EAAA,IAAAwyB,GAAA1E,EAAA9tB,GAAA8tB,EAAA9tB,EAAA,IAAAwyB,IAAAvyB,EAAAsyB,GAAA,EAAAhzB,KAAAD,IAAAye,EAAA9d,GAAA8d,EAAA9d,EAAA,IAAAuyB,GAAA1E,EAAA7tB,GAAA6tB,EAAA7tB,EAAA,IAAAuyB,KACdhzB,EAAA,CAAcQ,EAAAoyB,EAAA,EAAA7yB,KAAAC,IAAAue,EAAA/d,GAAA+d,EAAA/d,EAAA,IAAAwyB,GAAA1E,EAAA9tB,GAAA8tB,EAAA9tB,EAAA,IAAAwyB,IAAAvyB,EAAAoyB,EAAA,EAAA9yB,KAAAC,IAAAue,EAAA9d,GAAA8d,EAAA9d,EAAA,IAAAuyB,GAAA1E,EAAA7tB,GAAA6tB,EAAA7tB,EAAA,IAAAuyB,KACd/Y,EAAA,CAAejB,MAAA,IAAAhZ,EAAAQ,EAAAV,EAAAU,GAAAyY,OAAA,IAAAjZ,EAAAS,EAAAX,EAAAW,IACf+xB,EAAAzyB,KAAAD,IAAAwyB,EAAArY,EAAAjB,MAAAuZ,EAAAtY,EAAAhB,QACAoT,EAAA,CAAa7rB,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,GAAAC,GAAA,IAAAT,EAAAS,EAAAX,EAAAW,IAGb,IAAAzF,EAAA,EAAAqZ,EAAAoe,EAAA//B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3Cy3B,EAAAz3B,GAAA61B,SAAAtb,EAAAsX,uBAAA4F,EAAAz3B,MAeA,IAZA6d,EAAAiM,YAAAvP,EAAA0d,oBACApa,EAAAmO,YAAAjnB,KAAAC,KAAAwyB,EAAA3Z,EAAAiM,aAAA,KACAjM,EAAAkO,YAAAhnB,KAAAC,IAAA6xB,EAAAhZ,EAAAmO,YAAA,WACAnO,EAAAqa,cAAAra,EAAAmO,YAAAnO,EAAAkO,cAAAxR,EAAA4d,iCAAA,GACAta,EAAAua,QAAA/G,EAAA7rB,EAAAqY,EAAAmO,YACAnO,EAAAwa,QAAAhH,EAAA5rB,EAAAoY,EAAAmO,YAEAnF,EAAAyR,MAAA/d,EAAAge,iBAEAhe,EAAAyR,YAAAnO,EAAAmO,YAAAnO,EAAAqa,aAAA3d,EAAAie,qBAAAje,EAAA3C,OACA2C,EAAAwR,YAAAhnB,KAAAC,IAAAuV,EAAAyR,YAAAnO,EAAAqa,aAAAR,EAAA,GAEA13B,EAAA,EAAAqZ,EAAAoe,EAAA//B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3Cua,EAAAmO,cAAA+O,EAAAz3B,KAAA8nB,IAIAY,cAAA,SAAAjK,EAAA7G,EAAAkQ,GACA,IAAAvN,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MACAkR,EAAAlR,EAAAkR,UACAsI,EAAAxZ,EAAAlE,QACA8e,EAAApB,EAAA1S,UACA+T,GAAA3J,EAAA3Q,KAAA2Q,EAAAzQ,OAAA,EACAqa,GAAA5J,EAAA1Q,IAAA0Q,EAAAxQ,QAAA,EACAoN,EAAA0L,EAAAvY,SACA8M,EAAAyL,EAAAvY,SACAiI,EAAAxM,EAAAyM,aACA8P,EAAAhP,GAAA2Q,EAAAzC,cAAA,EAAAvX,EAAAsE,OAAA,EAAAxI,EAAAqe,uBAAA7R,EAAAtsB,KAAAmd,KAAAyf,EAAAP,eAAA,EAAA/xB,KAAAoC,KACA4kB,EAAAjE,GAAA2Q,EAAAxC,aAAA,EAAA1b,EAAAwR,YACAC,EAAAlE,GAAA2Q,EAAAxC,aAAA,EAAA1b,EAAAyR,YACArS,EAAA8E,EAAAoX,UAAA,GAEApT,GAAAtI,OAAAsE,EAAA,CAEA2J,cAAA7N,EAAA3C,MACA0Q,OAAA1Q,EAGAsL,OAAA,CACA0G,gBAAAjQ,EAAAiQ,gBACAC,YAAAlQ,EAAAkQ,YACAC,YAAAnQ,EAAAmQ,YACAgB,YAAAnR,EAAAmR,YACAtlB,EAAAkzB,EAAA7a,EAAAua,QACA3yB,EAAAkzB,EAAA9a,EAAAwa,QACA1M,aACAC,WACAkL,gBACA9K,cACAD,cACAkG,MAAAxP,GAAA/J,sBAAAqO,EAAAkL,MAAAra,EAAAiG,EAAApjB,KAAAy3B,OAAAta,OAIA,IAAA0L,EAAA7E,EAAAyE,OAGA4E,GAAA2Q,EAAAzC,gBAEA1S,EAAAqI,WADA,IAAA/T,EACAyf,EAAAvY,SAEAvE,EAAAuM,UAAArsB,KAAAmd,EAAA,GAAAsL,OAAA0I,SAGAtI,EAAAsI,SAAAtI,EAAAqI,WAAArI,EAAAwT,eAGArY,EAAAuE,SAGAuV,eAAA,WACA,IAGA1jC,EAHAkyB,EAAAhrB,KAAAirB,aACAH,EAAA9qB,KAAA+qB,UACAwR,EAAA,EAcA,OAXA7V,GAAA5J,KAAAgO,EAAApsB,KAAA,SAAAguB,EAAA7Q,GACA/iB,EAAAkyB,EAAAtsB,KAAAmd,GACAjE,MAAA9e,IAAA4zB,EAAA1F,SACAuV,GAAAvzB,KAAAwpB,IAAA15B,MAQAyjC,GAGAM,uBAAA,SAAA/jC,GACA,IAAAyjC,EAAAv8B,KAAA+qB,UAAAwR,MACA,OAAAA,EAAA,IAAA3kB,MAAA9e,GACA,EAAAkQ,KAAAoC,IAAApC,KAAAwpB,IAAA15B,GAAAyjC,GAEA,GAIAL,kBAAA,SAAAR,GACA,IAGAz3B,EAAAqZ,EAAAwN,EAAApI,EAAA0V,EAAAxa,EAAAmQ,EAAA+O,EAFA7zB,EAAA,EACA6Y,EAFA9hB,KAEA8hB,MAGA,IAAA4Z,EAEA,IAAAz3B,EAAA,EAAAqZ,EAAAwE,EAAApjB,KAAA6sB,SAAA5vB,OAAiDsI,EAAAqZ,IAAUrZ,EAC3D,GAAA6d,EAAAqV,iBAAAlzB,GAAA,CACA6mB,EAAAhJ,EAAA0J,eAAAvnB,GACAy3B,EAAA5Q,EAAApsB,KACAuF,IAXAjE,KAWA6b,QACAuc,EAAAtN,EAAAsN,YAEA,MAKA,IAAAsD,EACA,SAGA,IAAAz3B,EAAA,EAAAqZ,EAAAoe,EAAA//B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3Cye,EAAAgZ,EAAAz3B,GAEA,WADA2Z,EAAAwa,IAAAtC,uBAAApT,EAAAze,GAAAye,EAAAoX,UACA/K,cACAhB,EAAAnQ,EAAAmQ,YACA+O,EAAAlf,EAAAsQ,iBAGAjlB,EAAA6zB,GADA7zB,EAAA8kB,EAAA9kB,EAAA8kB,EAAA9kB,GACA6zB,EAAA7zB,GAGA,OAAAA,GAMAykB,cAAA,SAAAhL,GACA,IAAA6E,EAAA7E,EAAAyE,OACAvJ,EAAA8E,EAAAoX,SACAlM,EAAAlH,GAAAkH,cAEAlL,EAAA+K,eAAA,CACAI,gBAAAtG,EAAAsG,gBACAC,YAAAvG,EAAAuG,YACAC,YAAAxG,EAAAwG,aAGAxG,EAAAsG,gBAAAmM,GAAApc,EAAAoQ,qBAAAJ,EAAAhQ,EAAAiQ,kBACAtG,EAAAuG,YAAAkM,GAAApc,EAAAqQ,iBAAAL,EAAAhQ,EAAAkQ,cACAvG,EAAAwG,YAAAiM,GAAApc,EAAAsQ,iBAAAtQ,EAAAmQ,cAMA+H,uBAAA,SAAApT,EAAA7G,GACA,IAMA5X,EAAAqZ,EAAA1b,EALAkgB,EADA9hB,KACA8hB,MACAkJ,EAFAhrB,KAEAirB,aACA0C,EAAAjL,EAAAiL,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA5K,IACA/M,EAAA,GAIA8Q,EAAA,CACA3E,QACAgX,UAAAjd,EACAmP,UACAR,aAbAxqB,KAaA6b,OAGAqB,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAjZ,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAE3C0R,EADA/T,EAAAsb,EAAAjZ,IACA81B,GAAA,CACApM,EAAA/rB,GACAopB,EAAAppB,GACAgc,EAAAhc,IACA6kB,EAAA5K,GAGA,OAAAlG,GAOA8mB,qBAAA,SAAAjS,GAGA,IAFA,IAAAuS,EAAA,EAEA94B,EAAA,EAAiBA,EAAAumB,IAAkBvmB,EACnCjE,KAAA8hB,MAAAqV,iBAAAlzB,KACA84B,GAAA/8B,KAAA47B,eAAA33B,IAIA,OAAA84B,GAMAnB,eAAA,SAAAoB,GACA,OAAAh0B,KAAAC,IAAA+wB,GAAAh6B,KAAA8hB,MAAApjB,KAAA6sB,SAAAyR,GAAAliB,OAAA,OAOAshB,8BAAA,WACA,OAAAp8B,KAAAy8B,qBAAAz8B,KAAA8hB,MAAApjB,KAAA6sB,SAAA5vB,WAIA8pB,GAAAR,KAAA,iBACAiQ,MAAA,CACAC,KAAA,QACA8H,KAAA,KAGA9R,OAAA,CACAC,MAAA,EACArsB,KAAA,SACAk6B,SAAA,WAGA3N,MAAA,EACAvsB,KAAA,WACAk6B,SAAA,OACA7D,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAKAlI,SAAA,CACA+G,UAAA,CACAN,cAAA,SAIAmF,SAAA,CACA/D,KAAA,QACA8H,KAAA,OAIA,IAAAC,GAAAzH,GAAArX,OAAA,CAIAuN,iBAAA,WACA,OAAA3rB,KAAA+qB,UAAAG,SAMAU,iBAAA,WACA,OAAA5rB,KAAA+qB,UAAAM,WAIA8R,GAAAzW,GAAAjK,eACA2gB,GAAA1W,GAAA9I,QAAAzd,QACAk9B,GAAA3W,GAAAE,OAAAjD,eAsBA,SAAA2Z,GAAAtS,EAAApN,GACA,OAAAuf,GAAAnS,EAAAuS,SAAA3f,EAAA4H,WArBAC,GAAAR,KAAA,QACAO,WAAA,EACAkM,UAAA,EAEAwD,MAAA,CACAC,KAAA,SAGAhK,OAAA,CACAC,MAAA,EACArsB,KAAA,WACA8D,GAAA,aAEAyoB,MAAA,EACAvsB,KAAA,SACA8D,GAAA,gBASA,IAAA26B,GAAA1O,GAAA1Q,OAAA,CAEAqM,mBAAA6C,GAAAwH,KAEApK,gBAAA4C,GAAAyH,MAEA/I,OAAA,SAAAD,GACA,IAOA9nB,EAAAqZ,EAPAkB,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACAkG,EAAAnG,EAAAE,QACA2G,EAAA7G,EAAApsB,MAAA,GACAiZ,EAAA6G,EAAAiN,cAAAX,EAAAO,SACAL,EAAAxM,EAAAyM,aACAsS,EAAAD,GAAAtS,EAAAxM,EAAAsD,MAAAlE,SAsBA,IAlBA2f,SAEA3hC,IAAAovB,EAAAxG,cAAA5oB,IAAAovB,EAAAyS,cACAzS,EAAAyS,YAAAzS,EAAAxG,SAIAyM,EAAAyM,OAAA/lB,EACAsZ,EAAA5E,cAAA7N,EAAA3C,MAEAoV,EAAAW,UAAAD,EAEAV,EAAA9J,OAAA3I,EAAAmf,oBAAA1M,GAEAA,EAAAhK,SAIAhjB,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAmCsI,EAAAqZ,IAAUrZ,EAC7Cua,EAAAmO,cAAAgF,EAAA1tB,KAAA8nB,GAQA,IALAwR,GAAA,IAAAtM,EAAA9J,OAAA3C,SACAhG,EAAAof,4BAIA35B,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAmCsI,EAAAqZ,IAAUrZ,EAC7C0tB,EAAA1tB,GAAAgjB,SAIA0F,cAAA,SAAA/I,EAAA/H,EAAAkQ,GACA,IASAtiB,EAAAC,EATA8U,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACA4C,EAAA/J,EAAA+J,QAAA,GACA3C,EAAAxM,EAAAyM,aACAT,EAAAhM,EAAA3C,MACA/iB,EAAAkyB,EAAAtsB,KAAAmd,GACA6d,EAAAlb,EAAAiN,cAAAX,EAAAO,SACAoO,EAAAjb,EAAAiN,cAAAX,EAAAI,SACA2S,EAAA/S,EAAAE,QAAA7D,OAGAvJ,EAAAY,EAAAsf,qBAAAla,EAAA/H,GAEApS,EAAAgwB,EAAAhC,iBAAA,iBAAA3+B,IAAA+gC,IAAAhe,EAAA2O,GACA9gB,EAAAqiB,EAAA2N,EAAApD,eAAA9X,EAAAuf,gBAAAjlC,EAAA+iB,EAAA2O,GAGA5G,EAAAmS,QAAA0D,EACA7V,EAAAoS,QAAA0D,EACA9V,EAAAkW,SAAAlc,EACAgG,EAAAyI,cAAA7B,EACA5G,EAAA2I,OAAA1Q,EAGA+H,EAAAuD,OAAA,CACA1d,IACAC,IACA0oB,KAAAzE,EAAAyE,MAAAxa,MAAAnO,IAAAmO,MAAAlO,GAEA0Y,OAAAxE,EAAAwE,OACAsQ,WAAA9U,EAAA8U,WACA3P,SAAAnF,EAAAmF,SACA8K,gBAAAjQ,EAAAiQ,gBACAC,YAAAlQ,EAAAkQ,YACAC,YAAAnQ,EAAAmQ,YACAvJ,QAAA2Y,GAAAxP,EAAAnJ,QAAAqZ,IAAArZ,QAAA,GACAF,cAAAuZ,KAAAvZ,YAEAmO,UAAA7U,EAAA6U,YAOAqL,qBAAA,SAAApR,EAAA7Q,GACA,IAMA5X,EAAAqZ,EAAA1b,EALAkgB,EADA9hB,KACA8hB,MACAkJ,EAAAlJ,EAAApjB,KAAA6sB,SAFAvrB,KAEA6b,OACA8R,EAAAjB,EAAAiB,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA1J,MACAjO,EAAA,GAIA8Q,EAAA,CACA3E,QACAgX,UAAAjd,EACAmP,UACAR,aAbAxqB,KAaA6b,OAGAmiB,EAAA,CACAnQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACA0E,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACAtQ,OAAA,cACAW,SAAA,iBAEA7F,EAAAvkB,OAAAukB,KAAA8gB,GAEA,IAAA/5B,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAC3CrC,EAAAsb,EAAAjZ,GACA0R,EAAA/T,GAAAw7B,GAAA,CACAzP,EAAA/rB,GACAopB,EAAAgT,EAAAp8B,IACAopB,EAAAppB,GACAgc,EAAAhc,IACA6kB,EAAA5K,GAGA,OAAAlG,GAMAgoB,oBAAA,SAAAjR,GACA,IAOAzoB,EAAAqZ,EAAA1b,EANAkgB,EADA9hB,KACA8hB,MACAkJ,EAAAlJ,EAAApjB,KAAA6sB,SAFAvrB,KAEA6b,OACA8R,EAAAjB,EAAAiB,QAAA,GACA/P,EAAAkE,EAAAlE,QACAqgB,EAAArgB,EAAA0P,SAAA2D,KACAtb,EAAA,GAGAuH,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,OACA,0BAGA,IAAAjZ,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAE3C0R,EADA/T,EAAAsb,EAAAjZ,IACAm5B,GAAA,CACAzP,EAAA/rB,GACAopB,EAAAppB,GACAq8B,EAAAr8B,KAWA,OAJA+T,EAAA+b,SAAAyL,GAAAnS,EAAA0G,SAAA9T,EAAA8T,UACA/b,EAAA6O,QAAA2Y,GAAAnS,EAAAyS,YAAAQ,EAAAzZ,SACA7O,EAAA2O,YAAA8Y,GAAA,CAAAzP,EAAArJ,YAAA0G,EAAA1G,YAAA2Z,EAAA5Z,UAEA1O,GAGAooB,gBAAA,SAAAjlC,EAAA+iB,EAAA2O,GACA,IAMAvmB,EAAAu2B,EAAA0D,EALApc,EADA9hB,KACA8hB,MACAgJ,EAFA9qB,KAEA+qB,UACA2O,EAHA15B,KAGAyrB,cAAAX,EAAAO,SACA8S,EAAA,EACAC,EAAA,EAGA,GAAA1E,EAAA9b,QAAAqZ,QAAA,CACA,IAAAhzB,EAAA,EAAcA,EAAAumB,EAAkBvmB,IAGhC,GAFAu2B,EAAA1Y,EAAApjB,KAAA6sB,SAAAtnB,GAEA,UADAi6B,EAAApc,EAAA0J,eAAAvnB,IACAlF,MAAAm/B,EAAA7S,UAAAqO,EAAA72B,IAAAif,EAAAqV,iBAAAlzB,GAAA,CACA,IAAAo6B,EAAA7hB,OAAAkd,EAAAxB,cAAAsC,EAAA97B,KAAAmd,KACAwiB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAA9hB,OAAAkd,EAAAxB,cAAAp/B,IACA,OAAAwlC,EAAA,EACA5E,EAAAjC,iBAAA2G,EAAAE,GAEA5E,EAAAjC,iBAAA0G,EAAAG,GAGA,OAAA5E,EAAAjC,iBAAA3+B,IAGA8kC,0BAAA,WACA,IAMA35B,EAAAqZ,EAAAiK,EAAAgX,EALAzc,EADA9hB,KACA8hB,MACAgJ,EAFA9qB,KAEA+qB,UACA8S,EAAA/S,EAAAE,QAAA7D,OACAtD,EAAA/B,EAAAkR,UACArB,EAAA7G,EAAApsB,MAAA,GAUA,SAAA8/B,EAAAC,EAAA11B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA01B,EAAAx1B,GAAAF,GAGA,GAVA80B,EAAAnM,WACAC,IAAA+M,OAAA,SAAAD,GACA,OAAAA,EAAAtX,OAAAiL,QAQA,aAAAyL,EAAAc,uBACAjY,GAAAkY,oBAAAjN,QAEA,IAAA1tB,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAoCsI,EAAAqZ,IAAUrZ,EAC9CsjB,EAAAoK,EAAA1tB,GAAAkjB,OACAoX,EAAA7X,GAAAmY,YACAnY,GAAAyL,aAAAR,EAAA1tB,GAAAkjB,OACAI,EACAb,GAAAoY,SAAAnN,EAAA1tB,GAAAkjB,OACA0W,EAAArZ,SAEA+C,EAAA7C,sBAAA6Z,EAAApa,SAAA1a,EACA8d,EAAA3C,sBAAA2Z,EAAApa,SAAAza,EACA6d,EAAA5C,kBAAA4Z,EAAAz/B,KAAA2K,EACA8d,EAAA1C,kBAAA0Z,EAAAz/B,KAAA4K,EAIA,GAAAoY,EAAAlE,QAAA0P,SAAA2D,KAAAK,gBACA,IAAArtB,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAoCsI,EAAAqZ,IAAUrZ,EAC9CsjB,EAAAoK,EAAA1tB,GAAAkjB,OACAkW,GAAA9V,EAAA1D,KACA5f,EAAA,GAAAo5B,GAAA1L,EAAA1tB,EAAA,GAAAkjB,OAAAtD,KACA0D,EAAA7C,sBAAA8Z,EAAAjX,EAAA7C,sBAAAb,EAAAxB,KAAAwB,EAAAtB,OACAgF,EAAA3C,sBAAA4Z,EAAAjX,EAAA3C,sBAAAf,EAAAvB,IAAAuB,EAAArB,SAEAve,EAAA0tB,EAAAh2B,OAAA,GAAA0hC,GAAA1L,EAAA1tB,EAAA,GAAAkjB,OAAAtD,KACA0D,EAAA5C,kBAAA6Z,EAAAjX,EAAA5C,kBAAAd,EAAAxB,KAAAwB,EAAAtB,OACAgF,EAAA1C,kBAAA2Z,EAAAjX,EAAA1C,kBAAAhB,EAAAvB,IAAAuB,EAAArB,WAOA+K,KAAA,WACA,IAMAwR,EALAjd,EADA9hB,KACA8hB,MACAgJ,EAFA9qB,KAEA+qB,UACA4G,EAAA7G,EAAApsB,MAAA,GACAmlB,EAAA/B,EAAAkR,UACA1V,EAAAqU,EAAAh2B,OAEAsI,EAAA,EAkBA,IAhBAq5B,GATAt9B,KASAirB,aAAAnJ,EAAAlE,WACAmhB,GAAAjU,EAAAE,QAAA7D,OAAA4G,aAAA,KAEArH,GAAAE,OAAA9C,SAAAhC,EAAAC,IAAA,CACAM,KAAAwB,EAAAxB,KACAE,MAAAsB,EAAAtB,MACAD,IAAAuB,EAAAvB,IAAAyc,EACAvc,OAAAqB,EAAArB,OAAAuc,IAGAjU,EAAAE,QAAAuC,OAEA7G,GAAAE,OAAA3C,WAAAnC,EAAAC,MAIQ9d,EAAAqZ,IAAUrZ,EAClB0tB,EAAA1tB,GAAAspB,KAAA1J,IAOA6J,cAAA,SAAA9J,GACA,IAAA2D,EAAA3D,EAAAuD,OACAvJ,EAAAgG,EAAAkW,SACAlM,EAAAlH,GAAAkH,cAEAhK,EAAA6J,eAAA,CACAI,gBAAAtG,EAAAsG,gBACAC,YAAAvG,EAAAuG,YACAC,YAAAxG,EAAAwG,YACA3L,OAAAmF,EAAAnF,QAGAmF,EAAAsG,gBAAAsP,GAAAvf,EAAAoQ,qBAAAJ,EAAAhQ,EAAAiQ,kBACAtG,EAAAuG,YAAAqP,GAAAvf,EAAAqQ,iBAAAL,EAAAhQ,EAAAkQ,cACAvG,EAAAwG,YAAAoP,GAAAvf,EAAAsQ,iBAAAtQ,EAAAmQ,aACAxG,EAAAnF,OAAA+a,GAAAvf,EAAAwR,YAAAxR,EAAAwE,WAIA4c,GAAAtY,GAAA9I,QAAAzd,QAEAslB,GAAAR,KAAA,aACAtN,MAAA,CACA5Y,KAAA,eACAkgC,WAAA,CACAC,SAAA,GAEA3J,UAAA,CACA4J,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEAtH,MAAA,CACAyH,aAAA,IAKAzW,UAAA,CACAqR,eAAA,EACAC,cAAA,GAGAtK,YAAA,GAAA5mB,KAAAoC,GACA+uB,eAAA,SAAArY,GACA,IAAAsY,EAAA,GACAA,EAAA72B,KAAA,cAAAue,EAAAjf,GAAA,aAEA,IAAAnE,EAAAojB,EAAApjB,KACA6sB,EAAA7sB,EAAA6sB,SACA4K,EAAAz3B,EAAAy3B,OAEA,GAAA5K,EAAA5vB,OACA,QAAAsI,EAAA,EAAkBA,EAAAsnB,EAAA,GAAA7sB,KAAA/C,SAA6BsI,EAC/Cm2B,EAAA72B,KAAA,qCAAAgoB,EAAA,GAAAsC,gBAAA5pB,GAAA,aACAkyB,EAAAlyB,IACAm2B,EAAA72B,KAAA4yB,EAAAlyB,IAEAm2B,EAAA72B,KAAA,SAKA,OADA62B,EAAA72B,KAAA,SACA62B,EAAAC,KAAA,KAEAC,OAAA,CACAnE,OAAA,CACAoE,eAAA,SAAAzY,GACA,IAAApjB,EAAAojB,EAAApjB,KACA,OAAAA,EAAAy3B,OAAAx6B,QAAA+C,EAAA6sB,SAAA5vB,OACA+C,EAAAy3B,OAAA1Y,IAAA,SAAAyY,EAAAjyB,GACA,IAAA6mB,EAAAhJ,EAAA0J,eAAA,GACAgP,EAAA97B,EAAA6sB,SAAA,GACA7I,EAAAoI,EAAApsB,KAAAuF,GACA0pB,EAAAjL,EAAAiL,QAAA,GACA8M,EAAA3Y,EAAAlE,QAAA0P,SAAA5K,IACAc,EAAAwb,GAAA,CAAArR,EAAAE,gBAAA2M,EAAA3M,gBAAA4M,EAAA5M,sBAAAjyB,EAAAqI,GACAwf,EAAAub,GAAA,CAAArR,EAAAG,YAAA0M,EAAA1M,YAAA2M,EAAA3M,kBAAAlyB,EAAAqI,GACAy2B,EAAAsE,GAAA,CAAArR,EAAAI,YAAAyM,EAAAzM,YAAA0M,EAAA1M,kBAAAnyB,EAAAqI,GAEA,OACAm2B,KAAAlE,EACAtF,UAAApN,EACAuN,YAAAtN,EACAoN,UAAA6J,EACA1T,OAAApP,MAAA4iB,EAAA97B,KAAAuF,KAAA6mB,EAAApsB,KAAAuF,GAAA+iB,OAGAnL,MAAA5X,KAIA,KAIA02B,QAAA,SAAAC,EAAAC,GACA,IAEA52B,EAAAqZ,EAAAwN,EAFAjP,EAAAgf,EAAAhf,MACAiG,EAAA9hB,KAAA8hB,MAGA,IAAA7d,EAAA,EAAAqZ,GAAAwE,EAAApjB,KAAA6sB,UAAA,IAAA5vB,OAAyDsI,EAAAqZ,IAAUrZ,GACnE6mB,EAAAhJ,EAAA0J,eAAAvnB,IACAvF,KAAAmd,GAAAmL,QAAA8D,EAAApsB,KAAAmd,GAAAmL,OAGAlF,EAAAkK,WAKAkN,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEAlD,MAAA,SAAAhzB,EAAAxE,GACA,OAAAA,EAAAy3B,OAAAjzB,EAAA2Y,OAAA,KAAA3Y,EAAAq2B,YAMA,IAAA+F,GAAAxQ,GAAA1Q,OAAA,CAEAsM,gBAAA4C,GAAAuH,IAEAlK,WAAAjE,GAAAxK,KAEA8P,OAAA,SAAAD,GACA,IAOA9nB,EAAAqZ,EAAAoS,EAPAlR,EAAAxe,KACAgrB,EAAAxM,EAAAyM,aACAH,EAAAtM,EAAAuM,UACAvD,EAAAhJ,EAAAsD,MAAAlE,QAAAgS,YAAA,EACA2P,EAAA/gB,EAAAghB,QAAA,GACAC,EAAAjhB,EAAAkhB,QAAA,GACAhE,EAAA5Q,EAAApsB,KAOA,IAJA8f,EAAAmhB,gBAEA7U,EAAAwD,MAAA9P,EAAAohB,uBAEA37B,EAAA,EAAAqZ,EAAA0N,EAAAtsB,KAAA/C,OAAyCsI,EAAAqZ,EAAUrZ,IACnDs7B,EAAAt7B,GAAAujB,EACAkI,EAAAlR,EAAAqhB,cAAA57B,GACAw7B,EAAAx7B,GAAAyrB,EACAlI,GAAAkI,EAGA,IAAAzrB,EAAA,EAAAqZ,EAAAoe,EAAA//B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3Cy3B,EAAAz3B,GAAA61B,SAAAtb,EAAAsX,uBAAA4F,EAAAz3B,MACAua,EAAAmO,cAAA+O,EAAAz3B,KAAA8nB,IAOA4T,cAAA,WACA,IAAAnhB,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MACAkR,EAAAlR,EAAAkR,UACAsI,EAAAxZ,EAAAlE,QACA6d,EAAAzyB,KAAAD,IAAAiqB,EAAAzQ,MAAAyQ,EAAA3Q,KAAA2Q,EAAAxQ,OAAAwQ,EAAA1Q,KAEAR,EAAAmO,YAAAjnB,KAAAC,IAAAwyB,EAAA,KACA3Z,EAAAkO,YAAAhnB,KAAAC,IAAAqyB,EAAAR,iBAAAhZ,EAAAmO,YAAA,IAAAqL,EAAA,sBACAxZ,EAAAqa,cAAAra,EAAAmO,YAAAnO,EAAAkO,aAAAlO,EAAAge,yBAEAthB,EAAAyR,YAAAnO,EAAAmO,YAAAnO,EAAAqa,aAAA3d,EAAA3C,MACA2C,EAAAwR,YAAAxR,EAAAyR,YAAAnO,EAAAqa,cAGAxP,cAAA,SAAAjK,EAAA7G,EAAAkQ,GACA,IAAAvN,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MACAkJ,EAAAxM,EAAAyM,aACAqQ,EAAAxZ,EAAAlE,QACA8e,EAAApB,EAAA1S,UACAjR,EAAAmK,EAAAnK,MACAwe,EAAArU,EAAApjB,KAAAy3B,OAEAwG,EAAAhlB,EAAAooB,QACAnD,EAAAjlB,EAAAqoB,QAGAC,EAAA3E,EAAA1L,WACAD,EAAAjN,EAAAsE,OAAA,EAAArP,EAAAuoB,8BAAAlV,EAAAtsB,KAAAmd,IACA+T,EAAApR,EAAAghB,QAAA3jB,GACAgU,EAAAD,GAAAlN,EAAAsE,OAAA,EAAAxI,EAAAkhB,QAAA7jB,IAEAskB,EAAAzD,EAAAxC,aAAA,EAAAviB,EAAAuoB,8BAAAlV,EAAAtsB,KAAAmd,IACA+B,EAAA8E,EAAAoX,UAAA,GAEApT,GAAAtI,OAAAsE,EAAA,CAEA2J,cAAA7N,EAAA3C,MACA0Q,OAAA1Q,EACA6hB,OAAA/lB,EAGAwP,OAAA,CACA0G,gBAAAjQ,EAAAiQ,gBACAC,YAAAlQ,EAAAkQ,YACAC,YAAAnQ,EAAAmQ,YACAgB,YAAAnR,EAAAmR,YACAtlB,EAAAkzB,EACAjzB,EAAAkzB,EACA5M,YAAA,EACAC,YAAAlE,EAAAoU,EAAAxQ,EACAC,WAAA7D,GAAA2Q,EAAAzC,cAAAgG,EAAArQ,EACAC,SAAA9D,GAAA2Q,EAAAzC,cAAAgG,EAAApQ,EACAqG,MAAAxP,GAAA/J,sBAAAwZ,EAAAta,EAAAsa,EAAAta,OAIA6G,EAAAuE,SAGA2Y,qBAAA,WACA,IAAA5U,EAAAhrB,KAAAirB,aACAH,EAAA9qB,KAAA+qB,UACAuD,EAAA,EAQA,OANA5H,GAAA5J,KAAAgO,EAAApsB,KAAA,SAAAguB,EAAA7Q,GACAjE,MAAAoT,EAAAtsB,KAAAmd,KAAA6Q,EAAA1F,QACAsH,MAIAA,GAMAZ,cAAA,SAAAhL,GACA,IAAA6E,EAAA7E,EAAAyE,OACAvJ,EAAA8E,EAAAoX,SACAlM,EAAAlH,GAAAkH,cACAnR,EAAAiK,GAAAjK,eAEAiG,EAAA+K,eAAA,CACAI,gBAAAtG,EAAAsG,gBACAC,YAAAvG,EAAAuG,YACAC,YAAAxG,EAAAwG,aAGAxG,EAAAsG,gBAAApR,EAAAmB,EAAAoQ,qBAAAJ,EAAAhQ,EAAAiQ,kBACAtG,EAAAuG,YAAArR,EAAAmB,EAAAqQ,iBAAAL,EAAAhQ,EAAAkQ,cACAvG,EAAAwG,YAAAtR,EAAAmB,EAAAsQ,iBAAAtQ,EAAAmQ,cAMA+H,uBAAA,SAAApT,EAAA7G,GACA,IAMA5X,EAAAqZ,EAAA1b,EALAkgB,EADA9hB,KACA8hB,MACAkJ,EAFAhrB,KAEAirB,aACA0C,EAAAjL,EAAAiL,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA5K,IACA/M,EAAA,GAIA8Q,EAAA,CACA3E,QACAgX,UAAAjd,EACAmP,UACAR,aAbAxqB,KAaA6b,OAGAqB,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAjZ,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAE3C0R,EADA/T,EAAAsb,EAAAjZ,IACA+6B,GAAA,CACArR,EAAA/rB,GACAopB,EAAAppB,GACAgc,EAAAhc,IACA6kB,EAAA5K,GAGA,OAAAlG,GAMAkqB,cAAA,SAAAhkB,GACA,IAAA2C,EAAAxe,KACAsuB,EAAAtuB,KAAA+qB,UAAAuD,MACAtD,EAAAxM,EAAAyM,aACAH,EAAAtM,EAAAuM,UAEA,GAAAnT,MAAAoT,EAAAtsB,KAAAmd,KAAAiP,EAAApsB,KAAAmd,GAAAmL,OACA,SAIA,IAAAP,EAAA,CACA3E,MAAAtD,EAAAsD,MACAgX,UAAAjd,EACAmP,UACAR,aAAAhM,EAAA3C,OAGA,OAAAmjB,GAAA,CACAxgB,EAAAsD,MAAAlE,QAAA0P,SAAA5K,IAAAgN,MACA,EAAA1mB,KAAAoC,GAAAkjB,GACA7H,EAAA5K,MAIA4J,GAAAR,KAAA,MAAAyB,GAAAxL,MAAAuK,GAAA2a,WACA3a,GAAAR,KAAA,OACA6V,iBAAA,IAIA,IAAAuF,GAAAnF,GAEAoF,GAAA5Z,GAAAjK,eACA8jB,GAAA7Z,GAAA9I,QAAAzd,QAEAslB,GAAAR,KAAA,SACAtN,MAAA,CACA5Y,KAAA,gBAEAuuB,SAAA,CACA2D,KAAA,CACAzM,QAAA,MAKA,IAAAgc,GAAA1R,GAAA1Q,OAAA,CAEAqM,mBAAA6C,GAAAwH,KAEApK,gBAAA4C,GAAAyH,MAEApK,WAAAjE,GAAAxK,KAEA8P,OAAA,SAAAD,GACA,IAMA9nB,EAAAqZ,EANAkB,EAAAxe,KACA8qB,EAAAtM,EAAAuM,UACAkG,EAAAnG,EAAAE,QACA2G,EAAA7G,EAAApsB,MAAA,GACAiZ,EAAA6G,EAAAsD,MAAAnK,MACAqT,EAAAxM,EAAAyM,aAoBA,SAhBArvB,IAAAovB,EAAAxG,cAAA5oB,IAAAovB,EAAAyS,cACAzS,EAAAyS,YAAAzS,EAAAxG,SAIAyM,EAAAyM,OAAA/lB,EACAsZ,EAAA5E,cAAA7N,EAAA3C,MAEAoV,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAA9J,OAAA3I,EAAAmf,oBAAA1M,GAEAA,EAAAhK,QAGAhjB,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAmCsI,EAAAqZ,IAAUrZ,EAC7Cua,EAAAmO,cAAAgF,EAAA1tB,KAAA8nB,GAOA,IAHAvN,EAAAof,4BAGA35B,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAmCsI,EAAAqZ,IAAUrZ,EAC7C0tB,EAAA1tB,GAAAgjB,SAIA0F,cAAA,SAAA/I,EAAA/H,EAAAkQ,GACA,IAAAvN,EAAAxe,KACA2tB,EAAA/J,EAAA+J,QAAA,GACA3C,EAAAxM,EAAAyM,aACAtT,EAAA6G,EAAAsD,MAAAnK,MACA8oB,EAAA9oB,EAAA+oB,yBAAA7kB,EAAAmP,EAAAtsB,KAAAmd,IACA+B,EAAAY,EAAAsf,qBAAAla,EAAA/H,GACAgiB,EAAArf,EAAAuM,UAAAC,QAAA7D,OACA1d,EAAAsiB,EAAApU,EAAAooB,QAAAU,EAAAh3B,EACAC,EAAAqiB,EAAApU,EAAAqoB,QAAAS,EAAA/2B,EAGAka,EAAA8Z,OAAA/lB,EACAiM,EAAAkW,SAAAlc,EACAgG,EAAAyI,cAAA7N,EAAA3C,MACA+H,EAAA2I,OAAA1Q,EAGA+H,EAAAuD,OAAA,CACA1d,IACAC,IACA0oB,KAAAzE,EAAAyE,MAAAxa,MAAAnO,IAAAmO,MAAAlO,GAEA0Y,OAAAxE,EAAAwE,OACAsQ,WAAA9U,EAAA8U,WACA3P,SAAAnF,EAAAmF,SACA8K,gBAAAjQ,EAAAiQ,gBACAC,YAAAlQ,EAAAkQ,YACAC,YAAAnQ,EAAAmQ,YACAvJ,QAAA8b,GAAA3S,EAAAnJ,QAAAqZ,IAAArZ,QAAA,GAGAiO,UAAA7U,EAAA6U,YAOAqL,qBAAA,SAAApR,EAAA7Q,GACA,IAMA5X,EAAAqZ,EAAA1b,EALAkgB,EADA9hB,KACA8hB,MACAkJ,EAAAlJ,EAAApjB,KAAA6sB,SAFAvrB,KAEA6b,OACA8R,EAAAjB,EAAAiB,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA1J,MACAjO,EAAA,GAIA8Q,EAAA,CACA3E,QACAgX,UAAAjd,EACAmP,UACAR,aAbAxqB,KAaA6b,OAGAmiB,EAAA,CACAnQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACA0E,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACAtQ,OAAA,cACAW,SAAA,iBAEA7F,EAAAvkB,OAAAukB,KAAA8gB,GAEA,IAAA/5B,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAC3CrC,EAAAsb,EAAAjZ,GACA0R,EAAA/T,GAAA2+B,GAAA,CACA5S,EAAA/rB,GACAopB,EAAAgT,EAAAp8B,IACAopB,EAAAppB,GACAgc,EAAAhc,IACA6kB,EAAA5K,GAGA,OAAAlG,GAMAgoB,oBAAA,SAAAjR,GACA,IAMAzoB,EAAAqZ,EAAA1b,EALAkgB,EADA9hB,KACA8hB,MACAkJ,EAAAlJ,EAAApjB,KAAA6sB,SAFAvrB,KAEA6b,OACA8R,EAAAjB,EAAAiB,QAAA,GACA/P,EAAAkE,EAAAlE,QAAA0P,SAAA2D,KACAtb,EAAA,GAGAuH,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,QAGA,IAAAjZ,EAAA,EAAAqZ,EAAAJ,EAAAvhB,OAAiCsI,EAAAqZ,IAAUrZ,EAE3C0R,EADA/T,EAAAsb,EAAAjZ,IACAs8B,GAAA,CACA5S,EAAA/rB,GACAopB,EAAAppB,GACAgc,EAAAhc,KAMA,OAFA+T,EAAA6O,QAAA8b,GAAAtV,EAAAyS,YAAA7f,EAAA4G,SAEA7O,GAGAioB,0BAAA,WACA,IAIA35B,EAAAqZ,EAAAiK,EAAAgX,EAHAzT,EADA9qB,KACA+qB,UACAlH,EAFA7jB,KAEA8hB,MAAAkR,UACArB,EAAA7G,EAAApsB,MAAA,GAGA,SAAA8/B,EAAAC,EAAA11B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA01B,EAAAx1B,GAAAF,GAGA,IAAA9E,EAAA,EAAAqZ,EAAAqU,EAAAh2B,OAAmCsI,EAAAqZ,IAAUrZ,EAC7CsjB,EAAAoK,EAAA1tB,GAAAkjB,OACAoX,EAAA7X,GAAAmY,YACAnY,GAAAyL,aAAAR,EAAA1tB,GAAA,GAAAkjB,OACAI,EACAb,GAAAoY,SAAAnN,EAAA1tB,GAAA,GAAAkjB,OACAI,EAAA/C,SAIA+C,EAAA7C,sBAAA8Z,EAAAD,EAAApa,SAAA1a,EAAAoa,EAAAxB,KAAAwB,EAAAtB,OACAgF,EAAA3C,sBAAA4Z,EAAAD,EAAApa,SAAAza,EAAAma,EAAAvB,IAAAuB,EAAArB,QACA+E,EAAA5C,kBAAA6Z,EAAAD,EAAAz/B,KAAA2K,EAAAoa,EAAAxB,KAAAwB,EAAAtB,OACAgF,EAAA1C,kBAAA2Z,EAAAD,EAAAz/B,KAAA4K,EAAAma,EAAAvB,IAAAuB,EAAArB,SAIAkL,cAAA,SAAA9J,GACA,IAAA2D,EAAA3D,EAAAuD,OACAvJ,EAAAgG,EAAAkW,SACAlM,EAAAlH,GAAAkH,cAEAhK,EAAA6J,eAAA,CACAI,gBAAAtG,EAAAsG,gBACAC,YAAAvG,EAAAuG,YACAC,YAAAxG,EAAAwG,YACA3L,OAAAmF,EAAAnF,QAGAmF,EAAAsG,gBAAAyS,GAAA1iB,EAAAoQ,qBAAAJ,EAAAhQ,EAAAiQ,kBACAtG,EAAAuG,YAAAwS,GAAA1iB,EAAAqQ,iBAAAL,EAAAhQ,EAAAkQ,cACAvG,EAAAwG,YAAAuS,GAAA1iB,EAAAsQ,iBAAAtQ,EAAAmQ,aACAxG,EAAAnF,OAAAke,GAAA1iB,EAAAwR,YAAAxR,EAAAwE,WAIAqD,GAAAR,KAAA,WACAiQ,MAAA,CACAC,KAAA,UAGAhK,OAAA,CACAC,MAAA,EACAvoB,GAAA,WACA9D,KAAA,SACAk6B,SAAA,WAEA3N,MAAA,EACAzoB,GAAA,WACA9D,KAAA,SACAk6B,SAAA,UAIAzT,WAAA,EAEA0T,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEAlD,MAAA,SAAAhzB,GACA,UAAAA,EAAAo2B,OAAA,KAAAp2B,EAAAq2B,OAAA,SAOA,IAMAoH,GAAA,CACAhL,IAAAF,GACAmL,OAAApH,GACA4G,SAAAlF,GACA2F,cAAA3D,GACAjM,KAAAuM,GACAsD,UAAAxB,GACAyB,IAAAV,GACAW,MAAAR,GACAS,QAfAzD,IAwBA,SAAA0D,GAAAtG,EAAA9Y,GACA,OAAA8Y,EAAAuG,OACA,CACA13B,EAAAmxB,EAAAnxB,EACAC,EAAAkxB,EAAAlxB,GAIAgd,GAAAwa,oBAAAtG,EAAA9Y,GAQA,SAAAsf,GAAAtf,EAAAuf,GACA,IACAvW,EAAA7mB,EAAAo3B,EAAA/d,EAAAgkB,EADA/V,EAAAzJ,EAAApjB,KAAA6sB,SAGA,IAAAtnB,EAAA,EAAAqZ,EAAAiO,EAAA5vB,OAAoCsI,EAAAqZ,IAAUrZ,EAC9C,GAAA6d,EAAAqV,iBAAAlzB,GAKA,IADA6mB,EAAAhJ,EAAA0J,eAAAvnB,GACAo3B,EAAA,EAAAiG,EAAAxW,EAAApsB,KAAA/C,OAAsC0/B,EAAAiG,IAAUjG,EAAA,CAChD,IAAA3O,EAAA5B,EAAApsB,KAAA28B,GACA3O,EAAAxF,MAAAkL,MACAiP,EAAA3U,IAYA,SAAA6U,GAAAzf,EAAAmX,GACA,IAAA3L,EAAA,GAQA,OANA8T,GAAAtf,EAAA,SAAA4K,GACAA,EAAA2C,QAAA4J,EAAAxvB,EAAAwvB,EAAAvvB,IACA4jB,EAAA/pB,KAAAmpB,KAIAY,EAWA,SAAAkU,GAAA1f,EAAAmX,EAAAwI,EAAAC,GACA,IAAAC,EAAAnlB,OAAAolB,kBACAC,EAAA,GAkBA,OAhBAT,GAAAtf,EAAA,SAAA4K,GACA,IAAA+U,GAAA/U,EAAA2C,QAAA4J,EAAAxvB,EAAAwvB,EAAAvvB,GAAA,CAIA,IAAAotB,EAAApK,EAAAwD,iBACAP,EAAA+R,EAAAzI,EAAAnC,GACAnH,EAAAgS,GACAE,EAAA,CAAAnV,GACAiV,EAAAhS,GACGA,IAAAgS,GAEHE,EAAAt+B,KAAAmpB,MAIAmV,EAQA,SAAAC,GAAA7E,GACA,IAAA8E,GAAA,IAAA9E,EAAAle,QAAA,KACAijB,GAAA,IAAA/E,EAAAle,QAAA,KAEA,gBAAAkjB,EAAAC,GACA,IAAAC,EAAAJ,EAAA/4B,KAAAwpB,IAAAyP,EAAAx4B,EAAAy4B,EAAAz4B,GAAA,EACA24B,EAAAJ,EAAAh5B,KAAAwpB,IAAAyP,EAAAv4B,EAAAw4B,EAAAx4B,GAAA,EACA,OAAAV,KAAAqC,KAAArC,KAAAQ,IAAA24B,EAAA,GAAAn5B,KAAAQ,IAAA44B,EAAA,KAIA,SAAAC,GAAAvgB,EAAA8Y,EAAAhd,GACA,IAAAqb,EAAAiI,GAAAtG,EAAA9Y,GAEAlE,EAAAqf,KAAArf,EAAAqf,MAAA,IACA,IAAAyE,EAAAI,GAAAlkB,EAAAqf,MACAqF,EAAA1kB,EAAA6jB,UAAAF,GAAAzf,EAAAmX,GAAAuI,GAAA1f,EAAAmX,GAAA,EAAAyI,GACApU,EAAA,GAEA,OAAAgV,EAAA3mC,QAIAmmB,EAAApjB,KAAA6sB,SAAAtoB,QAAA,SAAA+nB,EAAAR,GACA,GAAA1I,EAAAqV,iBAAA3M,GAAA,CACA,IAAAM,EAAAhJ,EAAA0J,eAAAhB,GACAkC,EAAA5B,EAAApsB,KAAA4jC,EAAA,GAAA/V,QAGAG,MAAAxF,MAAAkL,MACA9E,EAAA/pB,KAAAmpB,MAKAY,GAfA,GA+BA,IAAAiV,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAA3gB,EAAA8Y,GACA,IAAA3B,EAAAiI,GAAAtG,EAAA9Y,GACAwL,EAAA,GASA,OAPA8T,GAAAtf,EAAA,SAAA4K,GACA,GAAAA,EAAA2C,QAAA4J,EAAAxvB,EAAAwvB,EAAAvvB,GAEA,OADA4jB,EAAA/pB,KAAAmpB,GACAY,IAIAA,EAAApY,MAAA,MASAghB,MAAAmM,GAYAxmB,MAAAwmB,GAWArX,QAAA,SAAAlJ,EAAA8Y,EAAAhd,GACA,IAAAqb,EAAAiI,GAAAtG,EAAA9Y,GACAlE,EAAAqf,KAAArf,EAAAqf,MAAA,KACA,IAAAyE,EAAAI,GAAAlkB,EAAAqf,MACAqF,EAAA1kB,EAAA6jB,UAAAF,GAAAzf,EAAAmX,GAAAuI,GAAA1f,EAAAmX,GAAA,EAAAyI,GAMA,OAJAY,EAAA3mC,OAAA,IACA2mC,EAAAxgB,EAAA0J,eAAA8W,EAAA,GAAAjW,eAAA3tB,MAGA4jC,GASAI,SAAA,SAAA5gB,EAAA8Y,GACA,OAAAyH,GAAAvgB,EAAA8Y,EAAA,CAA+B6G,WAAA,KAW/B7d,MAAA,SAAA9B,EAAA8Y,GACA,IAAA3B,EAAAiI,GAAAtG,EAAA9Y,GACA,OAAAyf,GAAAzf,EAAAmX,IAWA0J,QAAA,SAAA7gB,EAAA8Y,EAAAhd,GACA,IAAAqb,EAAAiI,GAAAtG,EAAA9Y,GACAlE,EAAAqf,KAAArf,EAAAqf,MAAA,KACA,IAAAyE,EAAAI,GAAAlkB,EAAAqf,MACA,OAAAuE,GAAA1f,EAAAmX,EAAArb,EAAA6jB,UAAAC,IAWAj4B,EAAA,SAAAqY,EAAA8Y,EAAAhd,GACA,IAAAqb,EAAAiI,GAAAtG,EAAA9Y,GACAwgB,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAtf,EAAA,SAAA4K,GACAA,EAAAmG,SAAAoG,EAAAxvB,IACA64B,EAAA/+B,KAAAmpB,GAGAA,EAAA2C,QAAA4J,EAAAxvB,EAAAwvB,EAAAvvB,KACAk5B,GAAA,KAMAhlB,EAAA6jB,YAAAmB,IACAN,EAAA,IAEAA,GAWA54B,EAAA,SAAAoY,EAAA8Y,EAAAhd,GACA,IAAAqb,EAAAiI,GAAAtG,EAAA9Y,GACAwgB,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAAtf,EAAA,SAAA4K,GACAA,EAAAoG,SAAAmG,EAAAvvB,IACA44B,EAAA/+B,KAAAmpB,GAGAA,EAAA2C,QAAA4J,EAAAxvB,EAAAwvB,EAAAvvB,KACAk5B,GAAA,KAMAhlB,EAAA6jB,YAAAmB,IACAN,EAAA,IAEAA,KAKA,SAAAO,GAAA7jB,EAAAia,GACA,OAAAvS,GAAAoc,MAAA9jB,EAAA,SAAAlY,GACA,OAAAA,EAAAmyB,eAIA,SAAA8J,GAAA/jB,EAAAhC,GACAgC,EAAA/b,QAAA,SAAA6D,EAAA7C,GAEA,OADA6C,EAAAk8B,WAAA/+B,EACA6C,IAEAkY,EAAAikB,KAAA,SAAAh4B,EAAAnC,GACA,IAAAyU,EAAAP,EAAAlU,EAAAmC,EACAuS,EAAAR,EAAA/R,EAAAnC,EACA,OAAAyU,EAAAzC,SAAA0C,EAAA1C,OACAyC,EAAAylB,WAAAxlB,EAAAwlB,WACAzlB,EAAAzC,OAAA0C,EAAA1C,SAEAkE,EAAA/b,QAAA,SAAA6D,UACAA,EAAAk8B,aA0BA,SAAAE,GAAAC,EAAAjgB,GACAwD,GAAA5J,KAAAqmB,EAAA,SAAAC,GACAlgB,EAAAkgB,EAAAnK,WAAAmK,EAAA7M,eAAA6M,EAAAlhB,OAAAkhB,EAAAnhB,QAIAwD,GAAAR,KAAA,UACAoe,OAAA,CACAtQ,QAAA,CACAzQ,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IAgVA7X,GAhVA84B,GAAA,CACAte,SAAA,GAQAue,OAAA,SAAAzhB,EAAA5e,GACA4e,EAAAqhB,QACArhB,EAAAqhB,MAAA,IAIAjgC,EAAAsgC,UAAAtgC,EAAAsgC,YAAA,EACAtgC,EAAA+1B,SAAA/1B,EAAA+1B,UAAA,MACA/1B,EAAA4X,OAAA5X,EAAA4X,QAAA,EAEAgH,EAAAqhB,MAAA5/B,KAAAL,IAQAugC,UAAA,SAAA3hB,EAAA4hB,GACA,IAAA7nB,EAAAiG,EAAAqhB,MAAArhB,EAAAqhB,MAAApkB,QAAA2kB,IAAA,GACA,IAAA7nB,GACAiG,EAAAqhB,MAAAvZ,OAAA/N,EAAA,IAUA8nB,UAAA,SAAA7hB,EAAA5e,EAAA0a,GAMA,IALA,IAGAtC,EAHAhZ,EAAA,kCACAgb,EAAAhb,EAAA3G,OACAsI,EAAA,EAGQA,EAAAqZ,IAAUrZ,EAClBqX,EAAAhZ,EAAA2B,GACA2Z,EAAAtY,eAAAgW,KACApY,EAAAoY,GAAAsC,EAAAtC,KAYA0Q,OAAA,SAAAlK,EAAAG,EAAAC,GACA,GAAAJ,EAAA,CAIA,IAAA8hB,EAAA9hB,EAAAlE,QAAAylB,QAAA,GACAtQ,EAAArM,GAAA9I,QAAAiI,UAAA+d,EAAA7Q,SACA8Q,EAAA9Q,EAAA1Q,KACAyhB,EAAA/Q,EAAAxQ,MACAwhB,EAAAhR,EAAAzQ,IACA0hB,EAAAjR,EAAAvQ,OAEAyhB,EAAApB,GAAA/gB,EAAAqhB,MAAA,QACAe,EAAArB,GAAA/gB,EAAAqhB,MAAA,SACAgB,EAAAtB,GAAA/gB,EAAAqhB,MAAA,OACAiB,EAAAvB,GAAA/gB,EAAAqhB,MAAA,UACAkB,EAAAxB,GAAA/gB,EAAAqhB,MAAA,aAGAJ,GAAAkB,GAAA,GACAlB,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GAEA,IA0DAE,EA1DAC,EAAAN,EAAArhC,OAAAshC,GACAM,EAAAL,EAAAvhC,OAAAwhC,GACAK,EAAAF,EAAA3hC,OAAA4hC,GAwCAE,EAAAziB,EAAA4hB,EAAAC,EACAa,EAAAziB,EAAA6hB,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAA5iB,EAAA2iB,GAAAL,EAAA5oC,OAOAmpC,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CAAuB1iB,IAAAyhB,EAAA1hB,KAAAwhB,EAAArhB,OAAAwhB,EAAAzhB,MAAAuhB,GACvBmB,EAAA,GAsBAve,GAAA5J,KAAA2nB,EAnBA,SAAArB,GACA,IAAA3H,EACAlF,EAAA6M,EAAA7M,eAEAA,GACAkF,EAAA2H,EAAApX,OAAAoX,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,GACAI,GAAAtJ,EAAAvZ,SAEAuZ,EAAA2H,EAAApX,OAAA6Y,EAAAE,GACAD,GAAArJ,EAAAxZ,OAGAgjB,EAAA1hC,KAAA,CACAywB,WAAAuC,EACAtU,MAAAwZ,EAAAxZ,MACAmhB,UAOAkB,EAlOA,SAAAnB,GACA,IAAA7gB,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAmE,GAAA5J,KAAAqmB,EAAA,SAAAC,GACA,GAAAA,EAAA8B,WAAA,CACA,IAAAC,EAAA/B,EAAA8B,aACA5iB,EAAAtZ,KAAAC,IAAAqZ,EAAA6iB,EAAA7iB,KACAD,EAAArZ,KAAAC,IAAAoZ,EAAA8iB,EAAA9iB,MACAG,EAAAxZ,KAAAC,IAAAuZ,EAAA2iB,EAAA3iB,QACAD,EAAAvZ,KAAAC,IAAAsZ,EAAA4iB,EAAA5iB,UAGA,CACAD,MACAD,OACAG,SACAD,SAgNA6iB,CAAAX,GA+BA/d,GAAA5J,KAAAynB,EAAAc,GACAnC,GAAAqB,EAAAS,GAGAte,GAAA5J,KAAA0nB,EAAAa,GACAnC,GAAAsB,EAAAQ,GAoBAte,GAAA5J,KAAAynB,EAlBA,SAAAnB,GACA,IAAAkC,EAAA5e,GAAA6e,cAAAN,EAAA,SAAAxJ,GACA,OAAAA,EAAA2H,UAGAoC,EAAA,CACAnjB,KAAA,EACAE,MAAA,EACAD,IAAA0iB,EAAA1iB,IACAE,OAAAwiB,EAAAxiB,QAGA8iB,GACAlC,EAAApX,OAAAsZ,EAAArjB,MAAA8iB,EAAAS,KASAtC,GAAAuB,EADAO,EAAA,CAAmB1iB,IAAAyhB,EAAA1hB,KAAAwhB,EAAArhB,OAAAwhB,EAAAzhB,MAAAuhB,IAInB,IAAA2B,EAAAz8B,KAAAC,IAAAq7B,EAAAjiB,KAAA2iB,EAAA3iB,KAAA,GACA2iB,EAAA3iB,MAAAojB,EACAT,EAAAziB,OAAAvZ,KAAAC,IAAAq7B,EAAA/hB,MAAAyiB,EAAAziB,MAAA,GAEA,IAAAmjB,EAAA18B,KAAAC,IAAAq7B,EAAAhiB,IAAA0iB,EAAA1iB,IAAA,GACA0iB,EAAA1iB,KAAAojB,EACAV,EAAAxiB,QAAAxZ,KAAAC,IAAAq7B,EAAA9hB,OAAAwiB,EAAAxiB,OAAA,GAKA,IAAAmjB,EAAAzjB,EAAA8iB,EAAA1iB,IAAA0iB,EAAAxiB,OACAojB,EAAA3jB,EAAA+iB,EAAA3iB,KAAA2iB,EAAAziB,MAEAqjB,IAAAd,GAAAa,IAAAZ,IACAre,GAAA5J,KAAAynB,EAAA,SAAAnB,GACAA,EAAAlhB,OAAAyjB,IAGAjf,GAAA5J,KAAA0nB,EAAA,SAAApB,GACAA,EAAAI,YACAJ,EAAAnhB,MAAA2jB,KAIAb,EAAAY,EACAb,EAAAc,GAIA,IAAAvjB,EAAAwhB,EAAA4B,EACAnjB,EAAAyhB,EAAA2B,EAwBAhf,GAAA5J,KAAAmnB,EAAArhC,OAAAuhC,GAAA0B,GAGAxjB,GAAAyiB,EACAxiB,GAAAyiB,EAEAre,GAAA5J,KAAAonB,EAAA2B,GACAnf,GAAA5J,KAAAsnB,EAAAyB,GAGA/jB,EAAAkR,UAAA,CACA3Q,KAAA2iB,EAAA3iB,KACAC,IAAA0iB,EAAA1iB,IACAC,MAAAyiB,EAAA3iB,KAAAyiB,EACAtiB,OAAAwiB,EAAA1iB,IAAAyiB,GAIAre,GAAA5J,KAAAunB,EAAA,SAAAjB,GACAA,EAAA/gB,KAAAP,EAAAkR,UAAA3Q,KACA+gB,EAAA9gB,IAAAR,EAAAkR,UAAA1Q,IACA8gB,EAAA7gB,MAAAT,EAAAkR,UAAAzQ,MACA6gB,EAAA5gB,OAAAV,EAAAkR,UAAAxQ,OAEA4gB,EAAApX,OAAA8Y,EAAAC,KAvIA,SAAAM,EAAAjC,GACA,IAAAkC,EAAA5e,GAAA6e,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA1C,UAGA,GAAAkC,EACA,GAAAA,EAAAtR,WAAA,CACA,IAAAwR,EAAA,CACAnjB,KAAArZ,KAAAC,IAAA+7B,EAAA3iB,KAAAiiB,EAAAjiB,MACAE,MAAAvZ,KAAAC,IAAA+7B,EAAAziB,MAAA+hB,EAAA/hB,OACAD,IAAA,EACAE,OAAA,GAKA4gB,EAAApX,OAAAoX,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,EAAAa,QAEApC,EAAApX,OAAAsZ,EAAArjB,MAAA8iB,GAuEA,SAAAc,EAAAzC,GACAA,EAAA7M,gBACA6M,EAAA/gB,KAAA+gB,EAAAI,UAAAK,EAAAmB,EAAA3iB,KACA+gB,EAAA7gB,MAAA6gB,EAAAI,UAAAvhB,EAAA6hB,EAAAkB,EAAA3iB,KAAAyiB,EACA1B,EAAA9gB,MACA8gB,EAAA5gB,OAAAF,EAAA8gB,EAAAlhB,OAGAI,EAAA8gB,EAAA5gB,SAIA4gB,EAAA/gB,OACA+gB,EAAA7gB,MAAAF,EAAA+gB,EAAAnhB,MACAmhB,EAAA9gB,IAAA0iB,EAAA1iB,IACA8gB,EAAA5gB,OAAAwiB,EAAA1iB,IAAAyiB,EAGA1iB,EAAA+gB,EAAA7gB,UA2DAwjB,IAJAv7B,GAJA7R,OAAAqtC,OAAA,CACAC,QAHA,w3BAOAz7B,GAAAy7B,SAAAz7B,GAKA07B,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAAxa,EAAAya,GACA,IAAAruC,EAAA4tB,GAAA0gB,SAAA1a,EAAAya,GACAvhB,EAAA9sB,KAAAye,MAAA,qBACA,OAAAqO,EAAApJ,OAAAoJ,EAAA,SAAAhqB,EA+DA,IAkBAyrC,KAlBA,WACA,IAAAC,GAAA,EACA,IACA,IAAA1pB,EAAAjlB,OAAAC,eAAA,GAAwC,WAExC8vB,IAAA,WACA4e,GAAA,KAGAvrB,OAAAwrB,iBAAA,SAAA3pB,GACE,MAAAgd,IAGF,OAAA0M,EAbA,IAkBA,CAA2DE,SAAA,GAE3D,SAAAC,GAAAC,EAAA3oC,EAAAorB,GACAud,EAAAH,iBAAAxoC,EAAAorB,EAAAkd,IAGA,SAAAM,GAAAD,EAAA3oC,EAAAorB,GACAud,EAAAE,oBAAA7oC,EAAAorB,EAAAkd,IAGA,SAAAQ,GAAA9oC,EAAA+iB,EAAArY,EAAAC,EAAAo+B,GACA,OACA/oC,OACA+iB,QACAqf,OAAA2G,GAAA,KACAr+B,OAAA7N,IAAA6N,IAAA,KACAC,OAAA9N,IAAA8N,IAAA,MA4BA,SAAAq+B,GAAAC,GACA,IAAAC,EAAAC,SAAAC,cAAA,OAEA,OADAF,EAAAG,UAAAJ,GAAA,GACAC,EA0EA,SAAAI,GAAAX,EAAAvd,EAAArI,GACA,IAhGA1jB,EAAAye,EACAyrB,EACAroC,EA8FAsoC,EAAAb,EAAAxB,MAAAwB,EAAAxB,IAAA,IAGAsC,EAAAD,EAAAC,QA1EA,SAAAnH,GACA,IAIAmH,EAAAT,GAAA5B,IACAsC,EAAAV,GAAA5B,GAAA,WACAuC,EAAAX,GAAA5B,GAAA,WAEAsC,EAAAE,YAAAZ,MACAW,EAAAC,YAAAZ,MAEAS,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GACAF,EAAAI,OAAA,WACAH,EAAAI,WAdA,IAeAJ,EAAAK,UAfA,IAgBAJ,EAAAG,WAhBA,IAiBAH,EAAAI,UAjBA,KAoBA,IAAAC,EAAA,WACAP,EAAAI,SACAvH,KAMA,OAHAoG,GAAAgB,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAhB,GAAAiB,EAAA,SAAAK,EAAAC,KAAAN,EAAA,WAEAF,EA6CAS,EAnGA7qC,EAmGA,WACA,GAAAmqC,EAAAC,QAAA,CACA,IAAAU,EAAApnB,EAAAlE,QAAAurB,qBAAAzB,EAAA0B,WACAjgC,EAAA+/B,IAAAG,YAAA,EACAlf,EAAA0d,GAAA,SAAA/lB,IACAonB,KAAAG,YAAAlgC,GAAA2Y,EAAA8E,QAQAuD,EAAA0d,GAAA,SAAA/lB,MA/GAwmB,GAAA,EACAroC,EAAA,GAEA,WACAA,EAAAiE,MAAAK,UAAA2Q,MAAAzQ,KAAA/I,WACAmhB,KAAA7c,KAEAsoC,IACAA,GAAA,EACA5hB,GAAAmD,iBAAAplB,KAAAsX,OAAA,WACAusB,GAAA,EACAlqC,EAAAkC,MAAAuc,EAAA5c,UA8CA,SAAAynC,EAAArG,GACA,IAAAkH,EAAAb,EAAAxB,MAAAwB,EAAAxB,IAAA,IACAoD,EAAAf,EAAAgB,YAAA,SAAA3O,GACAA,EAAA4O,gBAAAlD,IACAjF,KAIA3a,GAAA5J,KAAAypB,GAAA,SAAAxnC,GACA0oC,GAAAC,EAAA3oC,EAAAuqC,KAQAf,EAAAkB,SAAA/B,EAAAgC,aAEAhC,EAAAiC,UAAAC,IAAAvD,IA0CAwD,CAAAnC,EAAA,WACA,GAAAa,EAAAC,QAAA,CACA,IAAAU,EAAAxB,EAAA0B,WACAF,OAAAV,EAAAY,YACAF,EAAAY,aAAAtB,EAAAU,EAAAa,YAIAvB,EAAAI,YAKA,SAAAoB,GAAAtC,GACA,IAAAa,EAAAb,EAAAxB,KAAA,GACAsC,EAAAD,EAAAC,eAEAD,EAAAC,QAxDA,SAAAd,GACA,IAAAa,EAAAb,EAAAxB,KAAA,GACAoD,EAAAf,EAAAgB,YAEAD,IACA5iB,GAAA5J,KAAAypB,GAAA,SAAAxnC,GACA4oC,GAAAD,EAAA3oC,EAAAuqC,YAGAf,EAAAgB,aAGA7B,EAAAiC,UAAAM,OAAA5D,IA6CA6D,CAAAxC,GAEAc,KAAAY,YACAZ,EAAAY,WAAAe,YAAA3B,GAiBA,IAAA4B,GAAA,CAQAC,qBAAA,EAOAC,SAAA,oBAAAvuB,QAAA,oBAAAmsB,SAKAqC,cAAA,WACAvqC,KAAAwqC,UAIAxqC,KAAAwqC,SAAA,EAGAxqC,KAAAqqC,qBAzCA,SAAAI,EAAAC,GAEA,IAAA5nB,EAAA2nB,EAAAE,QAAAzC,SAAAC,cAAA,SACAsC,EAAAE,SACAF,EAAAE,OAAA7nB,EACA4nB,EAAA,mBAAAA,EACA5nB,EAAA8nB,aAAA,mBACA1C,SAAA2C,qBAAA,WAAAlC,YAAA7lB,IAGAA,EAAA6lB,YAAAT,SAAA4C,eAAAJ,IAgCAK,CAAA/qC,KAAA+lC,MAIAiF,eAAA,SAAA9nC,EAAA3J,GACA,iBAAA2J,EACAA,EAAAglC,SAAA+C,eAAA/nC,GACGA,EAAAvH,SAEHuH,IAAA,IAGAA,KAAA0jB,SAEA1jB,IAAA0jB,QAMA,IAAAH,EAAAvjB,KAAAgoC,YAAAhoC,EAAAgoC,WAAA,MAaA,OATAlrC,KAAAuqC,gBASA9jB,KAAAG,SAAA1jB,GA9TA,SAAA0jB,EAAArtB,GACA,IAAAupB,EAAA8D,EAAA9D,MAIAqoB,EAAAvkB,EAAAwkB,aAAA,UACAC,EAAAzkB,EAAAwkB,aAAA,SAoBA,GAjBAxkB,EAAAsf,IAAA,CACAoF,QAAA,CACAppB,OAAAipB,EACAlpB,MAAAopB,EACAvoB,MAAA,CACAoc,QAAApc,EAAAoc,QACAhd,OAAAY,EAAAZ,OACAD,MAAAa,EAAAb,SAQAa,EAAAoc,QAAApc,EAAAoc,SAAA,QAEA,OAAAmM,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAArE,GAAAtgB,EAAA,cACAhrB,IAAA2vC,IACA3kB,EAAA3E,MAAAspB,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAAvkB,EAAA9D,MAAAZ,OAIA0E,EAAA1E,OAAA0E,EAAA3E,OAAA1oB,EAAAqkB,QAAA4tB,aAAA,OACG,CACH,IAAAC,EAAAvE,GAAAtgB,EAAA,eACAhrB,IAAA2vC,IACA3kB,EAAA1E,OAAAupB,IAqRAC,CAAAxoC,EAAA3J,GACAktB,GAGA,MAGAklB,eAAA,SAAAllB,GACA,IAAAG,EAAAH,EAAAG,OACA,GAAAA,EAAAsf,IAAA,CAIA,IAAAoF,EAAA1kB,EAAAsf,IAAAoF,QACA,mBAAAroC,QAAA,SAAAqY,GACA,IAAAxiB,EAAAwyC,EAAAhwB,GACAoL,GAAAtK,cAAAtjB,GACA8tB,EAAAglB,gBAAAtwB,GAEAsL,EAAAgkB,aAAAtvB,EAAAxiB,KAIA4tB,GAAA5J,KAAAwuB,EAAAxoB,OAAA,GAAoC,SAAAhqB,EAAA8I,GACpCglB,EAAA9D,MAAAlhB,GAAA9I,IAQA8tB,EAAA3E,MAAA2E,EAAA3E,aAEA2E,EAAAsf,MAGAqB,iBAAA,SAAAzlB,EAAA/iB,EAAAorB,GACA,IAAAvD,EAAA9E,EAAA8E,OACA,cAAA7nB,EAAA,CAMA,IAAAwpC,EAAApe,EAAA+b,MAAA/b,EAAA+b,IAAA,IACA2F,EAAAtD,EAAAsD,UAAAtD,EAAAsD,QAAA,IACAvC,EAAAuC,EAAA/pB,EAAAjf,GAAA,IAAA9D,GAAA,SAAA+sC,GACA3hB,EAlRA,SAAA2hB,EAAAhqB,GACA,IAAA/iB,EAAAynC,GAAAsF,EAAA/sC,OAAA+sC,EAAA/sC,KACAgtC,EAAArlB,GAAAwa,oBAAA4K,EAAAhqB,GACA,OAAA+lB,GAAA9oC,EAAA+iB,EAAAiqB,EAAAtiC,EAAAsiC,EAAAriC,EAAAoiC,GA+QAE,CAAAF,EAAAhqB,KAGA2lB,GAAA7gB,EAAA7nB,EAAAuqC,QAVAjB,GAAAzhB,EAAAuD,EAAArI,IAaA8lB,oBAAA,SAAA9lB,EAAA/iB,EAAAorB,GACA,IAAAvD,EAAA9E,EAAA8E,OACA,cAAA7nB,EAAA,CAMA,IAAAwpC,EAAApe,EAAA+b,KAAA,GACA2F,EAAAtD,EAAAsD,SAAA,GACAvC,EAAAuC,EAAA/pB,EAAAjf,GAAA,IAAA9D,GACAuqC,GAIA3B,GAAA/gB,EAAA7nB,EAAAuqC,QAXAU,GAAApjB,KA0BAF,GAAAulB,SAAAxE,GAWA/gB,GAAAwlB,YAAAvE,GAGA,IAAAwE,GAAA/B,GAAAE,SAAAF,GApeA,CACAY,eAAA,SAAA9nC,GAMA,OALAA,KAAA0jB,SAEA1jB,IAAA0jB,QAGA1jB,KAAAgoC,WAAA,cAoeAT,GAAA/jB,GAAAtI,OAAA,CAIA2I,WAAA,aASAikB,eAAA,aAQAW,eAAA,aASApE,iBAAA,aAQAK,oBAAA,cAECuE,IAED1mB,GAAAR,KAAA,UACAmnB,QAAA,KAQA,IAAAC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAJ,GACA,IAAAhiC,EAAApK,KAAAssC,SACA,GAAA1pC,OAAAwpC,GAAAnpC,QAAA,SAAAwpC,IACA,IAAAriC,EAAA2U,QAAA0tB,IACAriC,EAAA7G,KAAAkpC,KAIAzsC,KAAAusC,YAOAG,WAAA,SAAAN,GACA,IAAAhiC,EAAApK,KAAAssC,SACA,GAAA1pC,OAAAwpC,GAAAnpC,QAAA,SAAAwpC,GACA,IAAAE,EAAAviC,EAAA2U,QAAA0tB,IACA,IAAAE,GACAviC,EAAAwf,OAAA+iB,EAAA,KAIA3sC,KAAAusC,YAOA1qB,MAAA,WACA7hB,KAAAssC,SAAA,GACAtsC,KAAAusC,YAQAje,MAAA,WACA,OAAAtuB,KAAAssC,SAAA3wC,QAQAixC,OAAA,WACA,OAAA5sC,KAAAssC,UAYAO,OAAA,SAAA/qB,EAAAgrB,EAAA7sC,GACA,IAEAgE,EAAA8oC,EAAAN,EAAAvxC,EAAA8xB,EAFAggB,EAAAhtC,KAAAgtC,YAAAlrB,GACAxE,EAAA0vB,EAAArxC,OAGA,IAAAsI,EAAA,EAAaA,EAAAqZ,IAAUrZ,EAIvB,GAHA8oC,EAAAC,EAAA/oC,GACAwoC,EAAAM,EAAAN,OAEA,mBADAzf,EAAAyf,EAAAK,OAEA5xC,EAAA,CAAA4mB,GAAAlf,OAAA3C,GAAA,KACAsD,KAAAwpC,EAAAnvB,UACA,IAAAoP,EAAA1sB,MAAAmsC,EAAAvxC,IACA,SAKA,UAQA8xC,YAAA,SAAAlrB,GACA,IAAAmrB,EAAAnrB,EAAAorB,WAAAprB,EAAAorB,SAAA,IACA,GAAAD,EAAApqC,KAAA7C,KAAAusC,SACA,OAAAU,EAAAD,YAGA,IAAAZ,EAAA,GACAY,EAAA,GACAzzC,EAAAuoB,KAAAvoB,QAAA,GACAqkB,EAAArkB,EAAAqkB,SAAArkB,EAAAqkB,QAAAwuB,SAAA,GA2BA,OAzBApsC,KAAAssC,SAAA1pC,OAAArJ,EAAA6yC,SAAA,IAAAnpC,QAAA,SAAAwpC,GACA,IAAAE,EAAAP,EAAArtB,QAAA0tB,GACA,QAAAE,EAAA,CAIA,IAAA9pC,EAAA4pC,EAAA5pC,GACAy4B,EAAA1d,EAAA/a,IACA,IAAAy4B,KAIA,IAAAA,IACAA,EAAA5U,GAAAxL,MAAAuK,GAAAO,OAAAomB,QAAAvpC,KAGAupC,EAAA7oC,KAAAkpC,GACAO,EAAAzpC,KAAA,CACAkpC,SACA7uB,QAAA0d,GAAA,SAIA2R,EAAAD,cACAC,EAAApqC,GAAA7C,KAAAusC,SACAS,GASAG,YAAA,SAAArrB,UACAA,EAAAorB,WAIAE,GAAA,CAGAC,aAAA,GAKAroB,SAAA,GACAsoB,kBAAA,SAAAvuC,EAAAwuC,EAAAC,GACAxtC,KAAAqtC,aAAAtuC,GAAAwuC,EACAvtC,KAAAglB,SAAAjmB,GAAA2nB,GAAAxL,MAAAsyB,IAEAC,oBAAA,SAAA1uC,GACA,OAAAiB,KAAAqtC,aAAA/nC,eAAAvG,GAAAiB,KAAAqtC,aAAAtuC,QAAAnD,GAEA8xC,iBAAA,SAAA3uC,GAEA,OAAAiB,KAAAglB,SAAA1f,eAAAvG,GAAA2nB,GAAA3I,MAAA,GAAgE,CAAA0H,GAAA9N,MAAA3X,KAAAglB,SAAAjmB,KAAA,IAEhE4uC,oBAAA,SAAA5uC,EAAA6uC,GACA5tC,KACAglB,SAAA1f,eAAAvG,KADAiB,KAEAglB,SAAAjmB,GAAA2nB,GAAAtI,OAFApe,KAEAglB,SAAAjmB,GAAA6uC,KAGAC,kBAAA,SAAA/rB,GAEA4E,GAAA5J,KAAAgF,EAAAqJ,OAAA,SAAAxT,GAEAA,EAAA6rB,UAAA7rB,EAAAiG,QAAA4lB,UACA7rB,EAAAshB,SAAAthB,EAAAiG,QAAAqb,SACAthB,EAAAmD,OAAAnD,EAAAiG,QAAA9C,OACAwoB,GAAAC,OAAAzhB,EAAAnK,OAKAm2B,GAAApnB,GAAAjK,eAEAgJ,GAAAR,KAAA,UACAiU,SAAA,CACA6U,SAAA,EACApgB,OAAA,KACAwH,KAAA,UACA8D,SAAA,UACAwI,WAAA,EACA5T,gBAAA,kBACAmgB,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACA7rB,aAAA,EACA8rB,mBAAA,OACAC,eAAA,EACAphB,YAAA,gBACAC,YAAA,EACAoL,UAAA,CAEAgW,YAAAzoB,GAAAxK,KACAkd,MAAA,SAAAgW,EAAA1wC,GACA,IAAA06B,EAAA,GACAjD,EAAAz3B,EAAAy3B,OACAkZ,EAAAlZ,IAAAx6B,OAAA,EAEA,GAAAyzC,EAAAzzC,OAAA,GACA,IAAAuH,EAAAksC,EAAA,GACAlsC,EAAAgzB,MACAkD,EAAAl2B,EAAAgzB,MACMhzB,EAAAo2B,OACNF,EAAAl2B,EAAAo2B,OACM+V,EAAA,GAAAnsC,EAAA2Y,MAAAwzB,IACNjW,EAAAjD,EAAAjzB,EAAA2Y,QAIA,OAAAud,GAEAkW,WAAA5oB,GAAAxK,KAGAqzB,WAAA7oB,GAAAxK,KAGAszB,YAAA9oB,GAAAxK,KACAga,MAAA,SAAA8E,EAAAt8B,GACA,IAAAw3B,EAAAx3B,EAAA6sB,SAAAyP,EAAAxQ,cAAA0L,OAAA,GAUA,OARAA,IACAA,GAAA,MAEAxP,GAAAtK,cAAA4e,EAAAliC,OAGAo9B,GAAA8E,EAAAzB,OAFArD,GAAA8E,EAAAliC,MAIAo9B,GAEAuZ,WAAA,SAAAzU,EAAAlZ,GACA,IAAAgJ,EAAAhJ,EAAA0J,eAAAwP,EAAAxQ,cACAklB,EAAA5kB,EAAApsB,KAAAs8B,EAAAnf,OACA4L,EAAAioB,EAAAxoB,MACA,OACA4G,YAAArG,EAAAqG,YACAD,gBAAApG,EAAAoG,kBAGA8hB,eAAA,WACA,OAAA3vC,KAAA85B,SAAAwU,eAEAsB,WAAAlpB,GAAAxK,KAGA2zB,UAAAnpB,GAAAxK,KAGA4zB,aAAAppB,GAAAxK,KACA6zB,OAAArpB,GAAAxK,KACA8zB,YAAAtpB,GAAAxK,SAKA,IAAA+zB,GAAA,CAOAC,QAAA,SAAA5iB,GACA,IAAAA,EAAA3xB,OACA,SAGA,IAAAsI,EAAAgZ,EACAxT,EAAA,EACAC,EAAA,EACA4kB,EAAA,EAEA,IAAArqB,EAAA,EAAAgZ,EAAAqQ,EAAA3xB,OAAoCsI,EAAAgZ,IAAShZ,EAAA,CAC7C,IAAAgkC,EAAA3a,EAAArpB,GACA,GAAAgkC,KAAAjgB,WAAA,CACA,IAAA+jB,EAAA9D,EAAAlgB,kBACAte,GAAAsiC,EAAAtiC,EACAC,GAAAqiC,EAAAriC,IACA4kB,GAIA,OACA7kB,IAAA6kB,EACA5kB,IAAA4kB,IAWAqU,QAAA,SAAArV,EAAA6iB,GACA,IAGAlsC,EAAAgZ,EAAAmzB,EAHA3mC,EAAA0mC,EAAA1mC,EACAC,EAAAymC,EAAAzmC,EACAi4B,EAAAnlB,OAAAolB,kBAGA,IAAA39B,EAAA,EAAAgZ,EAAAqQ,EAAA3xB,OAAoCsI,EAAAgZ,IAAShZ,EAAA,CAC7C,IAAAgkC,EAAA3a,EAAArpB,GACA,GAAAgkC,KAAAjgB,WAAA,CACA,IAAA8O,EAAAmR,EAAA/X,iBACAmgB,EAAA3pB,GAAA4pB,sBAAAH,EAAArZ,GAEAuZ,EAAA1O,IACAA,EAAA0O,EACAD,EAAAnI,IAKA,GAAAmI,EAAA,CACA,IAAAG,EAAAH,EAAAroB,kBACAte,EAAA8mC,EAAA9mC,EACAC,EAAA6mC,EAAA7mC,EAGA,OACAD,IACAC,OAMA,SAAA8mC,GAAAvjB,EAAAwjB,GAUA,OATAA,IACA/pB,GAAAviB,QAAAssC,GAEAvsC,MAAAK,UAAAhB,KAAAjD,MAAA2sB,EAAAwjB,GAEAxjB,EAAA1pB,KAAAktC,IAIAxjB,EASA,SAAAyjB,GAAA54B,GACA,wBAAAA,gBAAA64B,SAAA74B,EAAAiH,QAAA,SACAjH,EAAA84B,MAAA,MAEA94B,EAkCA,SAAA+4B,GAAAC,GACA,IAAA/qB,EAAAN,GAAAO,OAEA,OAEA8oB,SAAAgC,EAAAhC,SACAD,SAAAiC,EAAAjC,SACAkC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGA1C,cAAAwC,EAAAxC,cACA2C,gBAAAnD,GAAAgD,EAAAI,eAAAnrB,EAAAX,mBACA+rB,eAAArD,GAAAgD,EAAAM,cAAArrB,EAAAT,kBACA+rB,WAAAP,EAAAvC,UACA+C,aAAAxD,GAAAgD,EAAAQ,aAAAvrB,EAAAV,iBACAgpB,YAAAyC,EAAAzC,YAGAF,eAAA2C,EAAA3C,eACAoD,iBAAAzD,GAAAgD,EAAAU,gBAAAzrB,EAAAX,mBACAqsB,gBAAA3D,GAAAgD,EAAA9C,eAAAjoB,EAAAT,kBACAosB,cAAA5D,GAAAgD,EAAAY,cAAA3rB,EAAAV,iBACAssB,YAAAb,EAAA1C,WACAH,aAAA6C,EAAA7C,aACAC,kBAAA4C,EAAA5C,kBAGAS,gBAAAmC,EAAAnC,gBACAiD,kBAAA9D,GAAAgD,EAAAe,iBAAA9rB,EAAAX,mBACA0sB,iBAAAhE,GAAAgD,EAAAtC,gBAAAzoB,EAAAT,kBACAysB,eAAAjE,GAAAgD,EAAAiB,eAAAhsB,EAAAV,iBACA2sB,aAAAlB,EAAAlC,YACAH,cAAAqC,EAAArC,cACAC,gBAAAoC,EAAApC,gBAGAM,UAAA8B,EAAA9B,UACA7rB,aAAA2tB,EAAA3tB,aACA0K,gBAAAijB,EAAAjjB,gBACAokB,QAAA,EACAC,sBAAApB,EAAA7B,mBACAC,cAAA4B,EAAA5B,cACAphB,YAAAgjB,EAAAhjB,YACAC,YAAA+iB,EAAA/iB,aAuMA,SAAAokB,GAAAhjB,EAAAijB,GACA,iBAAAA,EACAjjB,EAAA1lB,EAAA0lB,EAAAlN,MAAA,EACA,UAAAmwB,EACAjjB,EAAA1lB,EAAA0lB,EAAAlN,MAAAkN,EAAA2f,SACA3f,EAAA1lB,EAAA0lB,EAAA2f,SAMA,SAAAuD,GAAAz1B,GACA,OAAA4zB,GAAA,GAAAE,GAAA9zB,IAGA,IAAA01B,GAAApqB,GAAA9J,OAAA,CACA2I,WAAA,WACA/mB,KAAAmnB,OAAA0pB,GAAA7wC,KAAA85B,UACA95B,KAAAuyC,YAAA,IAKAC,SAAA,WACA,IACAlX,EADAt7B,KACA85B,SACAX,EAAAmC,EAAAnC,UAEAgW,EAAAhW,EAAAgW,YAAA7uC,MAJAN,KAIAtE,WACA09B,EAAAD,EAAAC,MAAA94B,MALAN,KAKAtE,WACA4zC,EAAAnW,EAAAmW,WAAAhvC,MANAN,KAMAtE,WAEA+2C,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAvB,IACAsD,EAAAjC,GAAAiC,EAAA/B,GAAAtX,IACAqZ,EAAAjC,GAAAiC,EAAA/B,GAAApB,KAMAoD,cAAA,WACA,OAAAL,GAAAryC,KAAA85B,SAAAX,UAAAoW,WAAAjvC,MAAAN,KAAAtE,aAIAi3C,QAAA,SAAAvD,EAAA1wC,GACA,IAAA8f,EAAAxe,KACAm5B,EAAA3a,EAAAsb,SAAAX,UACAyZ,EAAA,GAeA,OAbAlsB,GAAA5J,KAAAsyB,EAAA,SAAApU,GACA,IAAA6X,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEAvC,GAAAqC,EAAAC,OAAApC,GAAAvX,EAAAqW,YAAA/qC,KAAA+Z,EAAAwc,EAAAt8B,KACA8xC,GAAAqC,EAAAJ,MAAAtZ,EAAAjD,MAAAzxB,KAAA+Z,EAAAwc,EAAAt8B,IACA8xC,GAAAqC,EAAAE,MAAArC,GAAAvX,EAAAyW,WAAAnrC,KAAA+Z,EAAAwc,EAAAt8B,KAEAk0C,EAAArvC,KAAAsvC,KAGAD,GAIAI,aAAA,WACA,OAAAX,GAAAryC,KAAA85B,SAAAX,UAAA0W,UAAAvvC,MAAAN,KAAAtE,aAKAu3C,UAAA,WACA,IACA9Z,EADAn5B,KACA85B,SAAAX,UAEA2W,EAAA3W,EAAA2W,aAAAxvC,MAHAN,KAGAtE,WACAq0C,EAAA5W,EAAA4W,OAAAzvC,MAJAN,KAIAtE,WACAs0C,EAAA7W,EAAA6W,YAAA1vC,MALAN,KAKAtE,WAEA+2C,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAZ,IACA2C,EAAAjC,GAAAiC,EAAA/B,GAAAX,IACA0C,EAAAjC,GAAAiC,EAAA/B,GAAAV,KAKAhkB,OAAA,SAAAknB,GACA,IA8BAjvC,EAAAgZ,EArYAyP,EACA+M,EACAC,EACA7d,EACA2O,EACA4N,EACA+a,EACAC,EAgWA50B,EAAAxe,KACAs7B,EAAA9c,EAAAsb,SAKAuZ,EAAA70B,EAAA2I,OACAI,EAAA/I,EAAA2I,OAAA0pB,GAAAvV,GACAgY,EAAA90B,EAAA+0B,QAEA70C,EAAA8f,EAAA0N,MAGAsnB,EAAA,CACAzC,OAAAsC,EAAAtC,OACAC,OAAAqC,EAAArC,QAEAyC,EAAA,CACAhqC,EAAA4pC,EAAA5pC,EACAC,EAAA2pC,EAAA3pC,GAEAgqC,EAAA,CACAzxB,MAAAoxB,EAAApxB,MACAC,OAAAmxB,EAAAnxB,QAEA6F,EAAA,CACAte,EAAA4pC,EAAAM,OACAjqC,EAAA2pC,EAAAO,QAKA,GAAAN,EAAA33C,OAAA,CACA4rB,EAAA0qB,QAAA,EAEA,IAAA4B,EAAA,GACAC,EAAA,GACA/rB,EAAAkoB,GAAA3U,EAAArC,UAAAx0B,KAAA+Z,EAAA80B,EAAA90B,EAAAu1B,gBAEA,IAAA3E,EAAA,GACA,IAAAnrC,EAAA,EAAAgZ,EAAAq2B,EAAA33C,OAAmCsI,EAAAgZ,IAAShZ,EAC5CmrC,EAAA7rC,MAhZAmpB,EAgZA4mB,EAAArvC,GA/YAw1B,SACAC,SACA7d,SACA2O,SACA4N,SACA+a,SACAC,SANA3Z,EAAA/M,EAAAqJ,QACA2D,EAAAhN,EAAAsJ,SAAAtJ,EAAAgR,OACA7hB,EAAA6Q,EAAAH,OACA/B,EAAAkC,EAAAL,cACA+L,EAAA1L,EAAAN,OAAAZ,eAAAhB,GAAA4N,WACA+a,EAAA/a,EAAAtM,iBACAsnB,EAAAhb,EAAAvM,iBAEA,CACAyN,OAAAG,IAAAua,iBAAAn4B,EAAA2O,GAAA,GACA+O,OAAAG,IAAAsa,iBAAAn4B,EAAA2O,GAAA,GACA0L,MAAAid,EAAA,GAAAA,EAAAa,iBAAAn4B,EAAA2O,GAAA,GACA1xB,MAAAs6C,EAAA,GAAAA,EAAAY,iBAAAn4B,EAAA2O,GAAA,GACA3O,QACA2O,eACA/gB,EAAAijB,EAAAvF,OAAA1d,EACAC,EAAAgjB,EAAAvF,OAAAzd,KAmYA4xB,EAAAoD,SACA0Q,IAAA1Q,OAAA,SAAAzzB,GACA,OAAAqwB,EAAAoD,OAAAzzB,EAAAvM,MAKA48B,EAAA2Y,WACA7E,IAAAnM,KAAA,SAAAh4B,EAAAnC,GACA,OAAAwyB,EAAA2Y,SAAAhpC,EAAAnC,EAAApK,MAKAgoB,GAAA5J,KAAAsyB,EAAA,SAAApU,GACA6Y,EAAAtwC,KAAA+3B,EAAAnC,UAAAsW,WAAAhrC,KAAA+Z,EAAAwc,EAAAxc,EAAA4N,SACA0nB,EAAAvwC,KAAA+3B,EAAAnC,UAAAwW,eAAAlrC,KAAA+Z,EAAAwc,EAAAxc,EAAA4N,WAKA7E,EAAA6R,MAAA5a,EAAAg0B,SAAApD,EAAA1wC,GACA6oB,EAAAgoB,WAAA/wB,EAAAk0B,cAAAtD,EAAA1wC,GACA6oB,EAAA2sB,KAAA11B,EAAAm0B,QAAAvD,EAAA1wC,GACA6oB,EAAAsoB,UAAArxB,EAAAw0B,aAAA5D,EAAA1wC,GACA6oB,EAAAwoB,OAAAvxB,EAAAy0B,UAAA7D,EAAA1wC,GAGA6oB,EAAA9d,EAAAse,EAAAte,EACA8d,EAAA7d,EAAAqe,EAAAre,EACA6d,EAAAwnB,aAAAzT,EAAAyT,aACAxnB,EAAAssB,cACAtsB,EAAAusB,kBAGAvsB,EAAA4sB,WAAA/E,EAGAsE,EA9WA,SAAAU,EAAA7sB,GACA,IAAAxF,EAAAqyB,EAAAhoB,OAAArK,IAEAG,EAAA,EAAAqF,EAAAsnB,SACA5sB,EAAA,EAGAiyB,EAAA3sB,EAAA2sB,KACAG,EAAAH,EAAAI,OAAA,SAAAhmB,EAAAukB,GACA,OAAAvkB,EAAAukB,EAAAC,OAAAn3C,OAAAk3C,EAAAJ,MAAA92C,OAAAk3C,EAAAE,MAAAp3C,QACE,GACF04C,GAAA9sB,EAAAgoB,WAAA5zC,OAAA4rB,EAAAsoB,UAAAl0C,OAEA,IAAA44C,EAAAhtB,EAAA6R,MAAAz9B,OACA64C,EAAAjtB,EAAAwoB,OAAAp0C,OACA+1C,EAAAnqB,EAAAmqB,cACAJ,EAAA/pB,EAAA+pB,aACAS,EAAAxqB,EAAAwqB,eAEA7vB,GAAAqyB,EAAA7C,EACAxvB,GAAAqyB,KAAA,GAAAhtB,EAAA0mB,aAAA,EACA/rB,GAAAqyB,EAAAhtB,EAAA2mB,kBAAA,EACAhsB,GAAAmyB,EAAA/C,EACApvB,GAAAmyB,KAAA,GAAA9sB,EAAA8mB,YAAA,EACAnsB,GAAAsyB,EAAAjtB,EAAAmnB,gBAAA,EACAxsB,GAAAsyB,EAAA,EACAtyB,GAAAsyB,KAAA,GAAAjtB,EAAAknB,cAAA,EAGA,IAAAgG,EAAA,EACAC,EAAA,SAAAzjB,GACAhP,EAAAjZ,KAAAC,IAAAgZ,EAAAF,EAAA4yB,YAAA1jB,GAAAhP,MAAAwyB,IA4BA,OAzBA1yB,EAAAmE,KAAAQ,GAAAkuB,WAAAlD,EAAAnqB,EAAAkqB,gBAAAlqB,EAAAgqB,kBACA7qB,GAAA5J,KAAAyK,EAAA6R,MAAAsb,GAGA3yB,EAAAmE,KAAAQ,GAAAkuB,WAAAtD,EAAA/pB,EAAA4pB,eAAA5pB,EAAA0pB,iBACAvqB,GAAA5J,KAAAyK,EAAAgoB,WAAA3sC,OAAA2kB,EAAAsoB,WAAA6E,GAGAD,EAAAltB,EAAA2nB,cAAAoC,EAAA,IACA5qB,GAAA5J,KAAAo3B,EAAA,SAAArB,GACAnsB,GAAA5J,KAAA+1B,EAAAC,OAAA4B,GACAhuB,GAAA5J,KAAA+1B,EAAAJ,MAAAiC,GACAhuB,GAAA5J,KAAA+1B,EAAAE,MAAA2B,KAIAD,EAAA,EAGA1yB,EAAAmE,KAAAQ,GAAAkuB,WAAA7C,EAAAxqB,EAAAuqB,iBAAAvqB,EAAAqqB,mBACAlrB,GAAA5J,KAAAyK,EAAAwoB,OAAA2E,GAKA,CACAzyB,MAHAA,GAAA,EAAAsF,EAAAunB,SAIA5sB,UAiTA2yB,CAAA70C,KAAAunB,GACAisB,EA3SA,SAAAY,EAAAlxB,GACA,IAYA4xB,EAAAC,EACAC,EAAAC,EACAC,EAdA3tB,EAAA6sB,EAAAjtB,OACArF,EAAAsyB,EAAAhoB,OACA4G,EAAAohB,EAAAhoB,OAAA4G,UACA+d,EAAA,SACAC,EAAA,SAEAzpB,EAAA7d,EAAAwZ,EAAAhB,OACA8uB,EAAA,MACEzpB,EAAA7d,EAAAoY,EAAAI,OAAAgB,EAAAhB,SACF8uB,EAAA,UAMA,IAAAmE,GAAAniB,EAAA3Q,KAAA2Q,EAAAzQ,OAAA,EACA6yB,GAAApiB,EAAA1Q,IAAA0Q,EAAAxQ,QAAA,EAEA,WAAAwuB,GACA8D,EAAA,SAAArrC,GACA,OAAAA,GAAA0rC,GAEAJ,EAAA,SAAAtrC,GACA,OAAAA,EAAA0rC,KAGAL,EAAA,SAAArrC,GACA,OAAAA,GAAAyZ,EAAAjB,MAAA,GAEA8yB,EAAA,SAAAtrC,GACA,OAAAA,GAAAqY,EAAAG,MAAAiB,EAAAjB,MAAA,IAIA+yB,EAAA,SAAAvrC,GACA,OAAAA,EAAAyZ,EAAAjB,MAAAsF,EAAAynB,UAAAznB,EAAAwnB,aAAAjtB,EAAAG,OAEAgzB,EAAA,SAAAxrC,GACA,OAAAA,EAAAyZ,EAAAjB,MAAAsF,EAAAynB,UAAAznB,EAAAwnB,aAAA,GAEAmG,EAAA,SAAAxrC,GACA,OAAAA,GAAA0rC,EAAA,gBAGAN,EAAAvtB,EAAA9d,IACAsnC,EAAA,OAGAiE,EAAAztB,EAAA9d,KACAsnC,EAAA,SACAC,EAAAkE,EAAA3tB,EAAA7d,KAEEqrC,EAAAxtB,EAAA9d,KACFsnC,EAAA,QAGAkE,EAAA1tB,EAAA9d,KACAsnC,EAAA,SACAC,EAAAkE,EAAA3tB,EAAA7d,KAIA,IAAA4xB,EAAA8Y,EAAAta,SACA,OACAiX,OAAAzV,EAAAyV,OAAAzV,EAAAyV,SACAC,OAAA1V,EAAA0V,OAAA1V,EAAA0V,UAyOAqE,CAAAr1C,KAAA0zC,GAEAD,EApOA,SAAAtkB,EAAAjM,EAAAswB,EAAA1xB,GAEA,IAAArY,EAAA0lB,EAAA1lB,EACAC,EAAAylB,EAAAzlB,EAEAslC,EAAA7f,EAAA6f,UACAD,EAAA5f,EAAA4f,aACA5rB,EAAAgM,EAAAhM,aACA4tB,EAAAyC,EAAAzC,OACAC,EAAAwC,EAAAxC,OACAsE,EAAAtG,EAAAD,EACAwG,EAAApyB,EAAA4rB,EAkCA,MAhCA,UAAAgC,EACAtnC,GAAAyZ,EAAAjB,MACE,WAAA8uB,KACFtnC,GAAAyZ,EAAAjB,MAAA,GACAiB,EAAAjB,MAAAH,EAAAG,QACAxY,EAAAqY,EAAAG,MAAAiB,EAAAjB,OAEAxY,EAAA,IACAA,EAAA,IAIA,QAAAunC,EACAtnC,GAAA4rC,EAEA5rC,GADE,WAAAsnC,EACF9tB,EAAAhB,OAAAozB,EAEApyB,EAAAhB,OAAA,EAGA,WAAA8uB,EACA,SAAAD,EACAtnC,GAAA6rC,EACG,UAAAvE,IACHtnC,GAAA6rC,GAEE,SAAAvE,EACFtnC,GAAA8rC,EACE,UAAAxE,IACFtnC,GAAA8rC,GAGA,CACA9rC,IACAC,KAqLA8rC,CAAAjuB,EAAAmsB,EAAAF,EAAAh1B,EAAA4N,aAEA7E,EAAA0qB,QAAA,EAoBA,OAjBA1qB,EAAAwpB,OAAAyC,EAAAzC,OACAxpB,EAAAypB,OAAAwC,EAAAxC,OACAzpB,EAAA9d,EAAAgqC,EAAAhqC,EACA8d,EAAA7d,EAAA+pC,EAAA/pC,EACA6d,EAAAtF,MAAAyxB,EAAAzxB,MACAsF,EAAArF,OAAAwxB,EAAAxxB,OAGAqF,EAAAosB,OAAA5rB,EAAAte,EACA8d,EAAAqsB,OAAA7rB,EAAAre,EAEA8U,EAAA2I,OAAAI,EAEA2rB,GAAA5X,EAAA3N,QACA2N,EAAA3N,OAAAlpB,KAAA+Z,EAAA+I,GAGA/I,GAGAi3B,UAAA,SAAAC,EAAAxyB,GACA,IAAAnB,EAAA/hB,KAAAosB,OAAArK,IACAoN,EAAAnvB,KAAAknB,MACAyuB,EAAA31C,KAAA41C,iBAAAF,EAAAxyB,EAAAiM,GAEApN,EAAAuB,OAAAqyB,EAAAviB,GAAAuiB,EAAAriB,IACAvR,EAAAuB,OAAAqyB,EAAAtiB,GAAAsiB,EAAA3qC,IACA+W,EAAAuB,OAAAqyB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAxyB,EAAAiM,GACA,IAAAiE,EAAAC,EAAAwiB,EAAAviB,EAAAtoB,EAAA8qC,EACA9G,EAAA7f,EAAA6f,UACA7rB,EAAAgM,EAAAhM,aACA4tB,EAAA5hB,EAAA4hB,OACAC,EAAA7hB,EAAA6hB,OACA+E,EAAAL,EAAAjsC,EACAusC,EAAAN,EAAAhsC,EACAuY,EAAAiB,EAAAjB,MACAC,EAAAgB,EAAAhB,OAEA,cAAA8uB,EACAhmC,EAAAgrC,EAAA9zB,EAAA,EAEA,SAAA6uB,GAEA1d,GADAD,EAAA2iB,GACA/G,EACA6G,EAAAziB,EAEAE,EAAAtoB,EAAAgkC,EACA8G,EAAA9qC,EAAAgkC,IAGA3b,GADAD,EAAA2iB,EAAA9zB,GACA+sB,EACA6G,EAAAziB,EAEAE,EAAAtoB,EAAAgkC,EACA8G,EAAA9qC,EAAAgkC,QAgBA,GAbA,SAAA+B,GAEA3d,GADAC,EAAA0iB,EAAA5yB,EAAA,GACA6rB,EACA6G,EAAAxiB,EAAA2b,GACI,UAAA+B,GAEJ3d,GADAC,EAAA0iB,EAAA9zB,EAAAkB,EAAA6rB,GACAA,EACA6G,EAAAxiB,EAAA2b,IAEA3b,EAAAlE,EAAAwkB,OACAvgB,EAAAC,EAAA2b,EACA6G,EAAAxiB,EAAA2b,GAEA,QAAAgC,EAEAhmC,GADAsoB,EAAA0iB,GACAhH,EACA8G,EAAAxiB,MACI,CAEJtoB,GADAsoB,EAAA0iB,EAAA9zB,GACA8sB,EACA8G,EAAAxiB,EAEA,IAAA2iB,EAAAJ,EACAA,EAAAziB,EACAA,EAAA6iB,EAGA,OAAU7iB,KAAAC,KAAAwiB,KAAAviB,KAAAtoB,KAAA8qC,OAGVI,UAAA,SAAAzX,EAAAtP,EAAApN,GACA,IAAAqX,EAAAjK,EAAAiK,MAEA,GAAAA,EAAAz9B,OAAA,CACA8iC,EAAAh1B,EAAA0oC,GAAAhjB,IAAAwiB,aAEA5vB,EAAAo0B,UAAAhnB,EAAAwiB,YACA5vB,EAAAq0B,aAAA,MAEA,IAMAnyC,EAAAgZ,EANAy0B,EAAAviB,EAAAuiB,cACAzD,EAAA9e,EAAA8e,aAMA,IAJAlsB,EAAA6O,UAAAzB,EAAAgf,eACApsB,EAAAmE,KAAAQ,GAAAkuB,WAAAlD,EAAAviB,EAAAsiB,gBAAAtiB,EAAAoiB,kBAGAttC,EAAA,EAAAgZ,EAAAmc,EAAAz9B,OAAkCsI,EAAAgZ,IAAShZ,EAC3C8d,EAAAs0B,SAAAjd,EAAAn1B,GAAAw6B,EAAAh1B,EAAAg1B,EAAA/0B,GACA+0B,EAAA/0B,GAAAgoC,EAAAzD,EAEAhqC,EAAA,IAAAm1B,EAAAz9B,SACA8iC,EAAA/0B,GAAAylB,EAAA+e,kBAAAD,KAMAqI,SAAA,SAAA7X,EAAAtP,EAAApN,GACA,IAQAw0B,EARAjF,EAAAniB,EAAAmiB,aACAjD,EAAAlf,EAAAkf,YACAE,EAAApf,EAAAkiB,WACA6C,EAAA/kB,EAAA+kB,KACAsC,EAAArnB,EAAA+f,cACA2E,EAAA1kB,EAAA0kB,YACA4C,EAAA,EACAC,EAAAF,EAAArE,GAAAhjB,EAAA,UAGApN,EAAAo0B,UAAA5H,EACAxsB,EAAAq0B,aAAA,MACAr0B,EAAAmE,KAAAQ,GAAAkuB,WAAAtD,EAAAniB,EAAAgiB,eAAAhiB,EAAA8hB,iBAEAxS,EAAAh1B,EAAA0oC,GAAAhjB,EAAAof,GAGA,IAAAoI,EAAA,SAAA1lB,GACAlP,EAAAs0B,SAAAplB,EAAAwN,EAAAh1B,EAAAgtC,EAAAhY,EAAA/0B,GACA+0B,EAAA/0B,GAAA4nC,EAAAjD,GAIAtsB,EAAA6O,UAAAzB,EAAAmf,cACA5nB,GAAA5J,KAAAqS,EAAAogB,WAAAoH,GAEAF,EAAAD,GAAA,UAAAjI,EACA,WAAAA,EAAA+C,EAAA,IAAAA,EAAA,EACA,EAGA5qB,GAAA5J,KAAAo3B,EAAA,SAAArB,EAAA5uC,GACAsyC,EAAApnB,EAAA2kB,gBAAA7vC,GACA8d,EAAA6O,UAAA2lB,EACA7vB,GAAA5J,KAAA+1B,EAAAC,OAAA6D,GAEAjwB,GAAA5J,KAAA+1B,EAAAJ,MAAA,SAAAxhB,GAEAulB,IAEAz0B,EAAA6O,UAAAzB,EAAA+iB,sBACAnwB,EAAA6S,SAAA8hB,EAAAjY,EAAA/0B,EAAA4nC,KAGAvvB,EAAA8O,UAAA,EACA9O,EAAAgP,YAAA8iB,EAAA5vC,GAAA6pB,YACA/L,EAAA60B,WAAAF,EAAAjY,EAAA/0B,EAAA4nC,KAGAvvB,EAAA6O,UAAAijB,EAAA5vC,GAAA4pB,gBACA9L,EAAA6S,SAAA8hB,EAAA,EAAAjY,EAAA/0B,EAAA,EAAA4nC,EAAA,EAAAA,EAAA,GACAvvB,EAAA6O,UAAA2lB,GAGAI,EAAA1lB,KAGAvK,GAAA5J,KAAA+1B,EAAAE,MAAA4D,KAIAF,EAAA,EAGA/vB,GAAA5J,KAAAqS,EAAA0gB,UAAA8G,GACAlY,EAAA/0B,GAAA2kC,GAGAwI,WAAA,SAAApY,EAAAtP,EAAApN,GACA,IAAAguB,EAAA5gB,EAAA4gB,OAEAA,EAAAp0C,SACA8iC,EAAAh1B,EAAA0oC,GAAAhjB,IAAA6iB,cACAvT,EAAA/0B,GAAAylB,EAAAuf,gBAEA3sB,EAAAo0B,UAAAhnB,EAAA6iB,aACAjwB,EAAAq0B,aAAA,MAEAr0B,EAAA6O,UAAAzB,EAAAwf,gBACA5sB,EAAAmE,KAAAQ,GAAAkuB,WAAAzlB,EAAA4iB,eAAA5iB,EAAA2iB,iBAAA3iB,EAAAyiB,mBAEAlrB,GAAA5J,KAAAizB,EAAA,SAAA9e,GACAlP,EAAAs0B,SAAAplB,EAAAwN,EAAAh1B,EAAAg1B,EAAA/0B,GACA+0B,EAAA/0B,GAAAylB,EAAA4iB,eAAA5iB,EAAAsf,kBAKAqI,eAAA,SAAArY,EAAAtP,EAAApN,EAAA2xB,GACA3xB,EAAA6O,UAAAzB,EAAAtB,gBACA9L,EAAAgP,YAAA5B,EAAArB,YACA/L,EAAA8O,UAAA1B,EAAApB,YACA,IAAAgjB,EAAA5hB,EAAA4hB,OACAC,EAAA7hB,EAAA6hB,OACAvnC,EAAAg1B,EAAAh1B,EACAC,EAAA+0B,EAAA/0B,EACAuY,EAAAyxB,EAAAzxB,MACAC,EAAAwxB,EAAAxxB,OACAE,EAAA+M,EAAAhM,aAEApB,EAAAsB,YACAtB,EAAAU,OAAAhZ,EAAA2Y,EAAA1Y,GACA,QAAAsnC,GACAhxC,KAAAy1C,UAAAhX,EAAAiV,GAEA3xB,EAAAuB,OAAA7Z,EAAAwY,EAAAG,EAAA1Y,GACAqY,EAAAg1B,iBAAAttC,EAAAwY,EAAAvY,EAAAD,EAAAwY,EAAAvY,EAAA0Y,GACA,WAAA4uB,GAAA,UAAAD,GACA/wC,KAAAy1C,UAAAhX,EAAAiV,GAEA3xB,EAAAuB,OAAA7Z,EAAAwY,EAAAvY,EAAAwY,EAAAE,GACAL,EAAAg1B,iBAAAttC,EAAAwY,EAAAvY,EAAAwY,EAAAzY,EAAAwY,EAAAG,EAAA1Y,EAAAwY,GACA,WAAA8uB,GACAhxC,KAAAy1C,UAAAhX,EAAAiV,GAEA3xB,EAAAuB,OAAA7Z,EAAA2Y,EAAA1Y,EAAAwY,GACAH,EAAAg1B,iBAAAttC,EAAAC,EAAAwY,EAAAzY,EAAAC,EAAAwY,EAAAE,GACA,WAAA4uB,GAAA,SAAAD,GACA/wC,KAAAy1C,UAAAhX,EAAAiV,GAEA3xB,EAAAuB,OAAA7Z,EAAAC,EAAA0Y,GACAL,EAAAg1B,iBAAAttC,EAAAC,EAAAD,EAAA2Y,EAAA1Y,GACAqY,EAAAY,YAEAZ,EAAAyB,OAEA2L,EAAApB,YAAA,GACAhM,EAAA0B,UAIA8J,KAAA,WACA,IAAAxL,EAAA/hB,KAAAosB,OAAArK,IACAoN,EAAAnvB,KAAAknB,MAEA,OAAAiI,EAAA8iB,QAAA,CAIA,IAAAyB,EAAA,CACAzxB,MAAAkN,EAAAlN,MACAC,OAAAiN,EAAAjN,QAEAuc,EAAA,CACAh1B,EAAA0lB,EAAA1lB,EACAC,EAAAylB,EAAAzlB,GAIAuoC,EAAAjpC,KAAAwpB,IAAArD,EAAA8iB,QAAA,QAAA9iB,EAAA8iB,QAGA+E,EAAA7nB,EAAAiK,MAAAz9B,QAAAwzB,EAAAogB,WAAA5zC,QAAAwzB,EAAA+kB,KAAAv4C,QAAAwzB,EAAA0gB,UAAAl0C,QAAAwzB,EAAA4gB,OAAAp0C,OAEAqE,KAAA85B,SAAAiU,SAAAiJ,IACAj1B,EAAAgC,OACAhC,EAAAk1B,YAAAhF,EAGAjyC,KAAA82C,eAAArY,EAAAtP,EAAApN,EAAA2xB,GAGAjV,EAAA/0B,GAAAylB,EAAA0f,SAGA7uC,KAAAk2C,UAAAzX,EAAAtP,EAAApN,GAGA/hB,KAAAs2C,SAAA7X,EAAAtP,EAAApN,GAGA/hB,KAAA62C,WAAApY,EAAAtP,EAAApN,GAEAA,EAAAmC,aAUAgzB,YAAA,SAAAtc,GACA,IAAApc,EAAAxe,KACA4d,EAAAY,EAAAsb,SACAoZ,GAAA,EA6BA,OA3BA10B,EAAA+zB,YAAA/zB,EAAA+zB,aAAA,GAGA,aAAA3X,EAAA77B,KACAyf,EAAA+0B,QAAA,GAEA/0B,EAAA+0B,QAAA/0B,EAAA4N,OAAA+qB,0BAAAvc,EAAAhd,EAAAuX,KAAAvX,IAIAs1B,GAAAxsB,GAAAvJ,YAAAqB,EAAA+0B,QAAA/0B,EAAA+zB,gBAIA/zB,EAAA+zB,YAAA/zB,EAAA+0B,SAEA31B,EAAAmwB,SAAAnwB,EAAA+P,UACAnP,EAAAu1B,eAAA,CACAtqC,EAAAmxB,EAAAnxB,EACAC,EAAAkxB,EAAAlxB,GAGA8U,EAAAwN,QAAA,GACAxN,EAAAyI,UAIAisB,KAOAkE,GAAAnH,GAEAoH,GAAA/E,GACA+E,GAAApH,YAAAmH,GAEA,IAAAE,GAAA5wB,GAAAjK,eA4BA,SAAA86B,KACA,OAAA7wB,GAAA3I,MAAA,GAA0B,GAAA7I,MAAAzQ,KAAA/I,WAAA,CAC1ByiB,OAAA,SAAAvc,EAAAyZ,EAAAD,EAAAwC,GACA,aAAAhc,GAAA,UAAAA,EAAA,CACA,IACAqC,EAAAlF,EAAA4Y,EADA6/B,EAAAp8B,EAAAxZ,GAAAjG,OAOA,IAJA0f,EAAAzZ,KACAyZ,EAAAzZ,GAAA,IAGAqC,EAAA,EAAeA,EAAAuzC,IAAUvzC,EACzB0T,EAAAyD,EAAAxZ,GAAAqC,GACAlF,EAAAu4C,GAAA3/B,EAAA5Y,KAAA,UAAA6C,EAAA,qBAEAqC,GAAAoX,EAAAzZ,GAAAjG,QACA0f,EAAAzZ,GAAA2B,KAAA,KAGA8X,EAAAzZ,GAAAqC,GAAAlF,MAAA4Y,EAAA5Y,MAAA4Y,EAAA5Y,OAAAsc,EAAAzZ,GAAAqC,GAAAlF,KAGA2nB,GAAA3I,MAAA1C,EAAAzZ,GAAAqC,GAAA,CAAAmpC,GAAAM,iBAAA3uC,GAAA4Y,IAGA+O,GAAA3I,MAAA1C,EAAAzZ,GAAAqC,GAAA0T,QAIA+O,GAAA/I,QAAA/b,EAAAyZ,EAAAD,EAAAwC,MAWA,SAAA65B,KACA,OAAA/wB,GAAA3I,MAAA,GAA0B,GAAA7I,MAAAzQ,KAAA/I,WAAA,CAC1ByiB,OAAA,SAAAvc,EAAAyZ,EAAAD,EAAAwC,GACA,IAAAC,EAAAxC,EAAAzZ,IAAA,GACAkc,EAAA1C,EAAAxZ,GAEA,WAAAA,EAEAyZ,EAAAzZ,GAAA21C,GAAA15B,EAAAC,GACI,UAAAlc,EAEJyZ,EAAAzZ,GAAA8kB,GAAA3I,MAAAF,EAAA,CAAAuvB,GAAAM,iBAAA5vB,EAAA/e,MAAA+e,IAEA4I,GAAA/I,QAAA/b,EAAAyZ,EAAAD,EAAAwC,MA4CA,SAAA85B,GAAAze,GACA,cAAAA,GAAA,WAAAA,EA5HAxT,GAAAR,KAAA,UACAqI,SAAA,GACAqqB,OAAA,CACA,YACA,WACA,QACA,aACA,aAEAziB,MAAA,CACA0iB,QAAA,KACAziB,KAAA,UACAsM,WAAA,EACAoW,kBAAA,KAEAld,QAAA,KACAwO,qBAAA,EACA2O,YAAA,EACAC,4BAAA,IA6GA,IAAAC,GAAA,SAAA90C,EAAA3J,GAEA,OADAyG,KAAAi4C,UAAA/0C,EAAA3J,GACAyG,MAGA0mB,GAAAtI,OAAA45B,GAAAzzC,UAAA,CAIA0zC,UAAA,SAAA/0C,EAAA3J,GACA,IAAAilB,EAAAxe,KAEAzG,EAtDA,SAAAA,GAKA,IAAAmF,GAJAnF,KAAA,IAIAmF,KAAAnF,EAAAmF,MAAA,GASA,OARAA,EAAA6sB,SAAA7sB,EAAA6sB,UAAA,GACA7sB,EAAAy3B,OAAAz3B,EAAAy3B,QAAA,GAEA58B,EAAAqkB,QAAA65B,GACAhyB,GAAAO,OACAP,GAAAlsB,EAAAwF,MACAxF,EAAAqkB,SAAA,IAEArkB,EAwCA2+C,CAAA3+C,GAEA,IAAAktB,EAAAgkB,GAAAO,eAAA9nC,EAAA3J,GACAqtB,EAAAH,KAAAG,OACA1E,EAAA0E,KAAA1E,OACAD,EAAA2E,KAAA3E,MAEAzD,EAAA3b,GAAA6jB,GAAAvK,MACAqC,EAAAuD,IAAA0E,EACAjI,EAAAoI,SACApI,EAAAjlB,SACAilB,EAAAyD,QACAzD,EAAA0D,SACA1D,EAAAgtB,YAAAtpB,EAAAD,EAAAC,EAAA,KACA1D,EAAAZ,QAAArkB,EAAAqkB,QACAY,EAAA25B,iBAAA,EAUA35B,EAAAsD,MAAAtD,EACAA,EAAA4Z,WAAA5Z,EAGAw5B,GAAAI,UAAA55B,EAAA3b,IAAA2b,EAGA7lB,OAAAC,eAAA4lB,EAAA,QACAkK,IAAA,WACA,OAAAlK,EAAAjlB,OAAAmF,MAEAiqB,IAAA,SAAA7vB,GACA0lB,EAAAjlB,OAAAmF,KAAA5F,KAIA2tB,GAAAG,GASApI,EAAAuI,aACAvI,EAAAwN,UALAlpB,QAAAvD,MAAA,sEAWAwnB,WAAA,WACA,IAAAvI,EAAAxe,KAsBA,OAnBAqsC,GAAAQ,OAAAruB,EAAA,cAEAkI,GAAA2xB,YAAA75B,IAAAZ,QAAA06B,kBAEA95B,EAAA+5B,aAEA/5B,EAAAZ,QAAAk6B,YAEAt5B,EAAAg6B,QAAA,GAIAh6B,EAAAi6B,sBACAj6B,EAAAk6B,sBACAl6B,EAAAm6B,cAGAtM,GAAAQ,OAAAruB,EAAA,aAEAA,GAGAqD,MAAA,WAEA,OADA6E,GAAAE,OAAA/E,MAAA7hB,MACAA,MAGAH,KAAA,WAGA,OADAmpB,GAAAU,gBAAA1pB,MACAA,MAGAw4C,OAAA,SAAAI,GACA,IAAAp6B,EAAAxe,KACA4d,EAAAY,EAAAZ,QACAgJ,EAAApI,EAAAoI,OACA4kB,EAAA5tB,EAAAurB,qBAAA3qB,EAAAgtB,aAAA,KAMAqN,EAAA7vC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAwc,GAAAoyB,gBAAAlyB,KACAmyB,EAAA/vC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAshC,EAAAqN,EAAArN,EAAA9kB,GAAAsyB,iBAAApyB,KAEA,IAAApI,EAAAyD,QAAA42B,GAAAr6B,EAAA0D,SAAA62B,KAIAnyB,EAAA3E,MAAAzD,EAAAyD,MAAA42B,EACAjyB,EAAA1E,OAAA1D,EAAA0D,OAAA62B,EACAnyB,EAAA9D,MAAAb,MAAA42B,EAAA,KACAjyB,EAAA9D,MAAAZ,OAAA62B,EAAA,KAEAryB,GAAA2xB,YAAA75B,EAAAZ,EAAA06B,mBAEAM,GAAA,CAEA,IAAAK,EAAA,CAAkBh3B,MAAA42B,EAAA32B,OAAA62B,GAClB1M,GAAAQ,OAAAruB,EAAA,UAAAy6B,IAGAr7B,EAAAs7B,UACAt7B,EAAAs7B,SAAA16B,EAAAy6B,GAGAz6B,EAAA3e,OACA2e,EAAAwN,OAAA,CACAnD,SAAAjL,EAAAm6B,gCAKAU,oBAAA,WACA,IAAA76B,EAAA5d,KAAA4d,QACAu7B,EAAAv7B,EAAAuN,QAAA,GACAiuB,EAAAx7B,EAAAjG,MAEA+O,GAAA5J,KAAAq8B,EAAA/tB,MAAA,SAAAiuB,EAAAx9B,GACAw9B,EAAAx2C,GAAAw2C,EAAAx2C,IAAA,UAAAgZ,IAGA6K,GAAA5J,KAAAq8B,EAAA7tB,MAAA,SAAAguB,EAAAz9B,GACAy9B,EAAAz2C,GAAAy2C,EAAAz2C,IAAA,UAAAgZ,IAGAu9B,IACAA,EAAAv2C,GAAAu2C,EAAAv2C,IAAA,UAOA61C,oBAAA,WACA,IAAAl6B,EAAAxe,KACA4d,EAAAY,EAAAZ,QACAuN,EAAA3M,EAAA2M,QAAA,GACAmX,EAAA,GACAiX,EAAA5gD,OAAAukB,KAAAiO,GAAAmpB,OAAA,SAAAp8B,EAAArV,GAEA,OADAqV,EAAArV,IAAA,EACAqV,GACG,IAEH0F,EAAAuN,SACAmX,IAAA1/B,QACAgb,EAAAuN,OAAAC,OAAA,IAAA3N,IAAA,SAAA47B,GACA,OAAaz7B,QAAAy7B,EAAAG,MAAA,WAAAC,UAAA,aAEb77B,EAAAuN,OAAAG,OAAA,IAAA7N,IAAA,SAAA67B,GACA,OAAa17B,QAAA07B,EAAAE,MAAA,SAAAC,UAAA,YAKb77B,EAAAjG,OACA2qB,EAAA/+B,KAAA,CACAqa,UAAAjG,MACA6hC,MAAA,eACAE,WAAA,EACAD,UAAA,cAIA/yB,GAAA5J,KAAAwlB,EAAA,SAAAp/B,GACA,IAAAk2C,EAAAl2C,EAAA0a,QACA/a,EAAAu2C,EAAAv2C,GACA82C,EAAArC,GAAA8B,EAAAr6C,KAAAmE,EAAAs2C,OAEA9B,GAAA0B,EAAAngB,YAAAye,GAAAx0C,EAAAu2C,aACAL,EAAAngB,SAAA/1B,EAAAu2C,WAGAF,EAAA12C,IAAA,EACA,IAAA8U,EAAA,KACA,GAAA9U,KAAAsoB,KAAAtoB,GAAA9D,OAAA46C,GACAhiC,EAAAwT,EAAAtoB,IACA+a,QAAAw7B,EACAzhC,EAAAoK,IAAAvD,EAAAuD,IACApK,EAAAmK,MAAAtD,MACI,CACJ,IAAAo7B,EAAAxM,GAAAK,oBAAAkM,GACA,IAAAC,EACA,OAEAjiC,EAAA,IAAAiiC,EAAA,CACA/2C,KACA9D,KAAA46C,EACA/7B,QAAAw7B,EACAr3B,IAAAvD,EAAAuD,IACAD,MAAAtD,IAEA2M,EAAAxT,EAAA9U,IAAA8U,EAGAA,EAAAkiC,oBAKA32C,EAAAw2C,YACAl7B,EAAA7G,WAIA+O,GAAA5J,KAAAy8B,EAAA,SAAAO,EAAAj3C,GACAi3C,UACA3uB,EAAAtoB,KAIA2b,EAAA2M,SAEAiiB,GAAAS,kBAAA7tC,OAGA+5C,yBAAA,WACA,IAAAv7B,EAAAxe,KACAg6C,EAAA,GA0BA,OAxBAtzB,GAAA5J,KAAA0B,EAAA9f,KAAA6sB,SAAA,SAAAP,EAAAR,GACA,IAAAM,EAAAtM,EAAAgN,eAAAhB,GACAzrB,EAAAisB,EAAAjsB,MAAAyf,EAAAjlB,OAAAwF,KAQA,GANA+rB,EAAA/rB,MAAA+rB,EAAA/rB,WACAyf,EAAAy7B,mBAAAzvB,GACAM,EAAAtM,EAAAgN,eAAAhB,IAEAM,EAAA/rB,OAEA+rB,EAAAsN,WACAtN,EAAAsN,WAAAvN,YAAAL,GACAM,EAAAsN,WAAAzN,iBACI,CACJ,IAAAuvB,EAAAvZ,GAAA7V,EAAA/rB,MACA,QAAAnD,IAAAs+C,EACA,UAAAC,MAAA,IAAArvB,EAAA/rB,KAAA,0BAGA+rB,EAAAsN,WAAA,IAAA8hB,EAAA17B,EAAAgM,GACAwvB,EAAAz2C,KAAAunB,EAAAsN,cAEG5Z,GAEHw7B,GAOAI,cAAA,WACA,IAAA57B,EAAAxe,KACA0mB,GAAA5J,KAAA0B,EAAA9f,KAAA6sB,SAAA,SAAAP,EAAAR,GACAhM,EAAAgN,eAAAhB,GAAA4N,WAAArM,SACGvN,IAMHuN,MAAA,WACA/rB,KAAAo6C,gBACAp6C,KAAAo0C,QAAArtB,cAGAiF,OAAA,SAAAzyB,GACA,IAtUAuoB,EACAu4B,EAqUA77B,EAAAxe,KAgBA,GAdAzG,GAAA,iBAAAA,IAEAA,EAAA,CACAsvB,SAAAtvB,EACA6vB,KAAA1tB,UAAA,KA3UA2+C,GADAv4B,EAgVAtD,GA/UAZ,QAEA8I,GAAA5J,KAAAgF,EAAAqJ,OAAA,SAAAxT,GACA2rB,GAAAG,UAAA3hB,EAAAnK,KAGA0iC,EAAA5C,GACAhyB,GAAAO,OACAP,GAAA3D,EAAAvoB,OAAAwF,MACAs7C,GAEAv4B,EAAAlE,QAAAkE,EAAAvoB,OAAAqkB,QAAAy8B,EACAv4B,EAAA22B,sBACA32B,EAAA42B,sBAGA52B,EAAAsyB,QAAAta,SAAAugB,EAAAnhB,SACApX,EAAAsyB,QAAArtB,aAkUAslB,GAAAc,YAAA3uB,IAEA,IAAA6tB,GAAAQ,OAAAruB,EAAA,iBAKAA,EAAA41B,QAAAloB,MAAA1N,EAAA9f,KAGA,IAAAs7C,EAAAx7B,EAAAu7B,2BAGArzB,GAAA5J,KAAA0B,EAAA9f,KAAA6sB,SAAA,SAAAP,EAAAR,GACAhM,EAAAgN,eAAAhB,GAAA4N,WAAAxL,yBACGpO,GAEHA,EAAA87B,eAGA97B,EAAAZ,QAAAgL,WAAApK,EAAAZ,QAAAgL,UAAAC,UACAnC,GAAA5J,KAAAk9B,EAAA,SAAA5hB,GACAA,EAAArM,UAIAvN,EAAA+7B,iBAIA/7B,EAAA41B,QAAArtB,aAIAvI,EAAAg8B,WAAA,GAGAnO,GAAAQ,OAAAruB,EAAA,eAEAA,EAAA25B,gBACA35B,EAAAi8B,iBAAA,CACA5xB,SAAAtvB,EAAAsvB,SACAlC,OAAAptB,EAAAotB,OACAyC,KAAA7vB,EAAA6vB,MAGA5K,EAAA8J,OAAA/uB,KASA+gD,aAAA,YAGA,IAAAjO,GAAAQ,OAFA7sC,KAEA,kBAIAsjC,GAAAtX,OAAAhsB,UAAAiiB,MAAAjiB,KAAAkiB,QASAmqB,GAAAQ,OAfA7sC,KAeA,oBACAqsC,GAAAQ,OAhBA7sC,KAgBA,iBAQAu6C,eAAA,WAGA,QAAAlO,GAAAQ,OAFA7sC,KAEA,yBAIA,QAAAiE,EAAA,EAAAqZ,EANAtd,KAMAtB,KAAA6sB,SAAA5vB,OAAiDsI,EAAAqZ,IAAUrZ,EAN3DjE,KAOA06C,cAAAz2C,GAGAooC,GAAAQ,OAVA7sC,KAUA,yBAQA06C,cAAA,SAAA7+B,GACA,IACAiP,EADA9qB,KACAwrB,eAAA3P,GACA5b,EAAA,CACA6qB,OACAjP,UAGA,IAAAwwB,GAAAQ,OAPA7sC,KAOA,uBAAAC,MAIA6qB,EAAAsN,WAAApM,SAEAqgB,GAAAQ,OAbA7sC,KAaA,sBAAAC,MAGAqoB,OAAA,SAAA/uB,GACA,IAAAilB,EAAAxe,KAEAzG,GAAA,iBAAAA,IAEAA,EAAA,CACAsvB,SAAAtvB,EACA6vB,KAAA1tB,UAAA,KAIA,IAAAi/C,EAAAn8B,EAAAZ,QAAAgL,UACAC,EAAAyuB,GAAA/9C,EAAAsvB,SAAA8xB,KAAA9xB,UACAO,EAAA7vB,EAAA6vB,KAEA,QAAAijB,GAAAQ,OAAAruB,EAAA,iBAIA,IAAAuK,EAAA,SAAAH,GACAyjB,GAAAQ,OAAAruB,EAAA,eACAkI,GAAA9J,SAAA+9B,KAAA5xB,WAAA,CAAAH,GAAApK,IAGA,GAAAm8B,GAAA9xB,EAAA,CACA,IAAAD,EAAA,IAAAH,GAAA,CACAJ,SAAAQ,EAAA,MACAlC,OAAAptB,EAAAotB,QAAAg0B,EAAAh0B,OAEA2B,OAAA,SAAAxG,EAAA84B,GACA,IAAAC,EAAAn0B,GAAAC,OAAAvH,QAAAw7B,EAAAj0B,QACAyB,EAAAwyB,EAAAxyB,YACA0yB,EAAA1yB,EAAAwyB,EAAAvyB,SAEAvG,EAAAyL,KAAAstB,EAAAC,KAAA1yB,IAGAG,oBAAAoyB,EAAA7xB,WACAN,oBAAAO,IAGAC,GAAAG,aAAA3K,EAAAoK,EAAAC,EAAAO,QAEA5K,EAAA+O,OAGAxE,EAAA,IAAAN,GAAA,CAAkCJ,SAAA,EAAAvG,MAAAtD,KAGlC,OAAAA,IAGA+O,KAAA,SAAAF,GACA,IAAA7O,EAAAxe,KAEAwe,EAAAqD,QAEA6E,GAAAtK,cAAAiR,KACAA,EAAA,GAGA7O,EAAA6I,WAAAgG,GAEA7O,EAAAyD,OAAA,GAAAzD,EAAA0D,QAAA,IAIA,IAAAmqB,GAAAQ,OAAAruB,EAAA,cAAA6O,MAKA3G,GAAA5J,KAAA0B,EAAA2kB,MAAA,SAAAC,GACAA,EAAA7V,KAAA/O,EAAAwU,YACGxU,GAEHA,EAAAu8B,aAAA1tB,GACA7O,EAAAw8B,aAAA3tB,GAEAgf,GAAAQ,OAAAruB,EAAA,aAAA6O,MAMAhG,WAAA,SAAAgG,GAGA,IAFA,IAEAppB,EAAA,EAAAqZ,GAFAtd,KAEAtB,KAAA6sB,UAAA,IAAA5vB,OAAyDsI,EAAAqZ,IAAUrZ,EAFnEjE,KAGAm3B,iBAAAlzB,IAHAjE,KAIAwrB,eAAAvnB,GAAAm0B,WAAA/Q,WAAAgG,GAJArtB,KAQAo0C,QAAA/sB,WAAAgG,IAQA0tB,aAAA,SAAA1tB,GACA,IAAA7O,EAAAxe,KAEA,QAAAqsC,GAAAQ,OAAAruB,EAAA,sBAAA6O,IAAA,CAKA,QAAAppB,GAAAua,EAAA9f,KAAA6sB,UAAA,IAAA5vB,OAAA,EAAmDsI,GAAA,IAAQA,EAC3Dua,EAAA2Y,iBAAAlzB,IACAua,EAAAy8B,YAAAh3C,EAAAopB,GAIAgf,GAAAQ,OAAAruB,EAAA,qBAAA6O,MAQA4tB,YAAA,SAAAp/B,EAAAwR,GACA,IACAvC,EADA9qB,KACAwrB,eAAA3P,GACA5b,EAAA,CACA6qB,OACAjP,QACAwR,gBAGA,IAAAgf,GAAAQ,OARA7sC,KAQA,qBAAAC,MAIA6qB,EAAAsN,WAAA7K,KAAAF,GAEAgf,GAAAQ,OAdA7sC,KAcA,oBAAAC,MAQA+6C,aAAA,SAAA3tB,GACA,IACA+mB,EADAp0C,KACAo0C,QACAn0C,EAAA,CACAm0C,UACA/mB,gBAGA,IAAAgf,GAAAQ,OAPA7sC,KAOA,qBAAAC,MAIAm0C,EAAA7mB,OAEA8e,GAAAQ,OAbA7sC,KAaA,oBAAAC,MAOAi7C,kBAAA,SAAAtgB,GACA,OAAA2H,GAAAC,MAAAC,OAAAziC,KAAA46B,IAGAugB,mBAAA,SAAAvgB,GACA,OAAA2H,GAAAC,MAAAtM,MAAAl2B,KAAA46B,EAAA,CAAgD6G,WAAA,KAGhD2Z,mBAAA,SAAAxgB,GACA,OAAA2H,GAAAC,MAAA,UAAAxiC,KAAA46B,EAAA,CAAoD6G,WAAA,KAGpD0V,0BAAA,SAAAvc,EAAAzF,EAAAvX,GACA,IAAAoP,EAAAuV,GAAAC,MAAArN,GACA,yBAAAnI,EACAA,EAAAhtB,KAAA46B,EAAAhd,GAGA,IAGAy9B,kBAAA,SAAAzgB,GACA,OAAA2H,GAAAC,MAAAxX,QAAAhrB,KAAA46B,EAAA,CAAkD6G,WAAA,KAGlDjW,eAAA,SAAAhB,GACA,IACAQ,EADAhrB,KACAtB,KAAA6sB,SAAAf,GACAQ,EAAAswB,QACAtwB,EAAAswB,MAAA,IAGA,IAAAxwB,EAAAE,EAAAswB,MANAt7C,KAMA6C,IAaA,OAZAioB,IACAA,EAAAE,EAAAswB,MARAt7C,KAQA6C,IAAA,CACA9D,KAAA,KACAL,KAAA,GACAssB,QAAA,KACAoN,WAAA,KACApR,OAAA,KACAkE,QAAA,KACAG,QAAA,OAIAP,GAGAgV,uBAAA,WAEA,IADA,IAAAxR,EAAA,EACArqB,EAAA,EAAAqZ,EAAAtd,KAAAtB,KAAA6sB,SAAA5vB,OAAmDsI,EAAAqZ,IAAUrZ,EAC7DjE,KAAAm3B,iBAAAlzB,IACAqqB,IAGA,OAAAA,GAGA6I,iBAAA,SAAA3M,GACA,IAAAM,EAAA9qB,KAAAwrB,eAAAhB,GAIA,wBAAAM,EAAA9D,QAAA8D,EAAA9D,QAAAhnB,KAAAtB,KAAA6sB,SAAAf,GAAAxD,QAGAu0B,eAAA,WACA,OAAAv7C,KAAA4d,QAAAuc,eAAAn6B,OAMAi6C,mBAAA,SAAAzvB,GACA,IAAA3nB,EAAA7C,KAAA6C,GACAmoB,EAAAhrB,KAAAtB,KAAA6sB,SAAAf,GACAM,EAAAE,EAAAswB,OAAAtwB,EAAAswB,MAAAz4C,GAEAioB,IACAA,EAAAsN,WAAAnM,iBACAjB,EAAAswB,MAAAz4C,KAIAopB,QAAA,WACA,IAEAhoB,EAAAqZ,EAFAkB,EAAAxe,KACA4mB,EAAApI,EAAAoI,OAMA,IAHApI,EAAA3e,OAGAoE,EAAA,EAAAqZ,EAAAkB,EAAA9f,KAAA6sB,SAAA5vB,OAA6CsI,EAAAqZ,IAAUrZ,EACvDua,EAAAy7B,mBAAAh2C,GAGA2iB,IACApI,EAAAg9B,eACA90B,GAAAE,OAAA/E,MAAArD,GACAisB,GAAAkB,eAAAntB,EAAAuD,KACAvD,EAAAoI,OAAA,KACApI,EAAAuD,IAAA,MAGAsqB,GAAAQ,OAAAruB,EAAA,kBAEAw5B,GAAAI,UAAA55B,EAAA3b,KAGA44C,cAAA,WACA,OAAAz7C,KAAA4mB,OAAA80B,UAAAp7C,MAAAN,KAAA4mB,OAAAlrB,YAGAi9C,YAAA,WACA,IAAAn6B,EAAAxe,KACAwe,EAAA41B,QAAA,IAAAiD,GAAA,CACAjrB,OAAA5N,EACAm9B,eAAAn9B,EACA0N,MAAA1N,EAAA9f,KACAo7B,SAAAtb,EAAAZ,QAAAsb,UACG1a,IAMH+5B,WAAA,WACA,IAAA/5B,EAAAxe,KACAsqB,EAAA9L,EAAAo9B,WAAA,GACAzxB,EAAA,WACA3L,EAAAq9B,aAAAv7C,MAAAke,EAAA9iB,YAGAgrB,GAAA5J,KAAA0B,EAAAZ,QAAA+5B,OAAA,SAAA54C,GACA0rC,GAAAlD,iBAAA/oB,EAAAzf,EAAAorB,GACAG,EAAAvrB,GAAAorB,IAKA3L,EAAAZ,QAAAk6B,aACA3tB,EAAA,WACA3L,EAAAg6B,UAGA/N,GAAAlD,iBAAA/oB,EAAA,SAAA2L,GACAG,EAAAkuB,OAAAruB,IAOAqxB,aAAA,WACA,IAAAh9B,EAAAxe,KACAsqB,EAAA9L,EAAAo9B,WACAtxB,WAIA9L,EAAAo9B,WACAl1B,GAAA5J,KAAAwN,EAAA,SAAAH,EAAAprB,GACA0rC,GAAA7C,oBAAAppB,EAAAzf,EAAAorB,OAIA2xB,iBAAA,SAAAxuB,EAAA6H,EAAA4Y,GACA,IACArhB,EAAAzoB,EAAAqZ,EADA0P,EAAA+gB,EAAA,mCAGA,IAAA9pC,EAAA,EAAAqZ,EAAAgQ,EAAA3xB,OAAqCsI,EAAAqZ,IAAUrZ,GAC/CyoB,EAAAY,EAAArpB,KAEAjE,KAAAwrB,eAAAkB,EAAAL,eAAA+L,WAAApL,GAAAN,IAQAmvB,aAAA,SAAAjhB,GACA,IAAApc,EAAAxe,KACAo0C,EAAA51B,EAAA41B,QAEA,QAAA/H,GAAAQ,OAAAruB,EAAA,eAAAoc,IAAA,CAKApc,EAAA25B,iBAAA,EACA35B,EAAAi8B,iBAAA,KAEA,IAAAvH,EAAA10B,EAAA04B,YAAAtc,GAKAwZ,IACAlB,EAAAkB,EAAAhtB,OACAgtB,EAAA8C,YAAAtc,GACAsY,EAAAkB,EAAA8C,YAAAtc,IAGAyR,GAAAQ,OAAAruB,EAAA,cAAAoc,IAEA,IAAAmhB,EAAAv9B,EAAAi8B,iBAmBA,OAlBAsB,EAEAv9B,EAAA8J,OAAAyzB,GACG7I,IAAA10B,EAAAgL,YAEHhL,EAAA3e,OAIA2e,EAAA8J,OAAA,CACAO,SAAArK,EAAAZ,QAAAsX,MAAA2iB,kBACAzuB,MAAA,KAIA5K,EAAA25B,iBAAA,EACA35B,EAAAi8B,iBAAA,KAEAj8B,IASA04B,YAAA,SAAAtc,GACA,IAAApc,EAAAxe,KACA4d,EAAAY,EAAAZ,SAAA,GACAo+B,EAAAp+B,EAAAsX,MACAge,GAAA,EAqCA,OAnCA10B,EAAAg8B,WAAAh8B,EAAAg8B,YAAA,GAGA,aAAA5f,EAAA77B,KACAyf,EAAA80B,OAAA,GAEA90B,EAAA80B,OAAA90B,EAAA24B,0BAAAvc,EAAAohB,EAAA7mB,KAAA6mB,GAKAt1B,GAAA9J,SAAAgB,EAAAg6B,SAAAh6B,EAAAsX,MAAA0iB,QAAA,CAAAhd,EAAAuG,OAAA3iB,EAAA80B,QAAA90B,GAEA,YAAAoc,EAAA77B,MAAA,UAAA67B,EAAA77B,MACA6e,EAAA+c,SAEA/c,EAAA+c,QAAAl2B,KAAA+Z,EAAAoc,EAAAuG,OAAA3iB,EAAA80B,QAKA90B,EAAAg8B,WAAA7+C,QACA6iB,EAAAs9B,iBAAAt9B,EAAAg8B,WAAAwB,EAAA7mB,MAAA,GAIA3W,EAAA80B,OAAA33C,QAAAqgD,EAAA7mB,MACA3W,EAAAs9B,iBAAAt9B,EAAA80B,OAAA0I,EAAA7mB,MAAA,GAGA+d,GAAAxsB,GAAAvJ,YAAAqB,EAAA80B,OAAA90B,EAAAg8B,YAGAh8B,EAAAg8B,WAAAh8B,EAAA80B,OAEAJ,KASA8E,GAAAI,UAAA,GAEA,IAAA6D,GAAAjE,GAipBA,SAAAkE,KACA,UAAA/B,MACA,6GAsBA,SAAAgC,GAAAv+B,GACA5d,KAAA4d,WAAA,GA/pBAo6B,GAAAoE,WAAApE,GASAA,GAAAqE,MAAA,GASA31B,GAAA41B,YAAA7E,GASA/wB,GAAA61B,WAAAhF,GAuoBA7wB,GAAAtI,OAAA+9B,GAAA53C,UAAA,CAMAi4C,QAAAN,GASAO,MAAAP,GASAQ,OAAAR,GAUAtS,IAAAsS,GAUAS,KAAAT,GAUAU,QAAAV,GAQAW,MAAAX,GAWAY,QAAA,SAAAhkD,GACA,OAAAA,KAIAqjD,GAAAY,SAAA,SAAAC,GACAt2B,GAAAtI,OAAA+9B,GAAA53C,UAAAy4C,IAGA,IAEAC,GAAA,CACAC,MAHAf,IAUAgB,GAAA,CAKAC,WAAA,CAOAznC,OAAA,SAAA7c,GACA,OAAA4tB,GAAAviB,QAAArL,KAAA,GAAAA,GAWAumB,OAAA,SAAAg+B,EAAAxhC,EAAA+b,GAEA,IAAA1uB,EAAA0uB,EAAAj8B,OAAA,EAAAi8B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGA5uB,KAAAwpB,IAAAtpB,GAAA,GACAm0C,IAAAr0C,KAAAkB,MAAAmzC,KAEAn0C,EAAAm0C,EAAAr0C,KAAAkB,MAAAmzC,IAIA,IAAAC,EAAA52B,GAAA62B,MAAAv0C,KAAAwpB,IAAAtpB,IACAs0C,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAAz0C,KAAAC,IAAAD,KAAAwpB,IAAAoF,EAAA,IAAA5uB,KAAAwpB,IAAAoF,IAAAj8B,OAAA,KACA,GAAA8hD,EAAA,MACA,IAAAC,EAAAh3B,GAAA62B,MAAAv0C,KAAAwpB,IAAA6qB,IACAG,EAAAH,EAAAM,cAAA30C,KAAAkB,MAAAwzC,GAAA10C,KAAAkB,MAAAozC,QACK,CACL,IAAAM,GAAA,EAAA50C,KAAAkB,MAAAozC,GACAM,EAAA50C,KAAAC,IAAAD,KAAAD,IAAA60C,EAAA,OACAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAGAM,YAAA,SAAAT,EAAAxhC,EAAA+b,GACA,IAAAmmB,EAAAV,EAAAr0C,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAAF,KAEA,WAAAA,EACA,IACI,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAliC,OAAA+b,EAAAj8B,OAAA,EACJ0hD,EAAAM,gBAEA,MAKAK,GAAAt3B,GAAAjK,eACAE,GAAA+J,GAAA/J,sBA2DA,SAAAshC,GAAArmB,GACA,IACA3zB,EAAAqZ,EADA6Y,EAAA,GAGA,IAAAlyB,EAAA,EAAAqZ,EAAAsa,EAAAj8B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3CkyB,EAAA5yB,KAAAq0B,EAAA3zB,GAAAiyB,OAGA,OAAAC,EAoBA,SAAA+nB,GAAAz3B,EAAA03B,EAAAj4B,GACA,OAAAQ,GAAAviB,QAAAg6C,GACAz3B,GAAA03B,YAAA33B,EAAAP,EAAAi4B,GACA13B,EAAAkuB,YAAAwJ,GAAAl8B,MAxFAwD,GAAAR,KAAA,SACAia,SAAA,EACAjG,SAAA,OACA3D,QAAA,EAGAC,UAAA,CACA2J,SAAA,EACAmf,MAAA,qBACAxtB,UAAA,EACAytB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACArpB,iBAAA,EACArE,WAAA,GACAC,iBAAA,GAIA0tB,WAAA,CAEA5f,SAAA,EAGA6f,YAAA,GAGAhsB,QAAA,CACAzQ,IAAA,EACAE,OAAA,IAKAoV,MAAA,CACAyH,aAAA,EACA2f,YAAA,EACAC,YAAA,GACAC,QAAA,EACAnsB,QAAA,EACA/V,SAAA,EACAkiB,SAAA,EACAigB,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAziC,SAAAugC,GAAAC,WAAAznC,OACA2pC,MAAA,GACAC,MAAA,MAsCA,IAAAC,GAAAt3B,GAAA9J,OAAA,CAOA8mB,WAAA,WAEA,OACA7iB,KAFAriB,KAEAy/C,aAAA,EACAn9B,IAHAtiB,KAGA0/C,YAAA,EACAn9B,MAJAviB,KAIA2/C,cAAA,EACAn9B,OALAxiB,KAKA4/C,eAAA,IAQA/nB,SAAA,WACA,OAAA73B,KAAA6/C,QAOAhG,kBAAA,WACA,IAAAjiB,EAAA53B,KAAA4d,QAAAga,MAWA,QAAAh2B,KAVA,IAAAg2B,EAAA0nB,QACA1nB,EAAA0nB,MAAA,CACApgB,SAAA,KAGA,IAAAtH,EAAA2nB,QACA3nB,EAAA2nB,MAAA,CACArgB,SAAA,IAGAtH,EACA,UAAAh2B,GAAA,UAAAA,SACA,IAAAg2B,EAAA0nB,MAAA19C,KACAg2B,EAAA0nB,MAAA19C,GAAAg2B,EAAAh2B,SAEA,IAAAg2B,EAAA2nB,MAAA39C,KACAg2B,EAAA2nB,MAAA39C,GAAAg2B,EAAAh2B,MAKAk+C,aAAA,WACAp5B,GAAA9J,SAAA5c,KAAA4d,QAAAkiC,aAAA,CAAA9/C,QAGAgsB,OAAA,SAAA+zB,EAAAC,EAAAC,GACA,IACAh8C,EAAAqZ,EAAA6Y,EAAAD,EAAA0B,EAAAumB,EADA3/B,EAAAxe,KA4DA,IAxDAwe,EAAAshC,eAGAthC,EAAAuhC,WACAvhC,EAAAwhC,YACAxhC,EAAAyhC,QAAAv5B,GAAAtI,OAAA,CACAiE,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACGy9B,GAEHzhC,EAAA0hC,eAAA,EACA1hC,EAAA2hC,kBAAA,EACA3hC,EAAA4hC,iBAAA5hC,EAAA4hC,kBAAA,GAGA5hC,EAAA6hC,sBACA7hC,EAAA8hC,gBACA9hC,EAAA+hC,qBAGA/hC,EAAAgiC,mBACAhiC,EAAAiiC,sBACAjiC,EAAAkiC,kBASAliC,EAAAmiC,mBAIA/oB,EAAApZ,EAAAoiC,cAAA,GAGAhpB,EAAApZ,EAAAqiC,gBAAAjpB,MAEApZ,EAAAsiC,8BAKA3qB,EAAA3X,EAAAuiC,qBAAAnpB,IAAApZ,EAAAoZ,MAEApZ,EAAAwiC,6BAEAxiC,EAAAoZ,MAAAzB,EAKAlyB,EAAA,EAAAqZ,EAAA6Y,EAAAx6B,OAAmCsI,EAAAqZ,IAAUrZ,EAC7CiyB,EAAAC,EAAAlyB,IACAk6C,EAAAvmB,EAAA3zB,IAOAk6C,EAAAjoB,QALA0B,EAAAr0B,KAAA46C,EAAA,CACAjoB,QACAqpB,OAAA,IAoBA,OAbA/gC,EAAAqhC,OAAAjoB,EAGApZ,EAAAyiC,8BACAziC,EAAA0iC,wBACA1iC,EAAA2iC,6BAEA3iC,EAAA4iC,YACA5iC,EAAA6iC,MACA7iC,EAAA8iC,WAEA9iC,EAAA+iC,cAEA/iC,EAAAid,SAGA8lB,YAAA,WACA76B,GAAA9J,SAAA5c,KAAA4d,QAAA2jC,YAAA,CAAAvhD,QAKAqgD,oBAAA,WACA35B,GAAA9J,SAAA5c,KAAA4d,QAAAyiC,oBAAA,CAAArgD,QAEAsgD,cAAA,WACA,IAAA9hC,EAAAxe,KAEAwe,EAAA+X,gBAEA/X,EAAAyD,MAAAzD,EAAAuhC,SACAvhC,EAAA6D,KAAA,EACA7D,EAAA+D,MAAA/D,EAAAyD,QAEAzD,EAAA0D,OAAA1D,EAAAwhC,UAGAxhC,EAAA8D,IAAA,EACA9D,EAAAgE,OAAAhE,EAAA0D,QAIA1D,EAAAihC,YAAA,EACAjhC,EAAAkhC,WAAA,EACAlhC,EAAAmhC,aAAA,EACAnhC,EAAAohC,cAAA,GAEAW,mBAAA,WACA75B,GAAA9J,SAAA5c,KAAA4d,QAAA2iC,mBAAA,CAAAvgD,QAIAwgD,iBAAA,WACA95B,GAAA9J,SAAA5c,KAAA4d,QAAA4iC,iBAAA,CAAAxgD,QAEAygD,oBAAA/5B,GAAAxK,KACAwkC,gBAAA,WACAh6B,GAAA9J,SAAA5c,KAAA4d,QAAA8iC,gBAAA,CAAA1gD,QAIA2gD,iBAAA,WACAj6B,GAAA9J,SAAA5c,KAAA4d,QAAA+iC,iBAAA,CAAA3gD,QAEA4gD,WAAAl6B,GAAAxK,KACA2kC,gBAAA,SAAAjpB,GACA,IAAApZ,EAAAxe,KAEA,OAAA0mB,GAAAviB,QAAAyzB,MAAAj8B,OACA+qB,GAAA9J,SAAA4B,EAAAZ,QAAAijC,gBAAA,CAAAriC,EAAAoZ,KAGApZ,EAAAoZ,MAAAlR,GAAA9J,SAAA4B,EAAAZ,QAAAijC,gBAAA,CAAAriC,IAAAoZ,SAAApZ,EAAAoZ,MACAA,IAGAkpB,4BAAA,WACAp6B,GAAA9J,SAAA5c,KAAA4d,QAAAkjC,4BAAA,CAAA9gD,QAEA+gD,qBAAA,WACA,IAEAS,EAFAxhD,KAEA4d,QAAAga,MAFA53B,KAGA43B,MAHA53B,KAGA43B,MAAAna,IAAA+jC,EAAAC,cAAAD,EAAA5kC,SAAA5c,OAEAghD,2BAAA,WACAt6B,GAAA9J,SAAA5c,KAAA4d,QAAAojC,2BAAA,CAAAhhD,QAKAihD,4BAAA,WACAv6B,GAAA9J,SAAA5c,KAAA4d,QAAAqjC,4BAAA,CAAAjhD,QAEAkhD,sBAAA,WACA,IAAA1iC,EAAAxe,KACAymB,EAAAjI,EAAAuD,IACAy/B,EAAAhjC,EAAAZ,QAAAga,MACAzB,EAAA8nB,GAAAz/B,EAAAqhC,QAIA6B,EAAAh7B,GAAA9I,QAAAkI,WAAA07B,GACA/6B,EAAAP,KAAAw7B,EAAAprC,OAEA,IAAAqrC,EAAAH,EAAAxC,aAAA,EAEA,GAAA7oB,EAAAx6B,QAAA6iB,EAAAZ,QAAAshB,SAAA1gB,EAAA+X,eASA,IARA,IAEAqrB,EAFAC,EAAAn7B,GAAA03B,YAAA33B,EAAAi7B,EAAAprC,OAAA6f,EAAA3X,EAAA4hC,kBACA0B,EAAAD,EAIAE,EAAAvjC,EAAAsZ,gBAAA,GAAAtZ,EAAAsZ,gBAAA,KAGAgqB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAAt7B,GAAAu7B,UAAAN,GAIA,GAHAC,EAAA54C,KAAAuC,IAAAy2C,GACAh5C,KAAAwC,IAAAw2C,GAEAH,EAAArjC,EAAAwhC,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIArjC,EAAAmjC,iBAEAR,2BAAA,WACAz6B,GAAA9J,SAAA5c,KAAA4d,QAAAujC,2BAAA,CAAAnhD,QAKAohD,UAAA,WACA16B,GAAA9J,SAAA5c,KAAA4d,QAAAwjC,UAAA,CAAAphD,QAEAqhD,IAAA,WACA,IAAA7iC,EAAAxe,KAEAy7B,EAAAjd,EAAAid,QAAA,CACAxZ,MAAA,EACAC,OAAA,GAGAiU,EAAA8nB,GAAAz/B,EAAAqhC,QAEAvkB,EAAA9c,EAAAZ,QACA4jC,EAAAlmB,EAAA1D,MACAsqB,EAAA5mB,EAAAwjB,WACAqD,EAAA7mB,EAAA/F,UACA2J,EAAA1gB,EAAA4jC,aACAnpB,EAAAqC,EAAArC,SACA1C,EAAA/X,EAAA+X,eAEA8rB,EAAA37B,GAAA9I,QAAAkI,WACA47B,EAAAW,EAAAb,GACA/C,EAAAnjB,EAAA/F,UAAAkpB,eAkBA,GAbAhjB,EAAAxZ,MAFAsU,EAEA/X,EAAA8jC,cAAA9jC,EAAAuhC,SAAAvhC,EAAAyhC,QAAA59B,KAAA7D,EAAAyhC,QAAA19B,MAAA/D,EAAAuhC,SAEA7gB,GAAAijB,EAAA3D,UAAAC,EAAA,EAKAhjB,EAAAvZ,OADAqU,EACA2I,GAAAijB,EAAA3D,UAAAC,EAAA,EAEAjgC,EAAAwhC,UAIAkC,EAAAhjB,WAAA,CACA,IAAAqjB,EAAAF,EAAAH,GACAM,EAAA97B,GAAA9I,QAAAiI,UAAAq8B,EAAAnvB,SACA0vB,EAAAF,EAAAl8B,WAAAm8B,EAAAtgC,OAEAqU,EACAkF,EAAAvZ,QAAAugC,EAEAhnB,EAAAxZ,OAAAwgC,EAKA,GAAAjB,EAAAtiB,WAAA,CACA,IAAAwjB,EAAAh8B,GAAA03B,YAAA5/B,EAAAuD,IAAA2/B,EAAAprC,OAAA6f,EAAA3X,EAAA4hC,kBACAuC,EAAAj8B,GAAAk8B,mBAAAzsB,GACA0sB,EAAA,GAAAnB,EAAAx+B,KACA4/B,EAAAtkC,EAAAZ,QAAAga,MAAA7E,QAMA,GAHAvU,EAAA0hC,eAAAyC,EACAnkC,EAAA2hC,kBAAAuC,EAEAnsB,EAAA,CACA,IAAAyrB,EAAAt7B,GAAAu7B,UAAAzjC,EAAAmjC,eACAC,EAAA54C,KAAAuC,IAAAy2C,GACAe,EAAA/5C,KAAAwC,IAAAw2C,GAGAgB,EAAAD,EAAAL,EACAhB,EAAAr7B,WAAAs8B,EACAE,EAEApnB,EAAAvZ,OAAAlZ,KAAAD,IAAAyV,EAAAwhC,UAAAvkB,EAAAvZ,OAAA8gC,EAAAF,GAEAtkC,EAAAuD,IAAAmE,KAAAw7B,EAAAprC,OACA,IAIAmpC,EAAAE,EAJAsD,EAAA/E,GAAA1/B,EAAAuD,IAAAoU,EAAA,GAAAurB,EAAAprC,QACA4sC,EAAAhF,GAAA1/B,EAAAuD,IAAAoU,IAAAx6B,OAAA,GAAA+lD,EAAAprC,QACA6sC,EAAA3kC,EAAAsZ,gBAAA,GAAAtZ,EAAA6D,KACA+gC,EAAA5kC,EAAA+D,MAAA/D,EAAAsZ,gBAAA3B,EAAAx6B,OAAA,GAKA,IAAA6iB,EAAAmjC,eACAlC,EAAA,WAAAxmB,EAAA2oB,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAA1mB,EAAA2oB,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAEA1kC,EAAAihC,YAAAz2C,KAAAC,IAAAw2C,EAAA0D,EAAA,KACA3kC,EAAAmhC,aAAA32C,KAAAC,IAAA02C,EAAAyD,EAAA,UAIA5B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGApnB,EAAAxZ,MAAAjZ,KAAAD,IAAAyV,EAAAuhC,SAAAtkB,EAAAxZ,MAAAygC,GAEAlkC,EAAAkhC,WAAAgC,EAAAx+B,KAAA,EACA1E,EAAAohC,cAAA8B,EAAAx+B,KAAA,EAIA1E,EAAA6kC,gBAEA7kC,EAAAyD,MAAAwZ,EAAAxZ,MACAzD,EAAA0D,OAAAuZ,EAAAvZ,QAOAmhC,cAAA,WACA,IAAA7kC,EAAAxe,KACAwe,EAAAyhC,UACAzhC,EAAAihC,YAAAz2C,KAAAC,IAAAuV,EAAAihC,YAAAjhC,EAAAyhC,QAAA59B,KAAA,GACA7D,EAAAkhC,WAAA12C,KAAAC,IAAAuV,EAAAkhC,WAAAlhC,EAAAyhC,QAAA39B,IAAA,GACA9D,EAAAmhC,aAAA32C,KAAAC,IAAAuV,EAAAmhC,aAAAnhC,EAAAyhC,QAAA19B,MAAA,GACA/D,EAAAohC,cAAA52C,KAAAC,IAAAuV,EAAAohC,cAAAphC,EAAAyhC,QAAAz9B,OAAA,KAIA8+B,SAAA,WACA56B,GAAA9J,SAAA5c,KAAA4d,QAAA0jC,SAAA,CAAAthD,QAIAu2B,aAAA,WACA,cAAAv2B,KAAA4d,QAAAqb,UAAA,WAAAj5B,KAAA4d,QAAAqb,UAEAqpB,YAAA,WACA,OAAAtiD,KAAA4d,QAAA,WAIAsa,cAAA,SAAAorB,GAEA,GAAA58B,GAAAtK,cAAAknC,GACA,OAAAzpB,IAGA,qBAAAypB,gBAAA9mC,UAAAD,SAAA+mC,GACA,OAAAzpB,IAGA,GAAAypB,EACA,GAAAtjD,KAAAu2B,gBACA,QAAA36B,IAAA0nD,EAAA75C,EACA,OAAAzJ,KAAAk4B,cAAAorB,EAAA75C,QAEI,QAAA7N,IAAA0nD,EAAA55C,EACJ,OAAA1J,KAAAk4B,cAAAorB,EAAA55C,GAKA,OAAA45C,GAQAtP,iBAAAttB,GAAAxK,KASAub,iBAAA/Q,GAAAxK,KAOAqnC,iBAAA78B,GAAAxK,KAMA4b,gBAAA,SAAAjc,GACA,IAAA2C,EAAAxe,KACAs1B,EAAA9W,EAAAZ,QAAA0X,OACA,GAAA9W,EAAA+X,eAAA,CACA,IAAAitB,EAAAhlC,EAAAyD,OAAAzD,EAAAihC,YAAAjhC,EAAAmhC,cACAoC,EAAAyB,EAAAx6C,KAAAC,IAAAuV,EAAAqhC,OAAAlkD,QAAA25B,EAAA,QACAmuB,EAAA1B,EAAAlmC,EAAA2C,EAAAihC,YAEAnqB,IACAmuB,GAAA1B,EAAA,GAGA,IAAA2B,EAAAllC,EAAA6D,KAAAohC,EAEA,OADAC,GAAAllC,EAAA8jC,cAAA9jC,EAAAyhC,QAAA59B,KAAA,EAGA,IAAAshC,EAAAnlC,EAAA0D,QAAA1D,EAAAkhC,WAAAlhC,EAAAohC,eACA,OAAAphC,EAAA8D,IAAAzG,GAAA8nC,GAAAnlC,EAAAqhC,OAAAlkD,OAAA,KAOAi+B,mBAAA,SAAAgqB,GACA,IAAAplC,EAAAxe,KACA,GAAAwe,EAAA+X,eAAA,CACA,IAAAitB,EAAAhlC,EAAAyD,OAAAzD,EAAAihC,YAAAjhC,EAAAmhC,cACAkE,EAAAL,EAAAI,EAAAplC,EAAAihC,YAEAiE,EAAAllC,EAAA6D,KAAAwhC,EAEA,OADAH,GAAAllC,EAAA8jC,cAAA9jC,EAAAyhC,QAAA59B,KAAA,EAGA,OAAA7D,EAAA8D,IAAAshC,EAAAplC,EAAA0D,QAOAoU,aAAA,WACA,OAAAt2B,KAAAy3B,iBAAAz3B,KAAA8jD,iBAGAA,aAAA,WACA,IACA/6C,EADA/I,KACA+I,IACAE,EAFAjJ,KAEAiJ,IAEA,OAJAjJ,KAIAq/B,YAAA,EACAt2B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,GAOAg7C,UAAA,SAAAnsB,GACA,IAiBA3zB,EAAAk6C,EAjBA3/B,EAAAxe,KACAu2B,EAAA/X,EAAA+X,eACAytB,EAAAxlC,EAAAZ,QAAAga,MAAA0nB,MACA2E,EAAArsB,EAAAj8B,OACAuoD,GAAA,EACAC,EAAAH,EAAAI,cAIAC,EAAA7lC,EAAA8lC,aAAAL,EAAA,GAGAM,EAAAhuB,EACA/X,EAAAyD,OAAAzD,EAAAihC,YAAAjhC,EAAAmhC,cACAnhC,EAAA0D,QAAA1D,EAAAkhC,WAAAlhC,EAAAgmC,eAEArpC,EAAA,GAaA,IAVAkpC,EAAAE,IACAL,EAAA,EAAAl7C,KAAAkB,MAAAm6C,EAAAE,IAKAN,EAAAE,IACAD,EAAAl7C,KAAAC,IAAAi7C,EAAA,EAAAl7C,KAAAkB,MAAA+5C,EAAAE,KAGAlgD,EAAA,EAAaA,EAAAggD,EAAehgD,IAC5Bk6C,EAAAvmB,EAAA3zB,GAEAigD,EAAA,GAAAjgD,EAAAigD,EAAA,UAEA/F,EAAAjoB,MAEA/a,EAAA5X,KAAA46C,GAEA,OAAAhjC,GAMAmpC,UAAA,WACA,IAAA9lC,EAAAxe,KACAu2B,EAAA/X,EAAA+X,eACAytB,EAAAxlC,EAAAZ,QAAAga,MAAA0nB,MAGAmF,EAAA/9B,GAAAu7B,UAAAzjC,EAAAmjC,eACAp2C,EAAAvC,KAAAwpB,IAAAxpB,KAAAuC,IAAAk5C,IACAj5C,EAAAxC,KAAAwpB,IAAAxpB,KAAAwC,IAAAi5C,IAEA1xB,EAAAixB,EAAA5E,iBAAA,EACAj2C,EAAAqV,EAAA2hC,kBAAAptB,GAAA,EAEA2uB,EAAAh7B,GAAA9I,QAAAkI,WAAAk+B,GACA59C,EAAAoY,EAAA0hC,eAAAwB,EAAAr7B,WAAA0M,GAAA,EAGA,OAAAwD,EACAnwB,EAAAmF,EAAApC,EAAAqC,EAAArC,EAAAoC,EAAAnF,EAAAoF,EACApF,EAAAoF,EAAArC,EAAAoC,EAAAnF,EAAAmF,EAAApC,EAAAqC,GAMA42C,WAAA,WACA,IAGAn+C,EAAAqZ,EAAAwN,EAFAhJ,EADA9hB,KACA8hB,MACAod,EAFAl/B,KAEA4d,QAAAshB,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAAj7B,EAAA,EAAAqZ,EAAAwE,EAAApjB,KAAA6sB,SAAA5vB,OAAgDsI,EAAAqZ,IAAUrZ,EAC1D,GAAA6d,EAAAqV,iBAAAlzB,MACA6mB,EAAAhJ,EAAA0J,eAAAvnB,IACAinB,UAbAlrB,KAaA6C,IAAAioB,EAAAO,UAbArrB,KAaA6C,IACA,SAKA,UAOA0qB,KAAA,SAAAyF,GACA,IAAAxU,EAAAxe,KACA4d,EAAAY,EAAAZ,QAEA,GAAAY,EAAA4jC,aAAA,CAIA,IAmCAsC,EAAAC,EAAAC,EAnCA9iC,EAAAtD,EAAAsD,MACA2E,EAAAjI,EAAAuD,IACAgE,EAAAN,GAAAO,OACAb,EAAAY,EAAAZ,iBACA6+B,EAAApmC,EAAAga,MAAA0nB,MACAuF,EAAAjnC,EAAAga,MAAA2nB,OAAAyE,EACAzuB,EAAA3X,EAAA2X,UACAupB,EAAAlhC,EAAAkhC,WACA7lB,EAAArb,EAAAqb,SAEA6rB,EAAA,IAAAtmC,EAAAmjC,cACAoD,EAAAf,EAAA9E,OACA3oB,EAAA/X,EAAA+X,eAEA8rB,EAAA37B,GAAA9I,QAAAkI,WACA8R,EAAAosB,EAAA9kB,SAAA8kB,EAAA7E,SAAA3gC,EAAAulC,UAAAvlC,EAAAqZ,YAAArZ,EAAAqZ,WACAmtB,EAAAhH,GAAAgG,EAAAiB,UAAA9/B,GACAu8B,EAAAW,EAAA2B,GACA39B,EAAAq7B,EAAAr7B,WACA6+B,EAAAlH,GAAA6G,EAAAI,UAAA9/B,GACAggC,EAAA9C,EAAAwC,GACA/B,EAAAkB,EAAAjxB,QACAssB,EAAA2E,EAAA3E,YAEA+F,EAAA7vB,EAAAipB,UAAAjpB,EAAAkpB,eAAA,EAEA4G,EAAArH,GAAAc,EAAAmG,UAAA9/B,GACAo9B,EAAAF,EAAAvD,GACA0D,EAAA97B,GAAA9I,QAAAiI,UAAAi5B,EAAA/rB,SACAuyB,EAAA5+B,GAAAu7B,UAAAzjC,EAAAmjC,eAEA4D,EAAA,GAEAC,EAAAjwB,EAAA+oB,WAAA3hC,GAAA4Y,EAAA1E,UAAA,OACA40B,EAAA/+B,GAAAg/B,YAkLA,GA/KA,QAAAzsB,GACAyrB,EAAAe,EAAA3jC,EAAAtD,EAAAgE,OAAAgjC,GACAb,EAAAnmC,EAAAgE,OAAA4iC,EACAR,EAAAF,EAAAc,EAAA,GACG,WAAAvsB,GACHyrB,EAAAe,EAAA3jC,EAAAtD,EAAA8D,IAAAkjC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAApmC,EAAA8D,IAAA8iC,GACG,SAAAnsB,GACHyrB,EAAAe,EAAA3jC,EAAAtD,EAAA+D,MAAAijC,GACAb,EAAAnmC,EAAA+D,MAAA6iC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAA3jC,EAAAtD,EAAA6D,KAAAmjC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAApmC,EAAA6D,KAAA+iC,GAKA1+B,GAAA5J,KAAA8a,EAAA,SAAAumB,EAAAtiC,GAEA,IAAA6K,GAAAtK,cAAA+hC,EAAAjoB,OAAA,CAIA,IACArF,EAAA80B,EAAAx0B,EAAAC,EAeAw0B,EAAAC,EAAAC,EAAAC,EAAA3yB,EAAAE,EAAAD,EAAAroB,EAAAg7C,EAAAC,EAAAC,EAAA/P,EAhBAjgB,EAAAioB,EAAAjoB,MAEAra,IAAA2C,EAAA2nC,eAAAvoC,EAAA0X,SAAAC,EAAAC,iBAEA3E,EAAA0E,EAAAmpB,cACAiH,EAAApwB,EAAAopB,cACAxtB,EAAAoE,EAAAqpB,oBAAA,GACAxtB,EAAAmE,EAAAspB,0BAAA,IAEAhuB,EAAAlU,GAAA4Y,EAAA1E,UAAAhV,GACA8pC,EAAAhpC,GAAA4Y,EAAA8oB,MAAAxiC,GACAsV,EAAAoE,EAAApE,YAAA,GACAC,EAAAmE,EAAAnE,kBAAA,GAKA,IAAAie,EAAA3oB,GAAAviB,QAAA+xB,KAAAv6B,OAAA,EACAyqD,EA/tBA,SAAAzuC,EAAAkE,EAAA2Z,GACA,IAAA4wB,EAAAzuC,EAAAmgB,gBAAAjc,GAaA,OAXA2Z,IACA,IAAA7d,EAAAkgB,WAAAl8B,OACAyqD,GAAAzuC,EAAA4e,eACAvtB,KAAAC,IAAAm9C,EAAAzuC,EAAA0K,KAAA1K,EAAA4K,MAAA6jC,GACAp9C,KAAAC,IAAAm9C,EAAAzuC,EAAA2K,IAAA3K,EAAA6K,OAAA4jC,GAEAA,GADG,IAAAvqC,GACHlE,EAAAmgB,gBAAA,GAAAsuB,GAAA,GAEAA,EAAAzuC,EAAAmgB,gBAAAjc,EAAA,OAGAuqC,EAitBAC,CAAA7nC,EAAA3C,EAAA0Z,EAAAC,iBAEA,GAAAe,EAAA,CACA,IAAA+vB,EAAAlB,EAAAtC,EAEAsD,EAAA5nC,EAAA6D,KA/BA,OAgCAsjC,EAAA,iBAGAC,EAAAE,EAAA1yB,EAAAC,EAAAoyB,EAAA3jC,EAAAskC,EAAAv1B,GACAg1B,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAAxnC,EAAAsZ,gBAAAjc,GAAAwjC,EAEA,QAAApmB,GACA3F,EAAAmyB,EAAA3jC,EAAAkR,EAAA1Q,IAAAkjC,KAAA,EACAx6C,EAAAgoB,EAAAxQ,OACA0jC,IAAApB,EAAA,MAAAzV,GAAAhpB,EACA8vB,EAAA2O,EAAA,gBACAmB,EAAAznC,EAAAgE,OAAA8jC,IAEAhzB,EAAAN,EAAA1Q,IACAtX,EAAAy6C,EAAA3jC,EAAAkR,EAAAxQ,OAAAgjC,KAAA,EACAU,GAAApB,EAAA,MAAAz+B,EACA8vB,EAAA2O,EAAA,iBACAmB,EAAAznC,EAAA8D,IAAAgkC,OAEI,CACJ,IAAAC,GAAAxB,EAAA,EAAAK,GAAAtC,EAEAsD,EAAA5nC,EAAA8D,IAxDA,OAyDAqjC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAAzyB,EAAAtoB,EAAAy6C,EAAA3jC,EAAAskC,EAAAv1B,GACAo1B,EAAAznC,EAAAsZ,gBAAAjc,GAAAwjC,EACA6G,GAAA,EAAA7W,GAAAhpB,EAAA,EAEA,SAAA4S,GACA7F,EAAAqyB,EAAA3jC,EAAAkR,EAAA3Q,KAAAmjC,KAAA,EACAnyB,EAAAL,EAAAzQ,MACA4zB,EAAA4O,EAAA,eACAiB,EAAAxnC,EAAA+D,MAAAgkC,IAEAnzB,EAAAJ,EAAA3Q,KACAgR,EAAAoyB,EAAA3jC,EAAAkR,EAAAzQ,MAAAijC,KAAA,EACArP,EAAA4O,EAAA,eACAiB,EAAAxnC,EAAA6D,KAAAkkC,GAIAhB,EAAAhiD,KAAA,CACAqiD,MACAC,MACAC,MACAC,MACA3yB,KACAE,KACAD,KACAroB,KACAg7C,SACAC,SACAO,QAAA31B,EACA41B,QAAAd,EACAe,aAAAv1B,EACAw1B,mBAAAv1B,EACArO,UAAA,EAAAuiC,EACApvB,QACAqpB,MAAApB,EAAAoB,MACA2G,aACA/P,iBAKAzvB,GAAA5J,KAAAyoC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA2BA,GAzBAlxB,EAAA2J,SAAAsnB,GAAAC,IACAhgC,EAAA1C,OACA0C,EAAAoK,UAAA21B,EACA//B,EAAAsK,YAAA01B,EACAhgC,EAAAwL,cACAxL,EAAAwL,YAAA20B,EAAAF,cACAjgC,EAAAyL,eAAA00B,EAAAD,oBAGAlgC,EAAApD,YAEAkS,EAAAipB,YACA/3B,EAAAhE,OAAAmkC,EAAAhB,IAAAgB,EAAAf,KACAp/B,EAAAnD,OAAAsjC,EAAAd,IAAAc,EAAAb,MAGAxwB,EAAAgpB,kBACA93B,EAAAhE,OAAAmkC,EAAAxzB,GAAAwzB,EAAAtzB,IACA7M,EAAAnD,OAAAsjC,EAAAvzB,GAAAuzB,EAAA57C,KAGAyb,EAAAhD,SACAgD,EAAAvC,WAGA8/B,EAAA9kB,QAAA,CAEAzY,EAAA1C,OACA0C,EAAAogC,UAAAD,EAAAZ,OAAAY,EAAAX,QACAx/B,EAAA/L,OAAAksC,EAAA7jC,UACA0D,EAAAP,KAAA0gC,EAAArH,MAAA4F,EAAA7uC,OAAAorC,EAAAprC,OACAmQ,EAAAmK,UAAAg2B,EAAArH,MAAA2F,EAAAF,EACAv+B,EAAA2vB,aAAA,SACA3vB,EAAA0vB,UAAAyQ,EAAAzQ,UAEA,IAAAjgB,EAAA0wB,EAAA1wB,MACAxsB,EAAAk9C,EAAAV,WACA,GAAAx/B,GAAAviB,QAAA+xB,GACA,QAAAjyB,EAAA,EAAoBA,EAAAiyB,EAAAv6B,SAAkBsI,EAEtCwiB,EAAA4vB,SAAA,GAAAngB,EAAAjyB,GAAA,EAAAyF,GACAA,GAAA2c,OAGAI,EAAA4vB,SAAAngB,EAAA,EAAAxsB,GAEA+c,EAAAvC,aAIA46B,EAAA5f,QAAA,CAEA,IAAA4nB,EACAC,EACAhkC,EAAA,EACAikC,EAAAzE,EAAAl8B,WAAA,EAEA,GAAAkQ,EACAuwB,EAAAtoC,EAAA6D,MAAA7D,EAAA+D,MAAA/D,EAAA6D,MAAA,EACA0kC,EAAA,WAAA9tB,EACAza,EAAAgE,OAAAwkC,EAAAxE,EAAAhgC,OACAhE,EAAA8D,IAAA0kC,EAAAxE,EAAAlgC,QACI,CACJ,IAAA2kC,EAAA,SAAAhuB,EACA6tB,EAAAG,EACAzoC,EAAA6D,KAAA2kC,EAAAxE,EAAAlgC,IACA9D,EAAA+D,MAAAykC,EAAAxE,EAAAlgC,IACAykC,EAAAvoC,EAAA8D,KAAA9D,EAAAgE,OAAAhE,EAAA8D,KAAA,EACAS,EAAAkkC,GAAA,GAAAj+C,KAAAoC,GAAA,GAAApC,KAAAoC,GAGAqb,EAAA1C,OACA0C,EAAAogC,UAAAC,EAAAC,GACAtgC,EAAA/L,OAAAqI,GACA0D,EAAA0vB,UAAA,SACA1vB,EAAA2vB,aAAA,SACA3vB,EAAAmK,UAAAy0B,EACA5+B,EAAAP,KAAAq8B,EAAAjsC,OACAmQ,EAAA4vB,SAAAyI,EAAAC,YAAA,KACAt4B,EAAAvC,UAGA,GAAAshC,EAAA,CAEA,IAEApyB,EAAAC,EAAAC,EAAAtoB,EAFAk8C,EAAA1B,EACA2B,EAAAxqC,GAAA4Y,EAAA1E,UAAA+G,EAAAj8B,OAAA,KAGA46B,GACAnD,EAAAqyB,EAAA3jC,EAAAtD,EAAA6D,KAAA6kC,KAAA,EACA7zB,EAAAoyB,EAAA3jC,EAAAtD,EAAA+D,MAAA4kC,KAAA,EACA7zB,EAAAtoB,EAAA05C,IAEApxB,EAAAmyB,EAAA3jC,EAAAtD,EAAA8D,IAAA4kC,KAAA,EACAl8C,EAAAy6C,EAAA3jC,EAAAtD,EAAAgE,OAAA2kC,KAAA,EACA/zB,EAAAC,EAAAqxB,GAGAj+B,EAAAoK,UAAA20B,EACA/+B,EAAAsK,YAAApU,GAAA4Y,EAAA8oB,MAAA,GACA53B,EAAApD,YACAoD,EAAAhE,OAAA2Q,EAAAE,GACA7M,EAAAnD,OAAA+P,EAAAroB,GACAyb,EAAAhD,cASA2jC,GAAA5H,GAAAphC,OAAA,CAMAipC,UAAA,WACA,IAAA3oD,EAAAsB,KAAA8hB,MAAApjB,KACA,OAAAsB,KAAA4d,QAAAuY,SAAAn2B,KAAAu2B,eAAA73B,EAAA4oD,QAAA5oD,EAAA6oD,UAAA7oD,EAAAy3B,QAGAsqB,oBAAA,WACA,IAIA92B,EAJAnL,EAAAxe,KACAm2B,EAAA3X,EAAA6oC,YACA7oC,EAAAgpC,SAAA,EACAhpC,EAAAipC,SAAAtxB,EAAAx6B,OAAA,OAGAC,IAAA4iB,EAAAZ,QAAAga,MAAA7uB,MAEA4gB,EAAAwM,EAAApX,QAAAP,EAAAZ,QAAAga,MAAA7uB,KACAyV,EAAAgpC,UAAA,IAAA79B,IAAAnL,EAAAgpC,eAGA5rD,IAAA4iB,EAAAZ,QAAAga,MAAA3uB,MAEA0gB,EAAAwM,EAAApX,QAAAP,EAAAZ,QAAAga,MAAA3uB,KACAuV,EAAAipC,UAAA,IAAA99B,IAAAnL,EAAAipC,UAGAjpC,EAAAzV,IAAAotB,EAAA3X,EAAAgpC,UACAhpC,EAAAvV,IAAAktB,EAAA3X,EAAAipC,WAGA7G,WAAA,WACA,IAAApiC,EAAAxe,KACAm2B,EAAA3X,EAAA6oC,YAEA7oC,EAAAoZ,MAAA,IAAApZ,EAAAgpC,UAAAhpC,EAAAipC,WAAAtxB,EAAAx6B,OAAA,EAAAw6B,IAAAjhB,MAAAsJ,EAAAgpC,SAAAhpC,EAAAipC,SAAA,IAGAzT,iBAAA,SAAAn4B,EAAA2O,GACA,IAAAhM,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MAEA,OAAAA,EAAA0J,eAAAhB,GAAA4N,WAAAzM,qBAAAnN,EAAA3b,GACA2b,EAAA0Z,cAAApW,EAAApjB,KAAA6sB,SAAAf,GAAA9rB,KAAAmd,IAGA2C,EAAAoZ,MAAA/b,EAAA2C,EAAAgpC,WAIA/vB,iBAAA,SAAA3+B,EAAA+iB,GACA,IAOA6rC,EAPAlpC,EAAAxe,KACAs1B,EAAA9W,EAAAZ,QAAA0X,OAEAqyB,EAAA3+C,KAAAC,IAAAuV,EAAAipC,SAAA,EAAAjpC,EAAAgpC,UAAAlyB,EAAA,QAQA,GAHAx8B,UACA4uD,EAAAlpC,EAAA+X,eAAAz9B,EAAA2Q,EAAA3Q,EAAA4Q,QAEA9N,IAAA8rD,QAAA9rD,IAAA9C,GAAA8e,MAAAiE,GAAA,CACA,IAAAsa,EAAA3X,EAAA6oC,YACAvuD,EAAA4uD,GAAA5uD,EACA,IAAA6zC,EAAAxW,EAAApX,QAAAjmB,GACA+iB,GAAA,IAAA8wB,IAAA9wB,EAGA,GAAA2C,EAAA+X,eAAA,CACA,IAAAqxB,EAAAppC,EAAAyD,MAAA0lC,EACAE,EAAAD,GAAA/rC,EAAA2C,EAAAgpC,UAMA,OAJAlyB,IACAuyB,GAAAD,EAAA,GAGAppC,EAAA6D,KAAAwlC,EAEA,IAAAC,EAAAtpC,EAAA0D,OAAAylC,EACAI,EAAAD,GAAAjsC,EAAA2C,EAAAgpC,UAMA,OAJAlyB,IACAyyB,GAAAD,EAAA,GAGAtpC,EAAA8D,IAAAylC,GAGAjwB,gBAAA,SAAAjc,GACA,OAAA7b,KAAAy3B,iBAAAz3B,KAAA43B,MAAA/b,KAAA7b,KAAAwnD,SAAA,OAGAjE,iBAAA,SAAAE,GACA,IAAAjlC,EAAAxe,KACAs1B,EAAA9W,EAAAZ,QAAA0X,OAEAqyB,EAAA3+C,KAAAC,IAAAuV,EAAAqhC,OAAAlkD,QAAA25B,EAAA,QACA0yB,EAAAxpC,EAAA+X,eACA0xB,GAAAD,EAAAxpC,EAAAyD,MAAAzD,EAAA0D,QAAAylC,EAcA,OAZAlE,GAAAuE,EAAAxpC,EAAA6D,KAAA7D,EAAA8D,IAEAgT,IACAmuB,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEAz6C,KAAAuM,MAAAkuC,EAAAwE,IAGAzpC,EAAAgpC,UAGAlxB,aAAA,WACA,OAAAt2B,KAAAwiB,UAKA0lC,GAjIA,CACAjvB,SAAA,UAiIAmuB,GAAAc,aAEA,IAAAhsC,GAAAwK,GAAAxK,KACAE,GAAAsK,GAAAtK,cAgFA+rC,GAAA3I,GAAAphC,OAAA,CACA8Z,cAAA,SAAAp/B,GACA,uBAAAA,GACAA,EAEA0mD,GAAAj7C,UAAA2zB,cAAAzzB,KAAAzE,KAAAlH,IAGAsvD,uBAAA,WACA,IAAA5pC,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACA4jC,EAAAlmB,EAAA1D,MAKA,GAAA4pB,EAAAniB,YAAA,CACA,IAAAgpB,EAAA3hC,GAAA4hC,KAAA9pC,EAAAzV,KACAw/C,EAAA7hC,GAAA4hC,KAAA9pC,EAAAvV,KAEAo/C,EAAA,GAAAE,EAAA,EAEA/pC,EAAAvV,IAAA,EACIo/C,EAAA,GAAAE,EAAA,IAEJ/pC,EAAAzV,IAAA,GAIA,IAAAy/C,OAAA5sD,IAAA4lD,EAAAz4C,UAAAnN,IAAA4lD,EAAAiH,aACAC,OAAA9sD,IAAA4lD,EAAAv4C,UAAArN,IAAA4lD,EAAAmH,kBAEA/sD,IAAA4lD,EAAAz4C,IACAyV,EAAAzV,IAAAy4C,EAAAz4C,SACGnN,IAAA4lD,EAAAiH,eACH,OAAAjqC,EAAAzV,IACAyV,EAAAzV,IAAAy4C,EAAAiH,aAEAjqC,EAAAzV,IAAAC,KAAAD,IAAAyV,EAAAzV,IAAAy4C,EAAAiH,oBAIA7sD,IAAA4lD,EAAAv4C,IACAuV,EAAAvV,IAAAu4C,EAAAv4C,SACGrN,IAAA4lD,EAAAmH,eACH,OAAAnqC,EAAAvV,IACAuV,EAAAvV,IAAAu4C,EAAAmH,aAEAnqC,EAAAvV,IAAAD,KAAAC,IAAAuV,EAAAvV,IAAAu4C,EAAAmH,eAIAH,IAAAE,GAKAlqC,EAAAzV,KAAAyV,EAAAvV,MACAu/C,EACAhqC,EAAAvV,IAAAuV,EAAAzV,IAAA,EAEAyV,EAAAzV,IAAAyV,EAAAvV,IAAA,GAKAuV,EAAAzV,MAAAyV,EAAAvV,MACAuV,EAAAvV,MAEAu4C,EAAAniB,aACA7gB,EAAAzV,QAKA6/C,aAAA,WACA,IAIAzE,EAHA3C,EADAxhD,KACA4d,QAAAga,MACAixB,EAAArH,EAAAqH,SACAzE,EAAA5C,EAAA4C,cAcA,OAXAyE,EACA1E,EAAAn7C,KAAA8/C,KAPA9oD,KAOAiJ,IAAA4/C,GAAA7/C,KAAAkB,MAPAlK,KAOA+I,IAAA8/C,GAAA,GAEA1E,EATAnkD,KASA+oD,oBACA3E,KAAA,IAGAA,IACAD,EAAAn7C,KAAAD,IAAAq7C,EAAAD,IAGAA,GAGA4E,kBAAA,WACA,OAAAvsC,OAAAolB,mBAGAonB,yBAAA9sC,GAEA0kC,WAAA,WACA,IAAApiC,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACA4jC,EAAAlmB,EAAA1D,MAMAusB,EAAA3lC,EAAAoqC,eAGAK,EAAA,CACA9E,SAHAA,EAAAn7C,KAAAC,IAAA,EAAAk7C,GAIAp7C,IAAAy4C,EAAAz4C,IACAE,IAAAu4C,EAAAv4C,IACAigD,UAAA1H,EAAA0H,UACAL,SAAAniC,GAAAjK,eAAA+kC,EAAA2H,cAAA3H,EAAAqH,WAEAjxB,EAAApZ,EAAAoZ,MAjMA,SAAAwxB,EAAAC,GACA,IAeAC,EAAAC,EAAAC,EAAAC,EAfA7xB,EAAA,GAMAixB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACAp7C,EAAAqgD,EAAArgD,IACAE,EAAAmgD,EAAAngD,IACAigD,EAAAE,EAAAF,UACAU,EAAAP,EAAAtgD,IACA8gD,EAAAR,EAAApgD,IACA6gD,EAAApjC,GAAAqjC,SAAAF,EAAAD,GAAAD,EAAAD,KAKA,GAAAI,EAdA,OAcA1tC,GAAArT,IAAAqT,GAAAnT,GACA,OAAA2gD,EAAAC,IAGAJ,EAAAzgD,KAAA8/C,KAAAe,EAAAC,GAAA9gD,KAAAkB,MAAA0/C,EAAAE,IACAH,IAEAG,EAAApjC,GAAAqjC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAAzsC,GAAA8sC,GAEAI,EAAAtgD,KAAAQ,IAAA,GAAAkd,GAAAsjC,eAAAF,KAGAR,EAAAtgD,KAAAQ,IAAA,GAAA0/C,GACAY,EAAA9gD,KAAA8/C,KAAAgB,EAAAR,MAGAC,EAAAvgD,KAAAkB,MAAA0/C,EAAAE,KACAN,EAAAxgD,KAAA8/C,KAAAe,EAAAC,KAGAjB,KAEAzsC,GAAArT,IAAA2d,GAAAujC,YAAAlhD,EAAA+gD,IAAA,OACAP,EAAAxgD,IAEAqT,GAAAnT,IAAAyd,GAAAujC,YAAAhhD,EAAA6gD,IAAA,OACAN,EAAAvgD,IAIAwgD,GAAAD,EAAAD,GAAAO,EAGAL,EADA/iC,GAAAwjC,aAAAT,EAAAzgD,KAAAuM,MAAAk0C,GAAAK,EAAA,KACA9gD,KAAAuM,MAAAk0C,GAEAzgD,KAAA8/C,KAAAW,GAGAF,EAAAvgD,KAAAuM,MAAAg0C,EAAAD,KACAE,EAAAxgD,KAAAuM,MAAAi0C,EAAAF,KACA1xB,EAAAr0B,KAAA6Y,GAAArT,GAAAwgD,EAAAxgD,GACA,QAAAsyB,EAAA,EAAgBA,EAAAouB,IAAepuB,EAC/BzD,EAAAr0B,KAAAyF,KAAAuM,OAAAg0C,EAAAluB,EAAAyuB,GAAAR,MAIA,OAFA1xB,EAAAr0B,KAAA6Y,GAAAnT,GAAAugD,EAAAvgD,GAEA2uB,EA4HAuyB,CAAAlB,EAAAzqC,GAEAA,EAAAwqC,2BAIAxqC,EAAAvV,IAAAyd,GAAAzd,IAAA2uB,GACApZ,EAAAzV,IAAA2d,GAAA3d,IAAA6uB,GAEA4pB,EAAAxkC,SACA4a,EAAA5a,UAEAwB,EAAAgJ,MAAAhJ,EAAAvV,IACAuV,EAAA+Y,IAAA/Y,EAAAzV,MAEAyV,EAAAgJ,MAAAhJ,EAAAzV,IACAyV,EAAA+Y,IAAA/Y,EAAAvV,MAIA83C,qBAAA,WACA,IAAAviC,EAAAxe,KACAwe,EAAA4rC,eAAA5rC,EAAAoZ,MAAA1iB,QACAsJ,EAAA2nC,cAAA3nC,EAAAoZ,MAAA7Y,QAAA,GAEAygC,GAAAj7C,UAAAw8C,qBAAAt8C,KAAA+Z,MAIA6rC,GAAA,CACApxB,SAAA,OACArB,MAAA,CACAhb,SAAAugC,GAAAC,WAAA/9B,SAIAirC,GAAAnC,GAAA/pC,OAAA,CACAqiC,oBAAA,WACA,IAAAjiC,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACAkE,EAAAtD,EAAAsD,MACApjB,EAAAojB,EAAApjB,KACA6sB,EAAA7sB,EAAA6sB,SACAgL,EAAA/X,EAAA+X,eAIA,SAAAg0B,EAAAz/B,GACA,OAAAyL,EAAAzL,EAAAI,UAAA1M,EAAA3b,GAAAioB,EAAAO,UAAA7M,EAAA3b,GAIA2b,EAAAzV,IAAA,KACAyV,EAAAvV,IAAA,KAEA,IAAAuhD,EAAAlvB,EAAArE,QAeA,QAdAr7B,IAAA4uD,GACA9jC,GAAA5J,KAAAyO,EAAA,SAAAP,EAAAR,GACA,IAAAggC,EAAA,CAIA,IAAA1/B,EAAAhJ,EAAA0J,eAAAhB,GACA1I,EAAAqV,iBAAA3M,IAAA+/B,EAAAz/B,SACAlvB,IAAAkvB,EAAA4K,QACA80B,GAAA,MAKAlvB,EAAArE,SAAAuzB,EAAA,CACA,IAAAC,EAAA,GAEA/jC,GAAA5J,KAAAyO,EAAA,SAAAP,EAAAR,GACA,IAAAM,EAAAhJ,EAAA0J,eAAAhB,GACA5oB,EAAA,CACAkpB,EAAA/rB,UAEAnD,IAAA0/B,EAAArE,cAAAr7B,IAAAkvB,EAAA4K,MAAAlL,EAAA,GACAM,EAAA4K,OACA2E,KAAA,UAEAz+B,IAAA6uD,EAAA7oD,KACA6oD,EAAA7oD,GAAA,CACA8oD,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAA7oD,GAAA8oD,eACAC,EAAAF,EAAA7oD,GAAA+oD,eAEA7oC,EAAAqV,iBAAA3M,IAAA+/B,EAAAz/B,IACApE,GAAA5J,KAAAkO,EAAAtsB,KAAA,SAAA4kD,EAAAznC,GACA,IAAA/iB,GAAA0lB,EAAA0Z,cAAAorB,GACA1rC,MAAA9e,IAAAgyB,EAAApsB,KAAAmd,GAAAmL,SAIA0jC,EAAA7uC,GAAA6uC,EAAA7uC,IAAA,EACA8uC,EAAA9uC,GAAA8uC,EAAA9uC,IAAA,EAEAyf,EAAAsvB,eACAF,EAAA7uC,GAAA,IACO/iB,EAAA,EACP6xD,EAAA9uC,IAAA/iB,EAEA4xD,EAAA7uC,IAAA/iB,OAMA4tB,GAAA5J,KAAA2tC,EAAA,SAAAI,GACA,IAAAl1C,EAAAk1C,EAAAH,eAAA9nD,OAAAioD,EAAAF,gBACAG,EAAApkC,GAAA3d,IAAA4M,GACAo1C,EAAArkC,GAAAzd,IAAA0M,GACA6I,EAAAzV,IAAA,OAAAyV,EAAAzV,IAAA+hD,EAAA9hD,KAAAD,IAAAyV,EAAAzV,IAAA+hD,GACAtsC,EAAAvV,IAAA,OAAAuV,EAAAvV,IAAA8hD,EAAA/hD,KAAAC,IAAAuV,EAAAvV,IAAA8hD,UAIArkC,GAAA5J,KAAAyO,EAAA,SAAAP,EAAAR,GACA,IAAAM,EAAAhJ,EAAA0J,eAAAhB,GACA1I,EAAAqV,iBAAA3M,IAAA+/B,EAAAz/B,IACApE,GAAA5J,KAAAkO,EAAAtsB,KAAA,SAAA4kD,EAAAznC,GACA,IAAA/iB,GAAA0lB,EAAA0Z,cAAAorB,GACA1rC,MAAA9e,IAAAgyB,EAAApsB,KAAAmd,GAAAmL,SAIA,OAAAxI,EAAAzV,IACAyV,EAAAzV,IAAAjQ,EACOA,EAAA0lB,EAAAzV,MACPyV,EAAAzV,IAAAjQ,GAGA,OAAA0lB,EAAAvV,IACAuV,EAAAvV,IAAAnQ,EACOA,EAAA0lB,EAAAvV,MACPuV,EAAAvV,IAAAnQ,QAOA0lB,EAAAzV,IAAAwT,SAAAiC,EAAAzV,OAAA6O,MAAA4G,EAAAzV,KAAAyV,EAAAzV,IAxGA,EAyGAyV,EAAAvV,IAAAsT,SAAAiC,EAAAvV,OAAA2O,MAAA4G,EAAAvV,KAAAuV,EAAAvV,IAxGA,EA2GAjJ,KAAAooD,0BAIAW,kBAAA,WACA,IACArH,EAEA,OAHA1hD,KAGAu2B,eACAvtB,KAAA8/C,KAJA9oD,KAIAiiB,MAAA,KAEAy/B,EAAAh7B,GAAA9I,QAAAkI,WANA9lB,KAMA4d,QAAAga,OACA5uB,KAAA8/C,KAPA9oD,KAOAkiB,OAAAw/B,EAAAr7B,cAIA2iC,yBAAA,WACAhpD,KAAAu2B,gBAEAv2B,KAAA43B,MAAA5a,WAIAg3B,iBAAA,SAAAn4B,EAAA2O,GACA,OAAAxqB,KAAAk4B,cAAAl4B,KAAA8hB,MAAApjB,KAAA6sB,SAAAf,GAAA9rB,KAAAmd,KAIA4b,iBAAA,SAAA3+B,GAGA,IAAA0lB,EAAAxe,KACAwnB,EAAAhJ,EAAAgJ,MAEA8W,GAAA9f,EAAA0Z,cAAAp/B,GAEAu/B,EAAA7Z,EAAA+Y,IAAA/P,EAOA,OALAhJ,EAAA+X,eACA/X,EAAA6D,KAAA7D,EAAAyD,MAAAoW,GAAAiG,EAAA9W,GAEAhJ,EAAAgE,OAAAhE,EAAA0D,OAAAmW,GAAAiG,EAAA9W,IAKA+7B,iBAAA,SAAAE,GACA,IAAAjlC,EAAAxe,KACAu2B,EAAA/X,EAAA+X,eACAy0B,EAAAz0B,EAAA/X,EAAAyD,MAAAzD,EAAA0D,OACAoT,GAAAiB,EAAAktB,EAAAjlC,EAAA6D,KAAA7D,EAAAgE,OAAAihC,GAAAuH,EACA,OAAAxsC,EAAAgJ,OAAAhJ,EAAA+Y,IAAA/Y,EAAAgJ,OAAA8N,GAGAwC,gBAAA,SAAAjc,GACA,OAAA7b,KAAAy3B,iBAAAz3B,KAAAoqD,eAAAvuC,OAKAovC,GAAAZ,GACAC,GAAApC,UAAA+C,GAEA,IAAAC,GAAAxkC,GAAAjK,eAgDA0uC,GAAA,CACAlyB,SAAA,OAGArB,MAAA,CACAhb,SAAAugC,GAAAC,WAAAU,cAKA,SAAAsN,GAAAtyD,EAAA4jB,GACA,OAAAgK,GAAAnK,SAAAzjB,OAAA,EAAAA,EAAA4jB,EAGA,IAAA2uC,GAAA7L,GAAAphC,OAAA,CACAqiC,oBAAA,WACA,IAAAjiC,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACAkE,EAAAtD,EAAAsD,MACApjB,EAAAojB,EAAApjB,KACA6sB,EAAA7sB,EAAA6sB,SACAgL,EAAA/X,EAAA+X,eACA,SAAAg0B,EAAAz/B,GACA,OAAAyL,EAAAzL,EAAAI,UAAA1M,EAAA3b,GAAAioB,EAAAO,UAAA7M,EAAA3b,GAIA2b,EAAAzV,IAAA,KACAyV,EAAAvV,IAAA,KACAuV,EAAA8sC,WAAA,KAEA,IAAAd,EAAAlvB,EAAArE,QAeA,QAdAr7B,IAAA4uD,GACA9jC,GAAA5J,KAAAyO,EAAA,SAAAP,EAAAR,GACA,IAAAggC,EAAA,CAIA,IAAA1/B,EAAAhJ,EAAA0J,eAAAhB,GACA1I,EAAAqV,iBAAA3M,IAAA+/B,EAAAz/B,SACAlvB,IAAAkvB,EAAA4K,QACA80B,GAAA,MAKAlvB,EAAArE,SAAAuzB,EAAA,CACA,IAAAC,EAAA,GAEA/jC,GAAA5J,KAAAyO,EAAA,SAAAP,EAAAR,GACA,IAAAM,EAAAhJ,EAAA0J,eAAAhB,GACA5oB,EAAA,CACAkpB,EAAA/rB,UAEAnD,IAAA0/B,EAAArE,cAAAr7B,IAAAkvB,EAAA4K,MAAAlL,EAAA,GACAM,EAAA4K,OACA2E,KAAA,KAEAvY,EAAAqV,iBAAA3M,IAAA+/B,EAAAz/B,UACAlvB,IAAA6uD,EAAA7oD,KACA6oD,EAAA7oD,GAAA,IAGA8kB,GAAA5J,KAAAkO,EAAAtsB,KAAA,SAAA4kD,EAAAznC,GACA,IAAAlG,EAAA80C,EAAA7oD,GACA9I,GAAA0lB,EAAA0Z,cAAAorB,GAEA1rC,MAAA9e,IAAAgyB,EAAApsB,KAAAmd,GAAAmL,QAAAluB,EAAA,IAGA6c,EAAAkG,GAAAlG,EAAAkG,IAAA,EACAlG,EAAAkG,IAAA/iB,QAKA4tB,GAAA5J,KAAA2tC,EAAA,SAAAI,GACA,GAAAA,EAAAlvD,OAAA,GACA,IAAAmvD,EAAApkC,GAAA3d,IAAA8hD,GACAE,EAAArkC,GAAAzd,IAAA4hD,GACArsC,EAAAzV,IAAA,OAAAyV,EAAAzV,IAAA+hD,EAAA9hD,KAAAD,IAAAyV,EAAAzV,IAAA+hD,GACAtsC,EAAAvV,IAAA,OAAAuV,EAAAvV,IAAA8hD,EAAA/hD,KAAAC,IAAAuV,EAAAvV,IAAA8hD,WAKArkC,GAAA5J,KAAAyO,EAAA,SAAAP,EAAAR,GACA,IAAAM,EAAAhJ,EAAA0J,eAAAhB,GACA1I,EAAAqV,iBAAA3M,IAAA+/B,EAAAz/B,IACApE,GAAA5J,KAAAkO,EAAAtsB,KAAA,SAAA4kD,EAAAznC,GACA,IAAA/iB,GAAA0lB,EAAA0Z,cAAAorB,GAEA1rC,MAAA9e,IAAAgyB,EAAApsB,KAAAmd,GAAAmL,QAAAluB,EAAA,IAIA,OAAA0lB,EAAAzV,IACAyV,EAAAzV,IAAAjQ,EACOA,EAAA0lB,EAAAzV,MACPyV,EAAAzV,IAAAjQ,GAGA,OAAA0lB,EAAAvV,IACAuV,EAAAvV,IAAAnQ,EACOA,EAAA0lB,EAAAvV,MACPuV,EAAAvV,IAAAnQ,GAGA,IAAAA,IAAA,OAAA0lB,EAAA8sC,YAAAxyD,EAAA0lB,EAAA8sC,cACA9sC,EAAA8sC,WAAAxyD,QAQAkH,KAAAooD,0BAGAA,uBAAA,WACA,IAAA5pC,EAAAxe,KACAwhD,EAAAhjC,EAAAZ,QAAAga,MAIApZ,EAAAzV,IAAAqiD,GAAA5J,EAAAz4C,IAAAyV,EAAAzV,KACAyV,EAAAvV,IAAAmiD,GAAA5J,EAAAv4C,IAAAuV,EAAAvV,KAEAuV,EAAAzV,MAAAyV,EAAAvV,MACA,IAAAuV,EAAAzV,KAAA,OAAAyV,EAAAzV,KACAyV,EAAAzV,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAA/+B,EAAAzV,MAAA,GACAyV,EAAAvV,IAAAD,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAA/+B,EAAAvV,MAAA,KAEAuV,EAAAzV,IAXA,EAYAyV,EAAAvV,IAXA,KAcA,OAAAuV,EAAAzV,MACAyV,EAAAzV,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAA/+B,EAAAvV,MAAA,IAEA,OAAAuV,EAAAvV,MACAuV,EAAAvV,IAAA,IAAAuV,EAAAzV,IACAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAA/+B,EAAAzV,MAAA,GAnBA,IAsBA,OAAAyV,EAAA8sC,aACA9sC,EAAAzV,IAAA,EACAyV,EAAA8sC,WAAA9sC,EAAAzV,IACIyV,EAAAvV,IAAA,EACJuV,EAAA8sC,WAAAtiD,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAA/+B,EAAAvV,OAEAuV,EAAA8sC,WA7BA,IAkCA1K,WAAA,WACA,IAAApiC,EAAAxe,KACAwhD,EAAAhjC,EAAAZ,QAAAga,MACA5a,GAAAwB,EAAA+X,eAEA6yB,EAAA,CACArgD,IAAAqiD,GAAA5J,EAAAz4C,KACAE,IAAAmiD,GAAA5J,EAAAv4C,MAEA2uB,EAAApZ,EAAAoZ,MA9MA,SAAAwxB,EAAAC,GACA,IAMAkC,EAAAC,EANA5zB,EAAA,GAEA6zB,EAAAP,GAAA9B,EAAArgD,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwc,GAAA62B,MAAA8L,EAAAtgD,QAEA2iD,EAAA1iD,KAAAkB,MAAAwc,GAAA62B,MAAA8L,EAAApgD,MACA0iD,EAAA3iD,KAAA8/C,KAAAO,EAAApgD,IAAAD,KAAAQ,IAAA,GAAAkiD,IAGA,IAAAD,GACAF,EAAAviD,KAAAkB,MAAAwc,GAAA62B,MAAA8L,EAAAiC,aACAE,EAAAxiD,KAAAkB,MAAAm/C,EAAAiC,WAAAtiD,KAAAQ,IAAA,GAAA+hD,IAEA3zB,EAAAr0B,KAAAkoD,GACAA,EAAAD,EAAAxiD,KAAAQ,IAAA,GAAA+hD,KAEAA,EAAAviD,KAAAkB,MAAAwc,GAAA62B,MAAAkO,IACAD,EAAAxiD,KAAAkB,MAAAuhD,EAAAziD,KAAAQ,IAAA,GAAA+hD,KAEA,IAAArC,EAAAqC,EAAA,EAAAviD,KAAAQ,IAAA,GAAAR,KAAAwpB,IAAA+4B,IAAA,EAEA,GACA3zB,EAAAr0B,KAAAkoD,GAGA,MADAD,IAEAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAAziD,KAAAuM,MAAAi2C,EAAAxiD,KAAAQ,IAAA,GAAA+hD,GAAArC,WACEqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEF,IAAAC,EAAAV,GAAA9B,EAAAngD,IAAAwiD,GAGA,OAFA7zB,EAAAr0B,KAAAqoD,GAEAh0B,EAyKAi0B,CAAAzC,EAAA5qC,GAIAA,EAAAvV,IAAAyd,GAAAzd,IAAA2uB,GACApZ,EAAAzV,IAAA2d,GAAA3d,IAAA6uB,GAEA4pB,EAAAxkC,SACAA,KACAwB,EAAAgJ,MAAAhJ,EAAAvV,IACAuV,EAAA+Y,IAAA/Y,EAAAzV,MAEAyV,EAAAgJ,MAAAhJ,EAAAzV,IACAyV,EAAA+Y,IAAA/Y,EAAAvV,KAEA+T,GACA4a,EAAA5a,WAIA+jC,qBAAA,WACA/gD,KAAA8rD,WAAA9rD,KAAA43B,MAAA1iB,QAEAsqC,GAAAj7C,UAAAw8C,qBAAAt8C,KAAAzE,OAIAg0C,iBAAA,SAAAn4B,EAAA2O,GACA,OAAAxqB,KAAAk4B,cAAAl4B,KAAA8hB,MAAApjB,KAAA6sB,SAAAf,GAAA9rB,KAAAmd,KAGAic,gBAAA,SAAAjc,GACA,OAAA7b,KAAAy3B,iBAAAz3B,KAAA8rD,WAAAjwC,KASAkwC,mBAAA,SAAAjzD,GACA,IAAAyyD,EAAAviD,KAAAkB,MAAAwc,GAAA62B,MAAAzkD,IACA0yD,EAAAxiD,KAAAkB,MAAApR,EAAAkQ,KAAAQ,IAAA,GAAA+hD,IAEA,OAAAC,EAAAxiD,KAAAQ,IAAA,GAAA+hD,IAGA9zB,iBAAA,SAAA3+B,GACA,IAMAkyD,EAAAvH,EAAAj8B,EAAA+P,EAAA+wB,EANA9pC,EAAAxe,KACAwhD,EAAAhjC,EAAAZ,QAAAga,MACA5a,EAAAwkC,EAAAxkC,QACAugC,EAAA72B,GAAA62B,MACAyO,EAAAxtC,EAAAutC,mBAAAvtC,EAAA8sC,YACAh2B,EAAA,EAgCA,OA7BAx8B,GAAA0lB,EAAA0Z,cAAAp/B,GACAkkB,GACAwK,EAAAhJ,EAAA+Y,IACAA,EAAA/Y,EAAAgJ,MACA8gC,GAAA,IAEA9gC,EAAAhJ,EAAAgJ,MACA+P,EAAA/Y,EAAA+Y,IACA+wB,EAAA,GAEA9pC,EAAA+X,gBACAy0B,EAAAxsC,EAAAyD,MACAwhC,EAAAzmC,EAAAwB,EAAA+D,MAAA/D,EAAA6D,OAEA2oC,EAAAxsC,EAAA0D,OACAomC,IAAA,EACA7E,EAAAzmC,EAAAwB,EAAA8D,IAAA9D,EAAAgE,QAEA1pB,IAAA0uB,IACA,IAAAA,IACA8N,EAAA41B,GAAA1J,EAAAv7B,SAAAR,GAAAO,OAAAX,iBACA2lC,GAAA11B,EACA9N,EAAAwkC,GAEA,IAAAlzD,IACAw8B,GAAA01B,GAAAzN,EAAAhmB,GAAAgmB,EAAA/1B,KAAA+1B,EAAAzkD,GAAAykD,EAAA/1B,KAEAi8B,GAAA6E,EAAAhzB,GAEAmuB,GAGAF,iBAAA,SAAAE,GACA,IAKAuH,EAAAxjC,EAAA+P,EAAAz+B,EALA0lB,EAAAxe,KACAwhD,EAAAhjC,EAAAZ,QAAAga,MACA5a,EAAAwkC,EAAAxkC,QACAugC,EAAA72B,GAAA62B,MACAyO,EAAAxtC,EAAAutC,mBAAAvtC,EAAA8sC,YAiBA,GAdAtuC,GACAwK,EAAAhJ,EAAA+Y,IACAA,EAAA/Y,EAAAgJ,QAEAA,EAAAhJ,EAAAgJ,MACA+P,EAAA/Y,EAAA+Y,KAEA/Y,EAAA+X,gBACAy0B,EAAAxsC,EAAAyD,MACAnpB,EAAAkkB,EAAAwB,EAAA+D,MAAAkhC,IAAAjlC,EAAA6D,OAEA2oC,EAAAxsC,EAAA0D,OACAppB,EAAAkkB,EAAAymC,EAAAjlC,EAAA8D,IAAA9D,EAAAgE,OAAAihC,GAEA3qD,IAAA0uB,EAAA,CACA,OAAAA,EAAA,CACA,IAAA8N,EAAA41B,GAAA1J,EAAAv7B,SAAAR,GAAAO,OAAAX,iBACAvsB,GAAAw8B,EACA01B,GAAA11B,EACA9N,EAAAwkC,EAEAlzD,GAAAykD,EAAAhmB,GAAAgmB,EAAA/1B,GACA1uB,GAAAkyD,EACAlyD,EAAAkQ,KAAAQ,IAAA,GAAA+zC,EAAA/1B,GAAA1uB,GAEA,OAAAA,KAKAmzD,GAAAd,GACAE,GAAAnD,UAAA+D,GAEA,IAAAC,GAAAxlC,GAAAjK,eACA0vC,GAAAzlC,GAAA/J,sBACAyvC,GAAA1lC,GAAA9I,QAAAzd,QAEAksD,GAAA,CACAntB,SAAA,EAGAotB,SAAA,EACArzB,SAAA,YAEAgG,WAAA,CACAC,SAAA,EACAmf,MAAA,qBACAxtB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAGAmE,UAAA,CACA4J,UAAA,GAIAvH,MAAA,CAEA20B,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEA9vC,SAAAugC,GAAAC,WAAA/9B,QAGA+f,YAAA,CAEAF,SAAA,EAGAjZ,SAAA,GAGArJ,SAAA,SAAAsZ,GACA,OAAAA,KAKA,SAAAy2B,GAAAh1C,GACA,IAAA2jB,EAAA3jB,EAAAiG,QACA,OAAA0d,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,QAAAvnB,EAAAmK,MAAApjB,KAAAy3B,OAAAx6B,OAAA,EAGA,SAAAixD,GAAAtxB,GACA,IAAAkmB,EAAAlmB,EAAA1D,MAEA,OAAA4pB,EAAAtiB,SAAA5D,EAAA4D,QACAgtB,GAAA1K,EAAAv7B,SAAAR,GAAAO,OAAAX,iBAAA,EAAAm8B,EAAAiL,iBAEA,EAiBA,SAAAI,GAAAn9B,EAAAqc,EAAA7oB,EAAAna,EAAAE,GACA,OAAAymB,IAAA3mB,GAAA2mB,IAAAzmB,EACA,CACAue,MAAAukB,EAAA7oB,EAAA,EACAqU,IAAAwU,EAAA7oB,EAAA,GAEEwM,EAAA3mB,GAAA2mB,EAAAzmB,EACF,CACAue,MAAAukB,EAAA7oB,EACAqU,IAAAwU,GAIA,CACAvkB,MAAAukB,EACAxU,IAAAwU,EAAA7oB,GAuFA,SAAA4pC,GAAAp9B,GACA,WAAAA,GAAA,MAAAA,EACA,SACEA,EAAA,IACF,OAGA,QAGA,SAAA2mB,GAAAt0B,EAAAqY,EAAAnB,EAAA5S,GACA,IACApiB,EAAAqZ,EADA5T,EAAAuvB,EAAAvvB,EAAA2c,EAAA,EAGA,GAAAK,GAAAviB,QAAAi2B,GACA,IAAAn2B,EAAA,EAAAqZ,EAAA8c,EAAAz+B,OAAiCsI,EAAAqZ,IAAUrZ,EAC3C8d,EAAAs0B,SAAAjc,EAAAn2B,GAAAg1B,EAAAxvB,EAAAC,GACAA,GAAA2c,OAGAtE,EAAAs0B,SAAAjc,EAAAnB,EAAAxvB,EAAAC,GAIA,SAAAqjD,GAAAr9B,EAAAs9B,EAAA/zB,GACA,KAAAvJ,GAAA,MAAAA,EACAuJ,EAAAvvB,GAAAsjD,EAAA5mD,EAAA,GACEspB,EAAA,KAAAA,EAAA,MACFuJ,EAAAvvB,GAAAsjD,EAAA5mD,GAiGA,SAAA6mD,GAAAC,GACA,OAAAxmC,GAAAuB,SAAAilC,KAAA,EAGA,IAAAC,GAAAhF,GAAA/pC,OAAA,CACAkiC,cAAA,WACA,IAAA9hC,EAAAxe,KAGAwe,EAAAyD,MAAAzD,EAAAuhC,SACAvhC,EAAA0D,OAAA1D,EAAAwhC,UACAxhC,EAAAkhC,WAAAkN,GAAApuC,EAAAZ,SAAA,EACAY,EAAAuhB,QAAA/2B,KAAAkB,MAAAsU,EAAAyD,MAAA,GACAzD,EAAAwhB,QAAAh3B,KAAAkB,OAAAsU,EAAA0D,OAAA1D,EAAAkhC,YAAA,GACAlhC,EAAA4uC,YAAApkD,KAAAD,IAAAyV,EAAA0D,OAAA1D,EAAAkhC,WAAAlhC,EAAAyD,OAAA,GAGAw+B,oBAAA,WACA,IAAAjiC,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MACA/Y,EAAAyT,OAAAolB,kBACA34B,EAAAuT,OAAA6wC,kBAEA3mC,GAAA5J,KAAAgF,EAAApjB,KAAA6sB,SAAA,SAAAP,EAAAR,GACA,GAAA1I,EAAAqV,iBAAA3M,GAAA,CACA,IAAAM,EAAAhJ,EAAA0J,eAAAhB,GAEA9D,GAAA5J,KAAAkO,EAAAtsB,KAAA,SAAA4kD,EAAAznC,GACA,IAAA/iB,GAAA0lB,EAAA0Z,cAAAorB,GACA1rC,MAAA9e,IAAAgyB,EAAApsB,KAAAmd,GAAAmL,SAIAje,EAAAC,KAAAD,IAAAjQ,EAAAiQ,GACAE,EAAAD,KAAAC,IAAAnQ,EAAAmQ,SAKAuV,EAAAzV,QAAAyT,OAAAolB,kBAAA,EAAA74B,EACAyV,EAAAvV,QAAAuT,OAAA6wC,kBAAA,EAAApkD,EAGAuV,EAAA4pC,0BAIAW,kBAAA,WACA,OAAA//C,KAAA8/C,KAAA9oD,KAAAotD,YAAAR,GAAA5sD,KAAA4d,WAGAmjC,qBAAA,WACA,IAAAviC,EAAAxe,KAEAmoD,GAAA5jD,UAAAw8C,qBAAAt8C,KAAA+Z,GAGAA,EAAA4gB,YAAA5gB,EAAAsD,MAAApjB,KAAAy3B,OAAA1Y,IAAAe,EAAAZ,QAAAwhB,YAAAxiB,SAAA4B,IAGAw1B,iBAAA,SAAAn4B,EAAA2O,GACA,OAAAxqB,KAAAk4B,cAAAl4B,KAAA8hB,MAAApjB,KAAA6sB,SAAAf,GAAA9rB,KAAAmd,KAGAwlC,IAAA,WACA,IACA/lB,EADAt7B,KACA4d,QAEA0d,EAAA4D,SAAA5D,EAAA8D,YAAAF,QAjRA,SAAAvnB,GA4BA,IAWA1T,EAAA+oD,EAAAvsB,EAXA6sB,EAAA5mC,GAAA9I,QAAAkI,WAAAnO,EAAAiG,QAAAwhB,aAIAmuB,EAAA,CACAjnD,EAAA,EACAsC,EAAA+O,EAAAsK,MACA3X,EAAA,EACAxB,EAAA6O,EAAAuK,OAAAvK,EAAA+nC,YAEA8N,EAAA,GAGA71C,EAAAoK,IAAAmE,KAAAonC,EAAAh3C,OACAqB,EAAA81C,iBAAA,GAEA,IAhFA1rC,EAAAsE,EAAA6P,EAgFAw3B,EAAAf,GAAAh1C,GACA,IAAA1T,EAAA,EAAYA,EAAAypD,EAAgBzpD,IAAA,CAC5Bw8B,EAAA9oB,EAAAg2C,iBAAA1pD,EAAA0T,EAAAy1C,YAAA,GAlFArrC,EAmFApK,EAAAoK,IAnFAsE,EAmFAinC,EAAAjnC,WAnFA6P,EAmFAve,EAAAynB,YAAAn7B,IAAA,GAAA+oD,EAlFAtmC,GAAAviB,QAAA+xB,GACA,CACA/sB,EAAAud,GAAA03B,YAAAr8B,IAAAmE,KAAAgQ,GACA9vB,EAAA8vB,EAAAv6B,OAAA0qB,GAIA,CACAld,EAAA4Y,EAAA4yB,YAAAze,GAAAjU,MACA7b,EAAAigB,GA0EA1O,EAAA81C,iBAAAxpD,GAAA+oD,EAGA,IAAAhL,EAAArqC,EAAAi2C,cAAA3pD,GACAyrB,EAAAhJ,GAAAmnC,UAAA7L,GAAA,IACA8L,EAAAjB,GAAAn9B,EAAA+Q,EAAAh3B,EAAAujD,EAAA7jD,EAAA,OACA4kD,EAAAlB,GAAAn9B,EAAA+Q,EAAA/2B,EAAAsjD,EAAA5mD,EAAA,QAEA0nD,EAAAtmC,MAAA+lC,EAAAjnD,IACAinD,EAAAjnD,EAAAwnD,EAAAtmC,MACAgmC,EAAAlnD,EAAA07C,GAGA8L,EAAAv2B,IAAAg2B,EAAA3kD,IACA2kD,EAAA3kD,EAAAklD,EAAAv2B,IACAi2B,EAAA5kD,EAAAo5C,GAGA+L,EAAAvmC,MAAA+lC,EAAAjjD,IACAijD,EAAAjjD,EAAAyjD,EAAAvmC,MACAgmC,EAAAljD,EAAA03C,GAGA+L,EAAAx2B,IAAAg2B,EAAAzkD,IACAykD,EAAAzkD,EAAAilD,EAAAx2B,IACAi2B,EAAA1kD,EAAAk5C,GAIArqC,EAAAq2C,cAAAr2C,EAAAy1C,YAAAG,EAAAC,GAqMAS,CAJAjuD,WAMAkuD,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAAhvC,EAAAxe,KACAouD,EAAAb,EAAAjnD,EAAA0C,KAAAwC,IAAAgiD,EAAAlnD,GACA+nD,EAAArlD,KAAAC,IAAAskD,EAAA3kD,EAAA4V,EAAAyD,MAAA,GAAAjZ,KAAAwC,IAAAgiD,EAAA5kD,GACA0lD,GAAAf,EAAAjjD,EAAAtB,KAAAuC,IAAAiiD,EAAAljD,GACAikD,GAAAvlD,KAAAC,IAAAskD,EAAAzkD,GAAA0V,EAAA0D,OAAA1D,EAAAkhC,YAAA,GAAA12C,KAAAuC,IAAAiiD,EAAA1kD,GAEAslD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GAEA/vC,EAAA4uC,YAAApkD,KAAAD,IACAC,KAAAkB,MAAAikD,GAAAC,EAAAC,GAAA,GACArlD,KAAAkB,MAAAikD,GAAAG,EAAAC,GAAA,IACA/vC,EAAA0vC,eAAAE,EAAAC,EAAAC,EAAAC,IAGAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAAnwC,EAAAxe,KACA4uD,EAAApwC,EAAAyD,MAAAwsC,EAAAjwC,EAAA4uC,YACAyB,EAAAL,EAAAhwC,EAAA4uC,YACA0B,EAAAJ,EAAAlwC,EAAA4uC,YACA2B,EAAAvwC,EAAA0D,OAAA1D,EAAAkhC,WAAAiP,EAAAnwC,EAAA4uC,YAEA5uC,EAAAuhB,QAAA/2B,KAAAkB,OAAA2kD,EAAAD,GAAA,EAAApwC,EAAA6D,MACA7D,EAAAwhB,QAAAh3B,KAAAkB,OAAA4kD,EAAAC,GAAA,EAAAvwC,EAAA8D,IAAA9D,EAAAkhC,aAGAkO,cAAA,SAAA/xC,GACA,IAAAmzC,EAAA,EAAAhmD,KAAAoC,GAAAuhD,GAAA3sD,MACA4vB,EAAA5vB,KAAA8hB,MAAAlE,SAAA5d,KAAA8hB,MAAAlE,QAAAgS,WACA5vB,KAAA8hB,MAAAlE,QAAAgS,WACA,EAEAq/B,EAAAr/B,EAAA5mB,KAAAoC,GAAA,MAGA,OAAAyQ,EAAAmzC,EAAAC,GAGA/uB,8BAAA,SAAApnC,GACA,IAAA0lB,EAAAxe,KAEA,UAAAlH,EACA,SAIA,IAAAo2D,EAAA1wC,EAAA4uC,aAAA5uC,EAAAvV,IAAAuV,EAAAzV,KACA,OAAAyV,EAAAZ,QAAAga,MAAA5a,SACAwB,EAAAvV,IAAAnQ,GAAAo2D,GAEAp2D,EAAA0lB,EAAAzV,KAAAmmD,GAGAvB,iBAAA,SAAA9xC,EAAAszC,GACA,IACAC,EADApvD,KACA4tD,cAAA/xC,GAAA7S,KAAAoC,GAAA,EACA,OACA3B,EAAAT,KAAAuC,IAAA6jD,GAAAD,EAHAnvD,KAGA+/B,QACAr2B,EAAAV,KAAAwC,IAAA4jD,GAAAD,EAJAnvD,KAIAggC,UAIAU,yBAAA,SAAA7kB,EAAA/iB,GACA,OAAAkH,KAAA2tD,iBAAA9xC,EAAA7b,KAAAkgC,8BAAApnC,KAGAu2D,gBAAA,WACA,IACAtmD,EADA/I,KACA+I,IACAE,EAFAjJ,KAEAiJ,IAEA,OAJAjJ,KAIA0gC,yBAAA,EAJA1gC,KAKAq/B,YAAA,EACAt2B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,IAGAwkB,KAAA,WACA,IAAA/O,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACAukC,EAAA7mB,EAAA/F,UACAisB,EAAAlmB,EAAA1D,MAEA,GAAA0D,EAAA4D,QAAA,CACA,IAAAnd,EAAAvD,EAAAuD,IACA6N,EAAA5vB,KAAA4tD,cAAA,GACAlM,EAAAh7B,GAAA9I,QAAAkI,WAAA07B,IAEAlmB,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,UAxQA,SAAAvnB,GACA,IAAAoK,EAAApK,EAAAoK,IACAuZ,EAAA3jB,EAAAiG,QACA0xC,EAAAh0B,EAAA2D,WACAkjB,EAAA7mB,EAAA/F,UACAg6B,EAAAj0B,EAAA8D,YACAvO,EAAAq7B,GAAAoD,EAAAz+B,UAAAsxB,EAAAtxB,WACA80B,EAAAuG,GAAAoD,EAAAjR,MAAA8D,EAAA9D,OACAmR,EAAA5C,GAAAtxB,GAEAvZ,EAAAgC,OACAhC,EAAA8O,YACA9O,EAAAgP,YAAA40B,EACA5jC,EAAAkQ,cACAlQ,EAAAkQ,YAAAm6B,GAAA,CAAAkD,EAAAn+B,WAAAgxB,EAAAhxB,WAAA,MACApP,EAAAmQ,eAAAk6B,GAAA,CAAAkD,EAAAl+B,iBAAA+wB,EAAA/wB,iBAAA,KAGA,IAAAq+B,EAAA93C,EAAAuoB,8BAAA5E,EAAA1D,MAAA5a,QAAArF,EAAA5O,IAAA4O,EAAA1O,KAGAqkD,EAAA5mC,GAAA9I,QAAAkI,WAAAypC,GAEAxtC,EAAAmE,KAAAonC,EAAAh3C,OACAyL,EAAAq0B,aAAA,SAEA,QAAAnyC,EAAA0oD,GAAAh1C,GAAA,EAAuC1T,GAAA,EAAQA,IAAA,CAC/C,GAAAqrD,EAAApwB,SAAArO,GAAA80B,EAAA,CACA,IAAA+J,EAAA/3C,EAAAg2C,iBAAA1pD,EAAAwrD,GACA1tC,EAAAsB,YACAtB,EAAAU,OAAA9K,EAAAooB,QAAApoB,EAAAqoB,SACAje,EAAAuB,OAAAosC,EAAAjmD,EAAAimD,EAAAhmD,GACAqY,EAAA0B,SAGA,GAAA8rC,EAAArwB,QAAA,CAEA,IAAAywB,EAAA,IAAA1rD,EAAAurD,EAAA,IACAI,EAAAj4C,EAAAg2C,iBAAA1pD,EAAAwrD,EAAAE,EAAA,GAGAE,EAAA1D,GAAAoD,EAAAtK,UAAAhhD,EAAAwhB,GAAAO,OAAAb,kBACApD,EAAA6O,UAAAi/B,EAEA,IAAA7N,EAAArqC,EAAAi2C,cAAA3pD,GACAyrB,EAAAhJ,GAAAmnC,UAAA7L,GACAjgC,EAAAo0B,UAAA2W,GAAAp9B,GACAq9B,GAAAr9B,EAAA/X,EAAA81C,iBAAAxpD,GAAA2rD,GACAvZ,GAAAt0B,EAAApK,EAAAynB,YAAAn7B,IAAA,GAAA2rD,EAAAtC,EAAAjnC,aAGAtE,EAAAmC,UAsNA4rC,CAAAtxC,GAGAkI,GAAA5J,KAAA0B,EAAAoZ,MAAA,SAAA1B,EAAAra,GAEA,GAAAA,EAAA,GAAA2lC,EAAAxkC,QAAA,CACA,IAAA+yC,EAAAvxC,EAAA0hB,8BAAA1hB,EAAA4rC,eAAAvuC,IAOA,GAJAsmC,EAAAjjB,SAAA,IAAArjB,GA5NA,SAAAlE,EAAAwqC,EAAA//B,EAAAvG,GACA,IAKA4kB,EALA1e,EAAApK,EAAAoK,IACAod,EAAAgjB,EAAAhjB,SACAuuB,EAAAf,GAAAh1C,GACAguC,EAAAwG,GAAAhK,EAAA9D,MAAAxiC,EAAA,GACAgV,EAAAs7B,GAAAhK,EAAAtxB,UAAAhV,EAAA,GAGA,IAAAsjB,GAAAuuB,IAAA/H,GAAA90B,EAAA,CAaA,GATA9O,EAAAgC,OACAhC,EAAAgP,YAAA40B,EACA5jC,EAAA8O,YACA9O,EAAAkQ,cACAlQ,EAAAkQ,YAAAkwB,EAAAhxB,YAAA,IACApP,EAAAmQ,eAAAiwB,EAAA/wB,kBAAA,GAGArP,EAAAsB,YACA8b,EAEApd,EAAAW,IAAA/K,EAAAooB,QAAApoB,EAAAqoB,QAAA5d,EAAA,IAAApZ,KAAAoC,QACE,CAEFq1B,EAAA9oB,EAAAg2C,iBAAA,EAAAvrC,GACAL,EAAAU,OAAAge,EAAAh3B,EAAAg3B,EAAA/2B,GAEA,QAAAzF,EAAA,EAAiBA,EAAAypD,EAAgBzpD,IACjCw8B,EAAA9oB,EAAAg2C,iBAAA1pD,EAAAme,GACAL,EAAAuB,OAAAmd,EAAAh3B,EAAAg3B,EAAA/2B,GAGAqY,EAAAY,YACAZ,EAAA0B,SACA1B,EAAAmC,WAyLA8rC,CAAAxxC,EAAA2jC,EAAA4N,EAAAl0C,GAGA2lC,EAAAtiB,QAAA,CACA,IAAA8lB,EAAAkH,GAAA1K,EAAAyD,UAAAx/B,GAAAO,OAAAb,kBAOA,GANApD,EAAAmE,KAAAw7B,EAAAprC,OAEAyL,EAAAgC,OACAhC,EAAA8kC,UAAAroC,EAAAuhB,QAAAvhB,EAAAwhB,SACAje,EAAArH,OAAAkV,GAEA4xB,EAAA+K,kBAAA,CACA,IAAAzK,EAAA//B,EAAA4yB,YAAAze,GAAAjU,MACAF,EAAA6O,UAAA4wB,EAAAgL,cACAzqC,EAAA6S,UACAktB,EAAA,EAAAN,EAAAkL,kBACAqD,EAAArO,EAAAx+B,KAAA,EAAAs+B,EAAAiL,iBACA3K,EAAA,EAAAN,EAAAkL,iBACAhL,EAAAx+B,KAAA,EAAAs+B,EAAAiL,kBAIA1qC,EAAAo0B,UAAA,SACAp0B,EAAAq0B,aAAA,SACAr0B,EAAA6O,UAAAo0B,EACAjjC,EAAAs0B,SAAAngB,EAAA,GAAA65B,GACAhuC,EAAAmC,kBASA+rC,GAAA5D,GACAc,GAAAjF,UAAA+H,GAEA,IAAAC,GAAAxpC,GAAAjK,eAGA0zC,GAAA3zC,OAAA4zC,mBAAA,iBACAC,GAAA7zC,OAAA8zC,kBAAA,iBAEAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACAvtC,KAAA,EACAwtC,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACAvtC,KAAA,IACAwtC,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACAvtC,KAAA,IACAwtC,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACAvtC,KAAA,KACAwtC,MAAA,cAEAI,IAAA,CACAL,QAAA,EACAvtC,KAAA,MACAwtC,MAAA,SAEAK,KAAA,CACAN,QAAA,EACAvtC,KAAA,OACAwtC,MAAA,WAEAM,MAAA,CACAP,QAAA,EACAvtC,KAAA,OACAwtC,MAAA,SAEAO,QAAA,CACAR,QAAA,EACAvtC,KAAA,OACAwtC,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACAvtC,KAAA,SAIAiuC,GAAAx4D,OAAAukB,KAAAqzC,IAEA,SAAAa,GAAAnmD,EAAAnC,GACA,OAAAmC,EAAAnC,EAGA,SAAAuoD,GAAA/uB,GACA,IAEAr+B,EAAAqZ,EAAApa,EAFAouD,EAAA,GACAC,EAAA,GAGA,IAAAttD,EAAA,EAAAqZ,EAAAglB,EAAA3mC,OAAiCsI,EAAAqZ,IAAUrZ,EAC3Cf,EAAAo/B,EAAAr+B,GACAqtD,EAAApuD,KACAouD,EAAApuD,IAAA,EACAquD,EAAAhuD,KAAAL,IAIA,OAAAquD,EAsFA,SAAAC,GAAAC,EAAAC,EAAA5zC,EAAA6zC,GACA,IAAAt5B,EAjCA,SAAAo5B,EAAA7vD,EAAA9I,GAKA,IAJA,IAEA84D,EAAAC,EAAAC,EAFAC,EAAA,EACA9nD,EAAAwnD,EAAA91D,OAAA,EAGAo2D,GAAA,GAAAA,GAAA9nD,GAAA,CAKA,GAHA4nD,EAAAJ,GADAG,EAAAG,EAAA9nD,GAAA,GACA,SACA6nD,EAAAL,EAAAG,IAEAC,EAEA,OAAWE,GAAA,KAAA9nD,GAAA6nD,GACR,GAAAA,EAAAlwD,GAAA9I,EACHi5D,EAAAH,EAAA,MACG,MAAAC,EAAAjwD,GAAA9I,GAGH,OAAWi5D,GAAAF,EAAA5nD,GAAA6nD,GAFX7nD,EAAA2nD,EAAA,GAOA,OAASG,GAAAD,EAAA7nD,GAAA,MAUT+nD,CAAAP,EAAAC,EAAA5zC,GAGAjf,EAAAw5B,EAAA05B,GAAA15B,EAAApuB,GAAAouB,EAAA05B,GAAAN,IAAA91D,OAAA,GAAA81D,EAAA,GACA3yD,EAAAu5B,EAAA05B,GAAA15B,EAAApuB,GAAAouB,EAAApuB,GAAAwnD,IAAA91D,OAAA,GAAA81D,EAAA,GAEAQ,EAAAnzD,EAAA4yD,GAAA7yD,EAAA6yD,GACA/mD,EAAAsnD,GAAAn0C,EAAAjf,EAAA6yD,IAAAO,EAAA,EACA38B,GAAAx2B,EAAA6yD,GAAA9yD,EAAA8yD,IAAAhnD,EAEA,OAAA9L,EAAA8yD,GAAAr8B,EAGA,SAAA48B,GAAAv6C,EAAAw6C,GACA,IAAAC,EAAAz6C,EAAA06C,SACAz0C,EAAAjG,EAAAiG,QAAA00C,KACAC,EAAA30C,EAAA20C,OACA7V,EAAA6V,GAAA30C,EAAA8+B,OACA5jD,EAAAq5D,EAaA,MAXA,mBAAAI,IACAz5D,EAAAy5D,EAAAz5D,IAIA4tB,GAAAnK,SAAAzjB,KACAA,EAAA,iBAAA4jD,EACA0V,EAAA3V,MAAA3jD,EAAA4jD,GACA0V,EAAA3V,MAAA3jD,IAGA,OAAAA,GACAA,GAKAy5D,GAAA,mBAAA7V,IACA5jD,EAAA4jD,EAAAyV,GAGAzrC,GAAAnK,SAAAzjB,KACAA,EAAAs5D,EAAA3V,MAAA3jD,KAIAA,GAGA,SAAA2jD,GAAA9kC,EAAAw6C,GACA,GAAAzrC,GAAAtK,cAAA+1C,GACA,YAGA,IAAAv0C,EAAAjG,EAAAiG,QAAA00C,KACAx5D,EAAAo5D,GAAAv6C,IAAAugB,cAAAi6B,IACA,cAAAr5D,EACAA,GAGA8kB,EAAArI,QACAzc,GAAA6e,EAAA06C,SAAAzV,QAAA9jD,EAAA8kB,EAAArI,QAGAzc,GAgEA,SAAA05D,GAAA9I,GACA,QAAAzlD,EAAAktD,GAAApyC,QAAA2qC,GAAA,EAAApsC,EAAA6zC,GAAAx1D,OAA2DsI,EAAAqZ,IAAUrZ,EACrE,GAAAssD,GAAAY,GAAAltD,IAAAwsD,OACA,OAAAU,GAAAltD,GAWA,SAAAwuD,GAAA96C,EAAA5O,EAAAE,EAAAypD,GACA,IAYAJ,EAZAF,EAAAz6C,EAAA06C,SACAz0C,EAAAjG,EAAAiG,QACA+0C,EAAA/0C,EAAA00C,KACAhT,EAAAqT,EAAAjJ,MAnDA,SAAAkJ,EAAA7pD,EAAAE,EAAAypD,GACA,IACAzuD,EAAA4uD,EAAAvJ,EADAhsC,EAAA6zC,GAAAx1D,OAGA,IAAAsI,EAAAktD,GAAApyC,QAAA6zC,GAAiC3uD,EAAAqZ,EAAA,IAAcrZ,EAI/C,GAHA4uD,EAAAtC,GAAAY,GAAAltD,IACAqlD,EAAAuJ,EAAAnC,MAAAmC,EAAAnC,MAAAmC,EAAAnC,MAAA/0D,OAAA,GAAA00D,GAEAwC,EAAApC,QAAAznD,KAAA8/C,MAAA7/C,EAAAF,IAAAugD,EAAAuJ,EAAA3vC,QAAAwvC,EACA,OAAAvB,GAAAltD,GAIA,OAAAktD,GAAA7zC,EAAA,GAsCAw1C,CAAAH,EAAAC,QAAA7pD,EAAAE,EAAAypD,GACAnT,EAAAiT,GAAAlT,GACAuJ,EAAAqH,GAAAyC,EAAA9J,SAAA8J,EAAAI,cACAC,EAAA,SAAA1T,GAAAqT,EAAAM,WACAC,EAAAt1C,EAAAga,MAAA2nB,MAAAxR,QACA8kB,EAAAtC,GAAAjR,GACA6T,EAAApqD,EACAiuB,EAAA/tB,EACA2uB,EAAA,GAgCA,IA7BAixB,IACAA,EAvFA,SAAA9/C,EAAAE,EAAAygD,EAAAgJ,GACA,IAIAzuD,EAAAqZ,EAAAgsC,EAJAjxB,EAAApvB,EAAAF,EACA8pD,EAAAtC,GAAA7G,GACA0J,EAAAP,EAAA3vC,KACAwtC,EAAAmC,EAAAnC,MAGA,IAAAA,EACA,OAAA1nD,KAAA8/C,KAAAzwB,GAAAq6B,EAAAU,IAGA,IAAAnvD,EAAA,EAAAqZ,EAAAozC,EAAA/0D,OAAiCsI,EAAAqZ,IACjCgsC,EAAAoH,EAAAzsD,KACA+E,KAAA8/C,KAAAzwB,GAAA+6B,EAAA9J,KAAAoJ,MAF2CzuD,GAO3C,OAAAqlD,EAqEA+J,CAAAtqD,EAAAE,EAAAq2C,EAAAoT,IAIAM,IACAG,GAAAf,EAAAxV,QAAAuW,EAAA,UAAAH,GACAh8B,GAAAo7B,EAAAxV,QAAA5lB,EAAA,UAAAg8B,IAIAG,GAAAf,EAAAxV,QAAAuW,EAAAH,EAAA,MAAA1T,IACAtoB,GAAAo7B,EAAAxV,QAAA5lB,EAAAg8B,EAAA,MAAA1T,IAGAr2C,IACA+tB,GAAAo7B,EAAAxoB,IAAA5S,EAAA,EAAAsoB,IAGAgT,EAAAa,EAEAD,GAAA3T,IAAAyT,IAAAL,EAAAp9C,QAIA+8C,GAAAF,EAAAxV,QAAA0V,EAAA/S,GACA+S,GAAAF,EAAAxoB,IAAA0oB,MAAAa,EAAAb,IAAAO,EAAA3vC,KAAA2lC,MAAAvJ,IAGOgT,EAAAt7B,EAAas7B,GAAAF,EAAAxoB,IAAA0oB,EAAAzJ,EAAAvJ,GACpB1nB,EAAAr0B,MAAA+uD,GAKA,OAFA16B,EAAAr0B,MAAA+uD,GAEA16B,EAqDA,IAmDA07B,GAAA9T,GAAAphC,OAAA,CACA2I,WAAA,WACA/mB,KAAA65C,oBACA2F,GAAAj7C,UAAAwiB,WAAAtiB,KAAAzE,OAGAgsB,OAAA,WACA,IACApO,EADA5d,KACA4d,QACA00C,EAAA10C,EAAA00C,OAAA10C,EAAA00C,KAAA,IACAF,EAHApyD,KAGAqyD,SAAA,IAAApV,GAAAC,MAAAt/B,EAAA21C,SAAAC,MAaA,OAVAlB,EAAA5V,QACA55C,QAAA2wD,KAAA,0EAOA/sC,GAAAzI,QAAAq0C,EAAAoB,eAAAtB,EAAA5V,WAEAgD,GAAAj7C,UAAAynB,OAAA1rB,MAhBAN,KAgBAtE,YAMAw8B,cAAA,SAAAorB,GAIA,OAHAA,QAAA1nD,IAAA0nD,EAAAh5C,IACAg5C,IAAAh5C,GAEAk1C,GAAAj7C,UAAA2zB,cAAAzzB,KAAAzE,KAAAsjD,IAGA7C,oBAAA,WACA,IAUAx8C,EAAAo3B,EAAA/d,EAAAgkB,EAAA5iC,EAAAi1D,EAVAn1C,EAAAxe,KACA8hB,EAAAtD,EAAAsD,MACAswC,EAAA5zC,EAAA6zC,SACAM,EAAAn0C,EAAAZ,QAAA00C,KACA5I,EAAAiJ,EAAAjJ,MAAA,MACA3gD,EAAAsnD,GACApnD,EAAAknD,GACAyD,EAAA,GACAroC,EAAA,GACA4K,EAAA,GAEA09B,EAAA/xC,EAAApjB,KAAAy3B,QAAA,GAGA,IAAAlyB,EAAA,EAAAqZ,EAAAu2C,EAAAl4D,OAAuCsI,EAAAqZ,IAAUrZ,EACjDkyB,EAAA5yB,KAAAk5C,GAAAj+B,EAAAq1C,EAAA5vD,KAIA,IAAAA,EAAA,EAAAqZ,GAAAwE,EAAApjB,KAAA6sB,UAAA,IAAA5vB,OAAwDsI,EAAAqZ,IAAUrZ,EAClE,GAAA6d,EAAAqV,iBAAAlzB,GAIA,GAHAvF,EAAAojB,EAAApjB,KAAA6sB,SAAAtnB,GAAAvF,KAGAgoB,GAAApK,SAAA5d,EAAA,IAGA,IAFA6sB,EAAAtnB,GAAA,GAEAo3B,EAAA,EAAAiG,EAAA5iC,EAAA/C,OAAoC0/B,EAAAiG,IAAUjG,EAC9Cs4B,EAAAlX,GAAAj+B,EAAA9f,EAAA28B,IACAu4B,EAAArwD,KAAAowD,GACApoC,EAAAtnB,GAAAo3B,GAAAs4B,MAEK,CACL,IAAAt4B,EAAA,EAAAiG,EAAAnL,EAAAx6B,OAAsC0/B,EAAAiG,IAAUjG,EAChDu4B,EAAArwD,KAAA4yB,EAAAkF,IAEA9P,EAAAtnB,GAAAkyB,EAAAjhB,MAAA,QAGAqW,EAAAtnB,GAAA,GAIAkyB,EAAAx6B,SAEAw6B,EAAAk7B,GAAAl7B,GAAA8M,KAAAmuB,IACAroD,EAAAC,KAAAD,MAAAotB,EAAA,IACAltB,EAAAD,KAAAC,MAAAktB,IAAAx6B,OAAA,KAGAi4D,EAAAj4D,SACAi4D,EAAAvC,GAAAuC,GAAA3wB,KAAAmuB,IACAroD,EAAAC,KAAAD,MAAA6qD,EAAA,IACA3qD,EAAAD,KAAAC,MAAA2qD,IAAAj4D,OAAA,KAGAoN,EAAA0zC,GAAAj+B,EAAAm0C,EAAA5pD,QACAE,EAAAwzC,GAAAj+B,EAAAm0C,EAAA1pD,QAGAF,MAAAsnD,IAAA+B,EAAAxV,QAAAtzB,KAAAC,MAAAmgC,GAAA3gD,EACAE,MAAAknD,IAAAiC,EAAAvV,MAAAvzB,KAAAC,MAAAmgC,GAAA,EAAAzgD,EAGAuV,EAAAzV,IAAAC,KAAAD,MAAAE,GACAuV,EAAAvV,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAGAuV,EAAAs1C,YAAAt1C,EAAA+X,eACA/X,EAAAu1C,OAAA,GACAv1C,EAAAw1C,YAAA,CACAt1D,KAAAk1D,EACAroC,WACA4K,WAIAyqB,WAAA,WACA,IAOA38C,EAAAqZ,EAAAq2C,EAPAn1C,EAAAxe,KACA+I,EAAAyV,EAAAzV,IACAE,EAAAuV,EAAAvV,IACA2U,EAAAY,EAAAZ,QACA+0C,EAAA/0C,EAAA00C,KACAsB,EAAA,GACAh8B,EAAA,GAGA,OAAAha,EAAAga,MAAAxc,QACA,WACAw4C,EAAAp1C,EAAAw1C,YAAAt1D,KACA,MACA,aACAk1D,EAAAp1C,EAAAw1C,YAAA79B,OACA,MACA,WACA,QACAy9B,EAAAnB,GAAAj0C,EAAAzV,EAAAE,EAAAuV,EAAAy1C,iBAAAlrD,IAaA,IAVA,UAAA6U,EAAAwW,QAAAw/B,EAAAj4D,SACAoN,EAAA6qD,EAAA,GACA3qD,EAAA2qD,IAAAj4D,OAAA,IAIAoN,EAAA0zC,GAAAj+B,EAAAm0C,EAAA5pD,QACAE,EAAAwzC,GAAAj+B,EAAAm0C,EAAA1pD,QAGAhF,EAAA,EAAAqZ,EAAAs2C,EAAAj4D,OAAuCsI,EAAAqZ,IAAUrZ,GACjD0vD,EAAAC,EAAA3vD,KACA8E,GAAA4qD,GAAA1qD,GACA2uB,EAAAr0B,KAAAowD,GAiBA,OAbAn1C,EAAAzV,MACAyV,EAAAvV,MAGAuV,EAAA01C,MAAAvB,EAAAjJ,MAnVA,SAAA/xC,EAAAigB,EAAAg7B,EAAA7pD,EAAAE,GACA,IACAhF,EAAAylD,EADApsC,EAAA6zC,GAAAx1D,OAGA,IAAAsI,EAAAqZ,EAAA,EAAmBrZ,GAAAktD,GAAApyC,QAAA6zC,GAA6B3uD,IAEhD,GADAylD,EAAAyH,GAAAltD,GACAssD,GAAA7G,GAAA+G,QAAA94C,EAAA06C,SAAA1V,KAAA1zC,EAAAF,EAAA2gD,IAAA9xB,EAAAj8B,OACA,OAAA+tD,EAIA,OAAAyH,GAAAyB,EAAAzB,GAAApyC,QAAA6zC,GAAA,GAwUAuB,CAAA31C,EAAAoZ,EAAA+6B,EAAAC,QAAAp0C,EAAAzV,IAAAyV,EAAAvV,KACAuV,EAAA41C,WAAA5B,GAAAh0C,EAAA01C,OACA11C,EAAAu1C,OA5gBA,SAAAH,EAAA7qD,EAAAE,EAAAorD,GACA,cAAAA,IAAAT,EAAAj4D,OACA,OACA,CAAI22D,KAAAvpD,EAAAgjC,IAAA,GACJ,CAAIumB,KAAArpD,EAAA8iC,IAAA,IAIJ,IAEA9nC,EAAAqZ,EAAAze,EAAA84B,EAAA74B,EAFA2yD,EAAA,GACAnvB,EAAA,CAAAv5B,GAGA,IAAA9E,EAAA,EAAAqZ,EAAAs2C,EAAAj4D,OAAsCsI,EAAAqZ,IAAUrZ,GAChD0zB,EAAAi8B,EAAA3vD,IACA8E,GAAA4uB,EAAA1uB,GACAq5B,EAAA/+B,KAAAo0B,GAMA,IAFA2K,EAAA/+B,KAAA0F,GAEAhF,EAAA,EAAAqZ,EAAAglB,EAAA3mC,OAAiCsI,EAAAqZ,IAAUrZ,EAC3CnF,EAAAwjC,EAAAr+B,EAAA,GACApF,EAAAyjC,EAAAr+B,EAAA,GACA0zB,EAAA2K,EAAAr+B,QAGArI,IAAAiD,QAAAjD,IAAAkD,GAAAkK,KAAAuM,OAAAzW,EAAAD,GAAA,KAAA84B,GACA85B,EAAAluD,KAAA,CAAe+uD,KAAA36B,EAAAoU,IAAA9nC,GAAAqZ,EAAA,KAIf,OAAAm0C,EA4eA6C,CAAA91C,EAAAw1C,YAAAt1D,KAAAqK,EAAAE,EAAA2U,EAAAy2C,cACA71C,EAAA+1C,SA/PA,SAAA9C,EAAA75B,EAAA7uB,EAAAE,EAAA2U,GACA,IAEAu1C,EAAAn8B,EAFAxP,EAAA,EACA+P,EAAA,EAsBA,OAnBA3Z,EAAA0X,QAAAsC,EAAAj8B,SACAiiB,EAAA00C,KAAAvpD,MACAoqD,EAAA3B,GAAAC,EAAA,OAAA75B,EAAA,UAEApQ,EADA,IAAAoQ,EAAAj8B,OACA,EAAAw3D,GAEA3B,GAAAC,EAAA,OAAA75B,EAAA,UAAAu7B,GAAA,GAGAv1C,EAAA00C,KAAArpD,MACA+tB,EAAAw6B,GAAAC,EAAA,OAAA75B,IAAAj8B,OAAA,UAEA47B,EADA,IAAAK,EAAAj8B,OACAq7B,GAEAA,EAAAw6B,GAAAC,EAAA,OAAA75B,IAAAj8B,OAAA,eAKA,CAAS6rB,QAAA+P,OAuOTi9B,CAAAh2C,EAAAu1C,OAAAn8B,EAAA7uB,EAAAE,EAAA2U,GAEAA,EAAAga,MAAA5a,SACA4a,EAAA5a,UAvOA,SAAArF,EAAAhC,EAAA8+C,GACA,IACAxwD,EAAAqZ,EAAAxkB,EAAAymD,EADA3nB,EAAA,GAGA,IAAA3zB,EAAA,EAAAqZ,EAAA3H,EAAAha,OAAkCsI,EAAAqZ,IAAUrZ,EAC5CnL,EAAA6c,EAAA1R,GACAs7C,IAAAkV,GAAA37D,KAAA6e,EAAA06C,SAAAzV,QAAA9jD,EAAA27D,GAEA78B,EAAAr0B,KAAA,CACAzK,QACAymD,UAIA,OAAA3nB,EA4NA88B,CAAAl2C,EAAAoZ,EAAApZ,EAAA41C,aAGApgB,iBAAA,SAAAn4B,EAAA2O,GACA,IAAAhM,EAAAxe,KACAoyD,EAAA5zC,EAAA6zC,SACA3zD,EAAA8f,EAAAsD,MAAApjB,KACAi0D,EAAAn0C,EAAAZ,QAAA00C,KACAp8B,EAAAx3B,EAAAy3B,QAAAta,EAAAnd,EAAAy3B,OAAAx6B,OAAA+C,EAAAy3B,OAAAta,GAAA,GACA/iB,EAAA4F,EAAA6sB,SAAAf,GAAA9rB,KAAAmd,GAKA,OAHA6K,GAAApK,SAAAxjB,KACAo9B,EAAA1X,EAAA0Z,cAAAp/B,IAEA65D,EAAAgC,cACAvC,EAAA1V,OAAAwV,GAAA1zC,EAAA0X,GAAAy8B,EAAAgC,eAEA,iBAAAz+B,EACAA,EAEAk8B,EAAA1V,OAAAwV,GAAA1zC,EAAA0X,GAAAy8B,EAAAe,eAAAkB,WAOAC,mBAAA,SAAAvC,EAAAz2C,EAAA+b,EAAA8kB,GACA,IACA0V,EADApyD,KACAqyD,SACAz0C,EAFA5d,KAEA4d,QACA4+B,EAAA5+B,EAAA00C,KAAAoB,eACAoB,EAAAtY,EAJAx8C,KAIAk0D,OACAO,EALAz0D,KAKAo0D,WACAW,EAAAvY,EAAAiY,GACAO,GAAA5C,EAAAxV,QAAA0V,EAAAmC,GACAQ,EAAAr3C,EAAAga,MAAA2nB,MACAA,EAAA0V,EAAAlnB,SAAA0mB,GAAAM,GAAAzC,IAAA0C,EACA9+B,EAAAk8B,EAAA1V,OAAA4V,EAAA5V,IAAA6C,EAAAwV,EAAAD,IACAtT,EAAAjC,EAAA0V,EAAAr3C,EAAAga,MAAA0nB,MACA4V,EAAAhF,GAAA1O,EAAA5kC,SAAA4kC,EAAAC,cAEA,OAAAyT,IAAAh/B,EAAAra,EAAA+b,GAAA1B,GAGA6qB,qBAAA,SAAAnpB,GACA,IACA3zB,EAAAqZ,EADA6Y,EAAA,GAGA,IAAAlyB,EAAA,EAAAqZ,EAAAsa,EAAAj8B,OAAkCsI,EAAAqZ,IAAUrZ,EAC5CkyB,EAAA5yB,KAAAvD,KAAA60D,mBAAAj9B,EAAA3zB,GAAAnL,MAAAmL,EAAA2zB,IAGA,OAAAzB,GAMAg/B,kBAAA,SAAA7C,GACA,IAAA9zC,EAAAxe,KACAo1D,EAAA52C,EAAAZ,QAAAga,MAAA5a,QACAkG,EAAA1E,EAAAs1C,YAAAt1C,EAAAyD,MAAAzD,EAAA0D,OACAsF,EAAAhJ,EAAAs1C,YAAAsB,EAAA52C,EAAA+D,MAAA/D,EAAA6D,KAAA+yC,EAAA52C,EAAAgE,OAAAhE,EAAA8D,IACAypB,EAAAylB,GAAAhzC,EAAAu1C,OAAA,OAAAzB,EAAA,OACAh9B,EAAApS,GAAA1E,EAAA+1C,SAAA/sC,MAAAukB,IAAAvtB,EAAA+1C,SAAA/sC,MAAA,EAAAhJ,EAAA+1C,SAAAh9B,KAEA,OAAA69B,EAAA5tC,EAAA8N,EAAA9N,EAAA8N,GAGAmC,iBAAA,SAAA3+B,EAAA+iB,EAAA2O,GACA,IACA8nC,EAAA,KAUA,QARA12D,IAAAigB,QAAAjgB,IAAA4uB,IACA8nC,EAJAtyD,KAIAg0D,YAAAzoC,SAAAf,GAAA3O,IAGA,OAAAy2C,IACAA,EAAA7V,GARAz8C,KAQAlH,IAGA,OAAAw5D,EACA,OAZAtyD,KAYAm1D,kBAAA7C,IAIAx6B,gBAAA,SAAAjc,GACA,IAAA+b,EAAA53B,KAAA63B,WACA,OAAAhc,GAAA,GAAAA,EAAA+b,EAAAj8B,OACAqE,KAAAm1D,kBAAAv9B,EAAA/b,GAAA/iB,OACA,MAGAyqD,iBAAA,SAAAE,GACA,IAAAjlC,EAAAxe,KACAkjB,EAAA1E,EAAAs1C,YAAAt1C,EAAAyD,MAAAzD,EAAA0D,OACAsF,EAAAhJ,EAAAs1C,YAAAt1C,EAAA6D,KAAA7D,EAAA8D,IACAypB,GAAA7oB,GAAAugC,EAAAj8B,GAAAtE,EAAA,IAAA1E,EAAA+1C,SAAA/sC,MAAA,EAAAhJ,EAAA+1C,SAAA/sC,OAAAhJ,EAAA+1C,SAAAh9B,IACA+6B,EAAAd,GAAAhzC,EAAAu1C,OAAA,MAAAhoB,EAAA,QAGA,OAAAvtB,EAAA6zC,SAAAvV,QAAAwV,IAOA+C,cAAA,SAAAn/B,GACA,IACAo/B,EADAt1D,KACA4d,QAAAga,MACA29B,EAFAv1D,KAEA+hB,IAAA4yB,YAAAze,GAAAjU,MACAyN,EAAAhJ,GAAAu7B,UAAAqT,EAAArW,aACA2C,EAAA54C,KAAAuC,IAAAmkB,GACAqzB,EAAA/5C,KAAAwC,IAAAkkB,GACA8lC,EAAAtF,GAAAoF,EAAArvC,SAAAR,GAAAO,OAAAX,iBAEA,OAAAkwC,EAAA3T,EAAA4T,EAAAzS,GAMAkR,iBAAA,SAAAwB,GACA,IAAAj3C,EAAAxe,KAGA08C,EAAAl+B,EAAAZ,QAAA00C,KAAAoB,eAAAlD,YACAkF,EAAAl3C,EAAAq2C,mBAAAY,EAAA,KAAA/Y,GACA6Y,EAAA/2C,EAAA62C,cAAAK,GACAlS,EAAAhlC,EAAA+X,eAAA/X,EAAAyD,MAAAzD,EAAA0D,OACAwwC,EAAA1pD,KAAAkB,MAAAs5C,EAAA+R,GAEA,OAAA7C,EAAA,EAAAA,EAAA,KAKAiD,GApWA,CACA18B,SAAA,SASAo7B,aAAA,SASAjgC,OAAA,OAEAm/B,SAAA,GACAjB,KAAA,CACAC,QAAA,EACA7V,QAAA,EACAgN,MAAA,EACAn0C,OAAA,EACAqgD,eAAA,EACA3C,YAAA,EACAL,QAAA,cACAc,eAAA,IAEA97B,MAAA,CACAunB,UAAA,EAUA/jC,OAAA,OAEAmkC,MAAA,CACAxR,SAAA,KAuTAulB,GAAApL,UAAAyN,GAEA,IAAAxqC,GAAA,CACA0qC,SAAAzO,GACA/nC,OAAAirC,GACAxM,YAAAuN,GACAyK,aAAA3I,GACAmF,KAAAgB,IAGAyC,GAAA,CACAnB,SAAA,yBACApE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGAjU,GAAAC,MAAAH,SAAA,mBAAA13C,EAAA,CACA2wD,IAAA,SAEAxZ,QAAA,WACA,OAAAuZ,IAGAtZ,MAAA,SAAA3jD,EAAA4jD,GAMA,MALA,iBAAA5jD,GAAA,iBAAA4jD,EACA5jD,EAAAuM,EAAAvM,EAAA4jD,GACG5jD,aAAAuM,IACHvM,EAAAuM,EAAAvM,IAEAA,EAAAwf,UAAAxf,EAAAm9D,UAAA,MAGAvZ,OAAA,SAAA4V,EAAA5V,GACA,OAAAr3C,EAAAitD,GAAA5V,WAGA9S,IAAA,SAAA0oB,EAAA4D,EAAAxM,GACA,OAAArkD,EAAAitD,GAAA1oB,IAAAssB,EAAAxM,GAAAuM,WAGAtZ,KAAA,SAAA1zC,EAAAF,EAAA2gD,GACA,OAAArkD,EAAAwjB,SAAAxjB,EAAA4D,GAAA0zC,KAAAt3C,EAAA0D,KAAAotD,GAAAzM,IAGA9M,QAAA,SAAA0V,EAAA5I,EAAAsJ,GAEA,OADAV,EAAAjtD,EAAAitD,GACA,YAAA5I,EACA4I,EAAAW,WAAAD,GAAAiD,UAEA3D,EAAA1V,QAAA8M,GAAAuM,WAGApZ,MAAA,SAAAyV,EAAA5I,GACA,OAAArkD,EAAAitD,GAAAzV,MAAA6M,GAAAuM,WAWAnZ,QAAA,SAAAwV,GACA,OAAAjtD,EAAAitD,KAEC,IAED7sC,GAAAR,KAAA,UACAmnB,QAAA,CACAgqB,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACAtrC,QAAA,SAAA5P,GACA,IAAAS,EAAAT,EAAAoI,KACA1B,EAAA1G,EAAA0G,MACAgJ,EAAAhJ,EAAA0J,eAAA3P,GACA06C,EAAAzrC,GAAAhJ,EAAAqV,iBAAAtb,GACA8V,EAAA4kC,GAAAzrC,EAAAE,QAAA4G,WAAA,GACAj2B,EAAAg2B,EAAAh2B,QAAA,EAEA,OAAAA,EAAA,SAAAioB,EAAA3f,GACA,OAAAA,EAAAtI,GAAAg2B,EAAA1tB,GAAAijB,OAAA,MADA,MAKAsvC,SAAA,SAAAp7C,GACA,IAAAo7C,EAAAp7C,EAAAo7C,SACA/sD,EAAA+sD,IAAA/sD,EAAA,KACAC,EAAA8sD,IAAA9sD,EAAA,KAEA,gBAAAka,GACA,OACAna,EAAA,OAAAA,EAAAma,EAAAna,IACAC,EAAA,OAAAA,EAAAka,EAAAla,QAOA,SAAA+sD,GAAAxuB,EAAApsB,EAAAyS,GACA,IAEAjT,EAFAkM,EAAA0gB,EAAA9gB,QAAA,GACA3D,EAAA+D,EAAA/D,KAOA,QAJA5nB,IAAA4nB,IACAA,IAAA+D,EAAAsG,kBAGA,IAAArK,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADAnI,EAAA3D,WAAA8L,EAAA,IACAjH,SAAAlB,IAAArS,KAAAkB,MAAAmR,OAKA,MAJA,MAAAmI,EAAA,UAAAA,EAAA,KACAnI,EAAAQ,EAAAR,KAGAA,IAAAQ,GAAAR,EAAA,GAAAA,GAAAiT,IAIAjT,EAGA,OAAAmI,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAAkzC,GAAAt7C,GACA,IAIA4Y,EAJAzM,EAAAnM,EAAA6sB,GAAA9gB,QAAA,GACAxP,EAAAyD,EAAA6sB,GAAAvK,QAAA,GACAla,EAAApI,EAAAoI,KACAnI,EAAA,KAGA,GAAAkB,SAAAiH,GACA,YAmBA,GAZA,UAAAA,EACAnI,OAAAzf,IAAA2rB,EAAAovC,YAAAh/C,EAAA6K,OAAA+E,EAAAovC,YACE,QAAAnzC,EACFnI,OAAAzf,IAAA2rB,EAAAqvC,SAAAj/C,EAAA2K,IAAAiF,EAAAqvC,cACEh7D,IAAA2rB,EAAAsvC,UACFx7C,EAAAkM,EAAAsvC,UACEl/C,EAAA03C,gBACFh0C,EAAA1D,EAAA03C,kBACE13C,EAAA2e,eACFjb,EAAA1D,EAAA2e,gBAGAjb,QAAA,CACA,QAAAzf,IAAAyf,EAAA5R,QAAA7N,IAAAyf,EAAA3R,EACA,OAAA2R,EAGA,GAAAqL,GAAAnK,SAAAlB,GAEA,OACA5R,GAFAuqB,EAAArc,EAAA4e,gBAEAlb,EAAA,KACA3R,EAAAsqB,EAAA,KAAA3Y,GAKA,YAGA,SAAAy7C,GAAA54C,EAAArC,EAAAw6C,GACA,IAGAh7C,EAHAD,EAAA8C,EAAArC,GACA2H,EAAApI,EAAAoI,KACAuzC,EAAA,CAAAl7C,GAGA,IAAAw6C,EACA,OAAA7yC,EAGA,UAAAA,IAAA,IAAAuzC,EAAAh4C,QAAAyE,IAAA,CACA,IAAAjH,SAAAiH,GACA,OAAAA,EAIA,KADAnI,EAAA6C,EAAAsF,IAEA,SAGA,GAAAnI,EAAAk7C,QACA,OAAA/yC,EAGAuzC,EAAAxzD,KAAAigB,GACAA,EAAAnI,EAAAmI,KAGA,SAGA,SAAAwzC,GAAA57C,GACA,IAAAoI,EAAApI,EAAAoI,KACAzkB,EAAA,UAEA,WAAAykB,EACA,MAGAjH,SAAAiH,KACAzkB,EAAA,YAGAu3D,GAAAv3D,GAAAqc,IAGA,SAAA67C,GAAArzC,GACA,OAAAA,MAAAwO,KAGA,SAAA8kC,GAAAn1C,EAAAo1C,EAAAC,EAAAC,EAAAC,GACA,IAAArzD,EAEA,GAAAozD,GAAAC,EAAA,CAMA,IADAv1C,EAAAU,OAAA00C,EAAA,GAAA1tD,EAAA0tD,EAAA,GAAAztD,GACAzF,EAAA,EAAYA,EAAAozD,IAAUpzD,EACtByiB,GAAAE,OAAAtD,OAAAvB,EAAAo1C,EAAAlzD,EAAA,GAAAkzD,EAAAlzD,IAOA,IAHA8d,EAAAuB,OAAA8zC,EAAAE,EAAA,GAAA7tD,EAAA2tD,EAAAE,EAAA,GAAA5tD,GAGAzF,EAAAqzD,EAAA,EAAmBrzD,EAAA,IAAOA,EAC1ByiB,GAAAE,OAAAtD,OAAAvB,EAAAq1C,EAAAnzD,GAAAmzD,EAAAnzD,EAAA,QAiDA,IAAAszD,GAAA,CACA10D,GAAA,SAEA20D,oBAAA,SAAA11C,EAAAlE,GACA,IAGAkN,EAAA7mB,EAAAgkC,EAAA7sB,EAHAkT,GAAAxM,EAAApjB,KAAA6sB,UAAA,IAAA5vB,OACA06D,EAAAz4C,EAAAy4C,UACAn4C,EAAA,GAGA,IAAAja,EAAA,EAAaA,EAAAqqB,IAAWrqB,EACxB6mB,EAAAhJ,EAAA0J,eAAAvnB,GACAgkC,EAAAnd,EAAAE,QACA5P,EAAA,KAEA6sB,KAAA9gB,QAAA8gB,aAAA3a,GAAAwH,OACA1Z,EAAA,CACAm7C,QAAAz0C,EAAAqV,iBAAAlzB,GACAuf,KAAAizC,GAAAxuB,EAAAhkC,EAAAqqB,GACAxM,QACAmmB,OAIAnd,EAAA2sC,QAAAr8C,EACA8C,EAAA3a,KAAA6X,GAGA,IAAAnX,EAAA,EAAaA,EAAAqqB,IAAWrqB,GACxBmX,EAAA8C,EAAAja,MAKAmX,EAAAoI,KAAAszC,GAAA54C,EAAAja,EAAAoyD,GACAj7C,EAAAo7C,SAAAE,GAAAt7C,GACAA,EAAAs8C,OAAAV,GAAA57C,KAIAu8C,kBAAA,SAAA71C,EAAA7hB,GACA,IAAA6qB,EAAA7qB,EAAA6qB,KAAA2sC,QACA,GAAA3sC,EAAA,CAIA,IAAA/I,EAAAD,EAAAC,IACAkmB,EAAAnd,EAAAmd,GACAxgB,EAAAwgB,EAAA/gB,MACAyK,EAAAsW,EAAArW,WAAA,GACA8lC,EAAA5sC,EAAA4sC,OACArZ,EAAA52B,EAAAoG,iBAAApI,GAAAO,OAAAd,aAEAwyC,GAAArZ,GAAA1sB,EAAAh2B,SACA+qB,GAAAE,OAAA9C,SAAA/B,EAAAD,EAAAkR,WAlGA,SAAAjR,EAAA4P,EAAA+lC,EAAAjwC,EAAA42B,EAAAuZ,GACA,IAMA3zD,EAAAqZ,EAAAzB,EAAAg8C,EAAAC,EAAAC,EAAAC,EANA1pC,EAAAqD,EAAAh2B,OACAs2D,EAAAxqC,EAAAiK,SACAylC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAKA,IAFAv1C,EAAAsB,YAEApf,EAAA,EAAAqZ,EAAAgR,IAAAspC,EAAqC3zD,EAAAqZ,IAAUrZ,EAE/C4zD,EAAAlmC,EADA9V,EAAA5X,EAAAqqB,GACApH,MACA4wC,EAAAJ,EAAAG,EAAAh8C,EAAA4L,GACAswC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAA5zD,KAAAs0D,GACAP,EAAAF,EAAA7zD,KAAAu0D,IACGT,GAAAC,IACHrF,GAMA8F,GACAZ,EAAA5zD,KAAAs0D,GAEAG,GACAZ,EAAA7zD,KAAAu0D,KATAZ,GAAAn1C,EAAAo1C,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAYAF,GAAAn1C,EAAAo1C,EAAAC,EAAAC,EAAAC,GAEAv1C,EAAAY,YACAZ,EAAA6O,UAAAytB,EACAt8B,EAAAyB,OAyDAy0C,CAAAl2C,EAAA4P,EAAA+lC,EAAAjwC,EAAA42B,EAAApW,EAAAlW,OACArL,GAAAE,OAAA3C,WAAAlC,OAKAm2C,GAAAxxC,GAAAxK,KACAi8C,GAAAzxC,GAAAjK,eAoFA,SAAA27C,GAAAC,EAAApyC,GACA,OAAAoyC,EAAAC,eAAAD,EAAAE,SAAAtyC,EACAA,EACAoyC,EAAAE,SArFA9yC,GAAAR,KAAA,UACAqV,OAAA,CACA4E,SAAA,EACAjG,SAAA,MACAuK,WAAA,EACAxmB,SAAA,EACAlC,OAAA,IAGA6f,QAAA,SAAAC,EAAAC,GACA,IAAAhf,EAAAgf,EAAArQ,aACAguC,EAAAx4D,KAAA8hB,MACAgJ,EAAA0tC,EAAAhtC,eAAA3P,GAGAiP,EAAA9D,OAAA,OAAA8D,EAAA9D,QAAAwxC,EAAA95D,KAAA6sB,SAAA1P,GAAAmL,OAAA,KAGAwxC,EAAAxsC,UAGA4rB,QAAA,KACA6gB,QAAA,KAEAtiC,OAAA,CACAoiC,SAAA,GACAxlC,QAAA,GAYAwH,eAAA,SAAAzY,GACA,IAAApjB,EAAAojB,EAAApjB,KACA,OAAAgoB,GAAAviB,QAAAzF,EAAA6sB,UAAA7sB,EAAA6sB,SAAA9N,IAAA,SAAAuN,EAAA/mB,GACA,OACAm2B,KAAApP,EAAAkL,MACAtF,UAAAlK,GAAAviB,QAAA6mB,EAAA6C,iBAAA7C,EAAA6C,gBAAA,GAAA7C,EAAA6C,gBACA7G,QAAAlF,EAAAqV,iBAAAlzB,GACA+tB,QAAAhH,EAAAkG,eACAwnC,SAAA1tC,EAAAmG,WACAe,eAAAlH,EAAAoG,iBACAN,SAAA9F,EAAAqG,gBACAR,UAAA7F,EAAA+C,YACAgD,YAAA/F,EAAA8C,YACA4E,WAAA1H,EAAA0H,WAGAlI,aAAAvmB,IAEKjE,MAAA,MAKLm6B,eAAA,SAAArY,GACA,IAAAsY,EAAA,GACAA,EAAA72B,KAAA,cAAAue,EAAAjf,GAAA,aACA,QAAAoB,EAAA,EAAiBA,EAAA6d,EAAApjB,KAAA6sB,SAAA5vB,OAAgCsI,IACjDm2B,EAAA72B,KAAA,qCAAAue,EAAApjB,KAAA6sB,SAAAtnB,GAAA4pB,gBAAA,aACA/L,EAAApjB,KAAA6sB,SAAAtnB,GAAAiyB,OACAkE,EAAA72B,KAAAue,EAAApjB,KAAA6sB,SAAAtnB,GAAAiyB,OAEAkE,EAAA72B,KAAA,SAGA,OADA62B,EAAA72B,KAAA,SACA62B,EAAAC,KAAA,OAmBA,IAAAs+B,GAAAzwC,GAAA9J,OAAA,CAEA2I,WAAA,SAAAxtB,GACAmtB,GAAAtI,OAAApe,KAAAzG,GAGAyG,KAAA44D,eAAA,GAKA54D,KAAA64D,aAAA,KAGA74D,KAAA84D,cAAA,GAOAhZ,aAAAoY,GACAlsC,OAAA,SAAA+zB,EAAAC,EAAAC,GACA,IAAAzhC,EAAAxe,KA0BA,OAvBAwe,EAAAshC,eAGAthC,EAAAuhC,WACAvhC,EAAAwhC,YACAxhC,EAAAyhC,UAGAzhC,EAAA6hC,sBACA7hC,EAAA8hC,gBACA9hC,EAAA+hC,qBAEA/hC,EAAAu6C,oBACAv6C,EAAAw6C,cACAx6C,EAAAy6C,mBAGAz6C,EAAA4iC,YACA5iC,EAAA6iC,MACA7iC,EAAA8iC,WAEA9iC,EAAA+iC,cAEA/iC,EAAAid,SAEA8lB,YAAA2W,GAIA7X,oBAAA6X,GACA5X,cAAA,WACA,IAAA9hC,EAAAxe,KAEAwe,EAAA+X,gBAEA/X,EAAAyD,MAAAzD,EAAAuhC,SACAvhC,EAAA6D,KAAA,EACA7D,EAAA+D,MAAA/D,EAAAyD,QAEAzD,EAAA0D,OAAA1D,EAAAwhC,UAGAxhC,EAAA8D,IAAA,EACA9D,EAAAgE,OAAAhE,EAAA0D,QAIA1D,EAAAihC,YAAA,EACAjhC,EAAAkhC,WAAA,EACAlhC,EAAAmhC,aAAA,EACAnhC,EAAAohC,cAAA,EAGAphC,EAAAid,QAAA,CACAxZ,MAAA,EACAC,OAAA,IAGAq+B,mBAAA2X,GAIAa,kBAAAb,GACAc,YAAA,WACA,IAAAx6C,EAAAxe,KACAq4D,EAAA75C,EAAAZ,QAAAuY,QAAA,GACA+iC,EAAAxyC,GAAA9J,SAAAy7C,EAAA99B,eAAA,CAAA/b,EAAAsD,OAAAtD,IAAA,GAEA65C,EAAA35B,SACAw6B,IAAAx6B,OAAA,SAAAx7B,GACA,OAAAm1D,EAAA35B,OAAAx7B,EAAAsb,EAAAsD,MAAApjB,SAIA8f,EAAAZ,QAAAZ,SACAk8C,EAAAl8C,UAGAwB,EAAA06C,eAEAD,iBAAAf,GAIA9W,UAAA8W,GACA7W,IAAA,WACA,IAAA7iC,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACAy6C,EAAA/8B,EAAAnF,OACA+I,EAAA5D,EAAA4D,QAEAnd,EAAAvD,EAAAuD,IAEAo3C,EAAAzyC,GAAA9I,QAAAkI,WAAAuyC,GACApyC,EAAAkzC,EAAAj2C,KAGAk2C,EAAA56C,EAAAo6C,eAAA,GAEAn9B,EAAAjd,EAAAid,QACAlF,EAAA/X,EAAA+X,eAWA,GATAA,GACAkF,EAAAxZ,MAAAzD,EAAAuhC,SACAtkB,EAAAvZ,OAAAgd,EAAA,OAEAzD,EAAAxZ,MAAAid,EAAA,KACAzD,EAAAvZ,OAAA1D,EAAAwhC,WAIA9gB,EAGA,GAFAnd,EAAAmE,KAAAizC,EAAA7iD,OAEAigB,EAAA,CAIA,IAAA8iC,EAAA76C,EAAA66C,WAAA,IACAC,EAAA,EAEAv3C,EAAAo0B,UAAA,OACAp0B,EAAAq0B,aAAA,MAEA1vB,GAAA5J,KAAA0B,EAAA06C,YAAA,SAAAr+B,EAAA52B,GACA,IAAAs0D,EAAAH,GAAAC,EAAApyC,GACAhE,EAAAs2C,EAAAtyC,EAAA,EAAAlE,EAAA4yB,YAAA9Z,EAAAT,MAAAnY,OAEA,IAAAhe,GAAAo1D,IAAA19D,OAAA,GAAAsmB,EAAAo2C,EAAAtlC,QAAA0I,EAAAxZ,SACAq3C,GAAArzC,EAAAoyC,EAAAtlC,QACAsmC,IAAA19D,QAAAsI,EAAA,QAAAo0D,EAAAtlC,SAIAqmC,EAAAn1D,GAAA,CACAoe,KAAA,EACAC,IAAA,EACAL,QACAC,OAAA+D,GAGAozC,IAAA19D,OAAA,IAAAsmB,EAAAo2C,EAAAtlC,UAGA0I,EAAAvZ,QAAAo3C,MAEI,CACJ,IAAAC,EAAAlB,EAAAtlC,QACAymC,EAAAh7C,EAAAg7C,aAAA,GACAC,EAAApB,EAAAtlC,QACA2mC,EAAA,EACAC,EAAA,EACAC,EAAA3zC,EAAAszC,EAEA7yC,GAAA5J,KAAA0B,EAAA06C,YAAA,SAAAr+B,EAAA52B,GACA,IAAAs0D,EAAAH,GAAAC,EAAApyC,GACA4zC,EAAAtB,EAAAtyC,EAAA,EAAAlE,EAAA4yB,YAAA9Z,EAAAT,MAAAnY,MAGAhe,EAAA,GAAA01D,EAAAC,EAAAn+B,EAAAvZ,OAAAq3C,IACAE,GAAAC,EAAArB,EAAAtlC,QACAymC,EAAAj2D,KAAAm2D,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAA1wD,KAAAC,IAAAywD,EAAAG,GACAF,GAAAC,EAGAR,EAAAn1D,GAAA,CACAoe,KAAA,EACAC,IAAA,EACAL,MAAA43C,EACA33C,OAAA+D,KAIAwzC,GAAAC,EACAF,EAAAj2D,KAAAm2D,GACAj+B,EAAAxZ,OAAAw3C,EAIAj7C,EAAAyD,MAAAwZ,EAAAxZ,MACAzD,EAAA0D,OAAAuZ,EAAAvZ,QAEAo/B,SAAA4W,GAGA3hC,aAAA,WACA,cAAAv2B,KAAA4d,QAAAqb,UAAA,WAAAj5B,KAAA4d,QAAAqb,UAIA1L,KAAA,WACA,IAAA/O,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACAy6C,EAAA/8B,EAAAnF,OACApQ,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aACA40C,EAAA/zC,EAAAuH,SAAA2D,KACA8oC,EAAAv7C,EAAAyD,MACAo3C,EAAA76C,EAAA66C,WAEA,GAAA/9B,EAAA4D,QAAA,CACA,IAIA86B,EAJAj4C,EAAAvD,EAAAuD,IACAkjC,EAAAkT,GAAAE,EAAApT,UAAAl/B,EAAAZ,kBACAg0C,EAAAzyC,GAAA9I,QAAAkI,WAAAuyC,GACApyC,EAAAkzC,EAAAj2C,KAIAnB,EAAAo0B,UAAA,OACAp0B,EAAAq0B,aAAA,SACAr0B,EAAA8O,UAAA,GACA9O,EAAAgP,YAAAk0B,EACAljC,EAAA6O,UAAAq0B,EACAljC,EAAAmE,KAAAizC,EAAA7iD,OAEA,IAAAiiD,EAAAH,GAAAC,EAAApyC,GACAmzC,EAAA56C,EAAAo6C,eA6DAriC,EAAA/X,EAAA+X,eAEAyjC,EADAzjC,EACA,CACA9sB,EAAA+U,EAAA6D,MAAA03C,EAAAV,EAAA,MAAAhB,EAAAtlC,QACArpB,EAAA8U,EAAA8D,IAAA+1C,EAAAtlC,QACA9B,KAAA,GAGA,CACAxnB,EAAA+U,EAAA6D,KAAAg2C,EAAAtlC,QACArpB,EAAA8U,EAAA8D,IAAA+1C,EAAAtlC,QACA9B,KAAA,GAIA,IAAA2oC,EAAA3zC,EAAAoyC,EAAAtlC,QACArM,GAAA5J,KAAA0B,EAAA06C,YAAA,SAAAr+B,EAAA52B,GACA,IAAAg2D,EAAAl4C,EAAA4yB,YAAA9Z,EAAAT,MAAAnY,MACAA,EAAAs2C,EAAAtyC,EAAA,EAAAg0C,EACAxwD,EAAAuwD,EAAAvwD,EACAC,EAAAswD,EAAAtwD,EAKA6sB,EACAtyB,EAAA,GAAAwF,EAAAwY,EAAAo2C,EAAAtlC,QAAAvU,EAAA6D,KAAA7D,EAAAid,QAAAxZ,QACAvY,EAAAswD,EAAAtwD,GAAAkwD,EACAI,EAAA/oC,OACAxnB,EAAAuwD,EAAAvwD,EAAA+U,EAAA6D,MAAA03C,EAAAV,EAAAW,EAAA/oC,OAAA,EAAAonC,EAAAtlC,SAEK9uB,EAAA,GAAAyF,EAAAkwD,EAAAp7C,EAAA8D,IAAA9D,EAAAid,QAAAvZ,SACLzY,EAAAuwD,EAAAvwD,IAAA+U,EAAAg7C,aAAAQ,EAAA/oC,MAAAonC,EAAAtlC,QACArpB,EAAAswD,EAAAtwD,EAAA8U,EAAA8D,IAAA+1C,EAAAtlC,QACAinC,EAAA/oC,QA5FA,SAAAxnB,EAAAC,EAAAmxB,GACA,KAAAjjB,MAAA2gD,OAAA,IAKAx2C,EAAAgC,OAEA,IAAA8M,EAAAsnC,GAAAt9B,EAAAhK,UAAAipC,EAAA/rC,aAaA,GAZAhM,EAAA6O,UAAAunC,GAAAt9B,EAAAjK,UAAA1L,GACAnD,EAAAiQ,QAAAmmC,GAAAt9B,EAAA7I,QAAA8nC,EAAA5oC,gBACAnP,EAAAmQ,eAAAimC,GAAAt9B,EAAA3I,eAAA4nC,EAAA1oC,kBACArP,EAAA+O,SAAAqnC,GAAAt9B,EAAA/J,SAAAgpC,EAAAzoC,iBACAtP,EAAA8O,YACA9O,EAAAgP,YAAAonC,GAAAt9B,EAAA9J,YAAA7L,GAEAnD,EAAAkQ,aAEAlQ,EAAAkQ,YAAAkmC,GAAAt9B,EAAA69B,SAAAoB,EAAA3oC,aAGAmK,EAAAnF,QAAAmF,EAAAnF,OAAAmiC,cAAA,CAGA,IAAAl2C,EAAAm2C,EAAAvvD,KAAAkxD,MAAA,EACAv9B,EAAAlzB,EAAA8uD,EAAA,EACA37B,EAAAlzB,EAAAuc,EAAA,EAGAS,GAAAE,OAAA/D,UAAAd,EAAA8Y,EAAAnI,WAAAtQ,EAAAua,EAAAC,QAGA,IAAA/L,GACA9O,EAAA60B,WAAAntC,EAAAC,EAAA6uD,EAAAtyC,GAEAlE,EAAA6S,SAAAnrB,EAAAC,EAAA6uD,EAAAtyC,GAGAlE,EAAAmC,WAyDAi2C,CAAA1wD,EAAAC,EAAAmxB,GAEAu+B,EAAAn1D,GAAAoe,KAAA5Y,EACA2vD,EAAAn1D,GAAAqe,IAAA5Y,EA1DA,SAAAD,EAAAC,EAAAmxB,EAAAo/B,GACA,IAAAG,EAAAn0C,EAAA,EACAo0C,EAAA9B,EAAA6B,EAAA3wD,EACA6wD,EAAA5wD,EAAA0wD,EAEAr4C,EAAAs0B,SAAAxb,EAAAT,KAAAigC,EAAAC,GAEAz/B,EAAA7T,SAEAjF,EAAAsB,YACAtB,EAAA8O,UAAA,EACA9O,EAAAU,OAAA43C,EAAAC,GACAv4C,EAAAuB,OAAA+2C,EAAAJ,EAAAK,GACAv4C,EAAA0B,UAgDA4yB,CAAA5sC,EAAAC,EAAAmxB,EAAAo/B,GAEA1jC,EACAyjC,EAAAvwD,GAAAwY,EAAAo2C,EAAAtlC,QAEAinC,EAAAtwD,GAAAkwD,MAUAW,iBAAA,SAAA9wD,EAAAC,GACA,IACAzF,EAAAu2D,EAAAC,EADAj8C,EAAAxe,KAGA,GAAAyJ,GAAA+U,EAAA6D,MAAA5Y,GAAA+U,EAAA+D,OAAA7Y,GAAA8U,EAAA8D,KAAA5Y,GAAA8U,EAAAgE,OAGA,IADAi4C,EAAAj8C,EAAAo6C,eACA30D,EAAA,EAAcA,EAAAw2D,EAAA9+D,SAAesI,EAG7B,GAFAu2D,EAAAC,EAAAx2D,GAEAwF,GAAA+wD,EAAAn4C,MAAA5Y,GAAA+wD,EAAAn4C,KAAAm4C,EAAAv4C,OAAAvY,GAAA8wD,EAAAl4C,KAAA5Y,GAAA8wD,EAAAl4C,IAAAk4C,EAAAt4C,OAEA,OAAA1D,EAAA06C,YAAAj1D,GAKA,aAQAizC,YAAA,SAAAtc,GACA,IAGA8/B,EAHAl8C,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACA7e,EAAA,YAAA67B,EAAA77B,KAAA,QAAA67B,EAAA77B,KAGA,iBAAAA,GACA,IAAAu8B,EAAAsc,UAAAtc,EAAAm9B,QACA,WAEG,cAAA15D,EAKH,OAJA,IAAAu8B,EAAAX,QACA,OAOA+/B,EAAAl8C,EAAA+7C,iBAAA3/B,EAAAnxB,EAAAmxB,EAAAlxB,GAEA,UAAA3K,EACA27D,GAAAp/B,EAAAX,SAEAW,EAAAX,QAAAl2B,KAAA+Z,EAAAoc,EAAAuG,OAAAu5B,IAGAp/B,EAAAm9B,SAAAiC,IAAAl8C,EAAAq6C,eACAr6C,EAAAq6C,cACAv9B,EAAAm9B,QAAAh0D,KAAA+Z,EAAAoc,EAAAuG,OAAA3iB,EAAAq6C,cAEAr6C,EAAAq6C,aAAA6B,GAGAp/B,EAAAsc,SAAA8iB,GAEAp/B,EAAAsc,QAAAnzC,KAAA+Z,EAAAoc,EAAAuG,OAAAu5B,OAMA,SAAAC,GAAA74C,EAAA84C,GACA,IAAAtgC,EAAA,IAAAq+B,GAAA,CACA52C,IAAAD,EAAAC,IACAnE,QAAAg9C,EACA94C,UAGAwhB,GAAAK,UAAA7hB,EAAAwY,EAAAsgC,GACAt3B,GAAAC,OAAAzhB,EAAAwY,GACAxY,EAAAwY,SAGA,IAAAugC,GAAA,CACAh4D,GAAA,SASAi4D,SAAAnC,GAEAoC,WAAA,SAAAj5C,GACA,IAAA84C,EAAA94C,EAAAlE,QAAA0c,OAEAsgC,GACAD,GAAA74C,EAAA84C,IAIA9a,aAAA,SAAAh+B,GACA,IAAA84C,EAAA94C,EAAAlE,QAAA0c,OACAA,EAAAxY,EAAAwY,OAEAsgC,GACAl0C,GAAAzI,QAAA28C,EAAAn1C,GAAAO,OAAAsU,QAEAA,GACAgJ,GAAAK,UAAA7hB,EAAAwY,EAAAsgC,GACAtgC,EAAA1c,QAAAg9C,GAEAD,GAAA74C,EAAA84C,IAEGtgC,IACHgJ,GAAAG,UAAA3hB,EAAAwY,UACAxY,EAAAwY,SAIA0gC,WAAA,SAAAl5C,EAAA8Y,GACA,IAAAN,EAAAxY,EAAAwY,OACAA,GACAA,EAAA4c,YAAAtc,KAKAqgC,GAAAv0C,GAAAxK,KAEAuJ,GAAAR,KAAA,UACAmU,MAAA,CACA8F,SAAA,EACA5Y,UAAA,OACAkd,WAAA,EACAzQ,QAAA,GACAkG,SAAA,MACAmB,KAAA,GACAtf,OAAA,OAOA,IAAAogD,GAAAhzC,GAAA9J,OAAA,CACA2I,WAAA,SAAAxtB,GAEAmtB,GAAAtI,OADApe,KACAzG,GADAyG,KAIA44D,eAAA,IAKA9Y,aAAAmb,GACAjvC,OAAA,SAAA+zB,EAAAC,EAAAC,GACA,IAAAzhC,EAAAxe,KA0BA,OAvBAwe,EAAAshC,eAGAthC,EAAAuhC,WACAvhC,EAAAwhC,YACAxhC,EAAAyhC,UAGAzhC,EAAA6hC,sBACA7hC,EAAA8hC,gBACA9hC,EAAA+hC,qBAEA/hC,EAAAu6C,oBACAv6C,EAAAw6C,cACAx6C,EAAAy6C,mBAGAz6C,EAAA4iC,YACA5iC,EAAA6iC,MACA7iC,EAAA8iC,WAEA9iC,EAAA+iC,cAEA/iC,EAAAid,SAGA8lB,YAAA0Z,GAIA5a,oBAAA4a,GACA3a,cAAA,WACA,IAAA9hC,EAAAxe,KAEAwe,EAAA+X,gBAEA/X,EAAAyD,MAAAzD,EAAAuhC,SACAvhC,EAAA6D,KAAA,EACA7D,EAAA+D,MAAA/D,EAAAyD,QAEAzD,EAAA0D,OAAA1D,EAAAwhC,UAGAxhC,EAAA8D,IAAA,EACA9D,EAAAgE,OAAAhE,EAAA0D,QAIA1D,EAAAihC,YAAA,EACAjhC,EAAAkhC,WAAA,EACAlhC,EAAAmhC,aAAA,EACAnhC,EAAAohC,cAAA,EAGAphC,EAAAid,QAAA,CACAxZ,MAAA,EACAC,OAAA,IAGAq+B,mBAAA0a,GAIAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAIA7Z,UAAA6Z,GACA5Z,IAAA,WACA,IAAA7iC,EAAAxe,KACAs7B,EAAA9c,EAAAZ,QACAshB,EAAA5D,EAAA4D,QACAzD,EAAAjd,EAAAid,QACA0/B,EAAAz0C,GAAAviB,QAAAm3B,EAAAlB,MAAAkB,EAAAlB,KAAAz+B,OAAA,EACAy/D,EAAA10C,GAAA9I,QAAAkI,WAAAwV,GACA0xB,EAAA9tB,EAAAi8B,EAAAC,EAAA/0C,WAAA,EAAAiV,EAAAvI,QAAA,EAEAvU,EAAA+X,gBACAkF,EAAAxZ,MAAAzD,EAAAuhC,SACAtkB,EAAAvZ,OAAA8qC,IAEAvxB,EAAAxZ,MAAA+qC,EACAvxB,EAAAvZ,OAAA1D,EAAAwhC,WAGAxhC,EAAAyD,MAAAwZ,EAAAxZ,MACAzD,EAAA0D,OAAAuZ,EAAAvZ,QAGAo/B,SAAA2Z,GAGA1kC,aAAA,WACA,IAAAwV,EAAA/rC,KAAA4d,QAAAqb,SACA,cAAA8S,GAAA,WAAAA,GAIAxe,KAAA,WACA,IAAA/O,EAAAxe,KACA+hB,EAAAvD,EAAAuD,IACAuZ,EAAA9c,EAAAZ,QAEA,GAAA0d,EAAA4D,QAAA,CACA,IAQA6gB,EAAAsb,EAAAC,EARAF,EAAA10C,GAAA9I,QAAAkI,WAAAwV,GACAjV,EAAA+0C,EAAA/0C,WACAiP,EAAAjP,EAAA,EAAAiV,EAAAvI,QACAhQ,EAAA,EACAT,EAAA9D,EAAA8D,IACAD,EAAA7D,EAAA6D,KACAG,EAAAhE,EAAAgE,OACAD,EAAA/D,EAAA+D,MAGAR,EAAA6O,UAAAlK,GAAAjK,eAAA6e,EAAA2pB,UAAAx/B,GAAAO,OAAAb,kBACApD,EAAAmE,KAAAk1C,EAAA9kD,OAGAkI,EAAA+X,gBACA8kC,EAAAh5C,GAAAE,EAAAF,GAAA,EACAi5C,EAAAh5C,EAAAgT,EACAyqB,EAAAx9B,EAAAF,IAEAg5C,EAAA,SAAA//B,EAAArC,SAAA5W,EAAAiT,EAAA/S,EAAA+S,EACAgmC,EAAAh5C,GAAAE,EAAAF,GAAA,EACAy9B,EAAAv9B,EAAAF,EACAS,EAAA/Z,KAAAoC,IAAA,SAAAkwB,EAAArC,UAAA,QAGAlX,EAAAgC,OACAhC,EAAA8kC,UAAAwU,EAAAC,GACAv5C,EAAArH,OAAAqI,GACAhB,EAAAo0B,UAAA,SACAp0B,EAAAq0B,aAAA,SAEA,IAAAhc,EAAAkB,EAAAlB,KACA,GAAA1T,GAAAviB,QAAAi2B,GAEA,IADA,IAAA1wB,EAAA,EACAzF,EAAA,EAAmBA,EAAAm2B,EAAAz+B,SAAiBsI,EACpC8d,EAAAs0B,SAAAjc,EAAAn2B,GAAA,EAAAyF,EAAAq2C,GACAr2C,GAAA2c,OAGAtE,EAAAs0B,SAAAjc,EAAA,IAAA2lB,GAGAh+B,EAAAmC,cAKA,SAAAq3C,GAAAz5C,EAAA05C,GACA,IAAApiC,EAAA,IAAA8hC,GAAA,CACAn5C,IAAAD,EAAAC,IACAnE,QAAA49C,EACA15C,UAGAwhB,GAAAK,UAAA7hB,EAAAsX,EAAAoiC,GACAl4B,GAAAC,OAAAzhB,EAAAsX,GACAtX,EAAA25C,WAAAriC,EAGA,IAwCAgT,GAAA,GACAgqB,GAAAmB,GACAj9B,GAAAugC,GACAzhC,GA3CA,CACAv2B,GAAA,QASAi4D,SAAAI,GAEAH,WAAA,SAAAj5C,GACA,IAAA05C,EAAA15C,EAAAlE,QAAAwb,MAEAoiC,GACAD,GAAAz5C,EAAA05C,IAIA1b,aAAA,SAAAh+B,GACA,IAAA05C,EAAA15C,EAAAlE,QAAAwb,MACAqiC,EAAA35C,EAAA25C,WAEAD,GACA90C,GAAAzI,QAAAu9C,EAAA/1C,GAAAO,OAAAoT,OAEAqiC,GACAn4B,GAAAK,UAAA7hB,EAAA25C,EAAAD,GACAC,EAAA79C,QAAA49C,GAEAD,GAAAz5C,EAAA05C,IAEGC,IACHn4B,GAAAG,UAAA3hB,EAAA25C,UACA35C,EAAA25C,cAmDA,QAAAryD,MA1CAgjC,GAAAgqB,UACAhqB,GAAA9R,UACA8R,GAAAhT,SAOA6iB,GAAAhgC,QAAAyK,GAtlKA,WAiZA,SAAAg1C,EAAAC,EAAAj0B,EAAAk0B,GACA,IAAAC,EAYA,MAXA,iBAAAF,GACAE,EAAApkD,SAAAkkD,EAAA,KAEA,IAAAA,EAAA58C,QAAA,OAEA88C,IAAA,IAAAn0B,EAAA0B,WAAAwyB,KAGAC,EAAAF,EAGAE,EAOA,SAAAC,EAAAhjE,GACA,OAAAA,SAAA,SAAAA,EAUA,SAAAijE,EAAAC,EAAAC,EAAAC,GACA,IAAAz0C,EAAAygB,SAAAi0B,YACA/yB,EAAA1iB,GAAA01C,eAAAJ,GACAK,EAAA50C,EAAA60C,iBAAAN,GAAAC,GACAM,EAAA90C,EAAA60C,iBAAAlzB,GAAA6yB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAlgD,OAAAolB,kBAEA,OAAA46B,GAAAC,EACAzzD,KAAAD,IACAyzD,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EACAD,EAAAf,EAAAa,EAAAnzB,EAAA8yB,GAAAQ,GAGA,OA3bAh2C,GAAAoc,MAAA,SAAA65B,EAAAC,GACA,GAAAl2C,GAAAviB,QAAAw4D,IAAAz4D,MAAAK,UAAAm6B,OACA,OAAAi+B,EAAAj+B,OAAAk+B,GAEA,IAAAC,EAAA,GAQA,OANAn2C,GAAA5J,KAAA6/C,EAAA,SAAAz5D,GACA05D,EAAA15D,IACA25D,EAAAt5D,KAAAL,KAIA25D,GAEAn2C,GAAAiD,UAAAzlB,MAAAK,UAAAolB,UACA,SAAA3K,EAAApC,EAAAvf,GACA,OAAA2hB,EAAA2K,UAAA/M,EAAAvf,IAEA,SAAA2hB,EAAApC,EAAAvf,GACAA,OAAAzB,IAAAyB,EAAA2hB,EAAA3hB,EACA,QAAA4G,EAAA,EAAAqZ,EAAA0B,EAAArjB,OAAuCsI,EAAAqZ,IAAUrZ,EACjD,GAAA2Y,EAAAnY,KAAApH,EAAA2hB,EAAA/a,KAAA+a,GACA,OAAA/a,EAGA,UAEAyiB,GAAA6e,cAAA,SAAAu3B,EAAAF,EAAAG,GAEAr2C,GAAAtK,cAAA2gD,KACAA,GAAA,GAEA,QAAA94D,EAAA84D,EAAA,EAA8B94D,EAAA64D,EAAAnhE,OAA0BsI,IAAA,CACxD,IAAA+4D,EAAAF,EAAA74D,GACA,GAAA24D,EAAAI,GACA,OAAAA,IAIAt2C,GAAAu2C,kBAAA,SAAAH,EAAAF,EAAAG,GAEAr2C,GAAAtK,cAAA2gD,KACAA,EAAAD,EAAAnhE,QAEA,QAAAsI,EAAA84D,EAAA,EAA8B94D,GAAA,EAAQA,IAAA,CACtC,IAAA+4D,EAAAF,EAAA74D,GACA,GAAA24D,EAAAI,GACA,OAAAA,IAMAt2C,GAAAuB,SAAA,SAAAzd,GACA,OAAAoN,MAAAF,WAAAlN,KAAA+R,SAAA/R,IAEAkc,GAAAwjC,aAAA,SAAAzgD,EAAAC,EAAAwzD,GACA,OAAAl0D,KAAAwpB,IAAA/oB,EAAAC,GAAAwzD,GAEAx2C,GAAAujC,YAAA,SAAAxgD,EAAAyzD,GACA,IAAAC,EAAAn0D,KAAAuM,MAAA9L,GACA,OAAA0zD,EAAAD,EAAAzzD,GAAA0zD,EAAAD,EAAAzzD,GAEAid,GAAAzd,IAAA,SAAA+V,GACA,OAAAA,EAAAs1B,OAAA,SAAArrC,EAAAnQ,GACA,OAAA8e,MAAA9e,GAGAmQ,EAFAD,KAAAC,MAAAnQ,IAGG0jB,OAAA6wC,oBAEH3mC,GAAA3d,IAAA,SAAAiW,GACA,OAAAA,EAAAs1B,OAAA,SAAAvrC,EAAAjQ,GACA,OAAA8e,MAAA9e,GAGAiQ,EAFAC,KAAAD,MAAAjQ,IAGG0jB,OAAAolB,oBAEHlb,GAAA4hC,KAAAt/C,KAAAs/C,KACA,SAAA7+C,GACA,OAAAT,KAAAs/C,KAAA7+C,IAEA,SAAAA,GAEA,WADAA,OACAmO,MAAAnO,GACAA,EAEAA,EAAA,QAEAid,GAAA62B,MAAAv0C,KAAAu0C,MACA,SAAA9zC,GACA,OAAAT,KAAAu0C,MAAA9zC,IAEA,SAAAA,GACA,IAAA2zD,EAAAp0D,KAAAjG,IAAA0G,GAAAT,KAAAq0D,OAGAC,EAAAt0D,KAAAuM,MAAA6nD,GACAG,EAAA9zD,IAAAT,KAAAQ,IAAA,GAAA8zD,GAEA,OAAAC,EAAAD,EAAAF,GAEA12C,GAAAu7B,UAAA,SAAAtnC,GACA,OAAAA,GAAA3R,KAAAoC,GAAA,MAEAsb,GAAAmnC,UAAA,SAAA2P,GACA,OAAAA,GAAA,IAAAx0D,KAAAoC,KAUAsb,GAAAsjC,eAAA,SAAAvgD,GACA,GAAAid,GAAAnK,SAAA9S,GAAA,CAKA,IAFA,IAAAmxB,EAAA,EACAxwB,EAAA,EACApB,KAAAuM,MAAA9L,EAAAmxB,OAAAnxB,GACAmxB,GAAA,GACAxwB,IAEA,OAAAA,IAIAsc,GAAA+I,kBAAA,SAAAguC,EAAAC,GACA,IAAAC,EAAAD,EAAAj0D,EAAAg0D,EAAAh0D,EACAm0D,EAAAF,EAAAh0D,EAAA+zD,EAAA/zD,EACAm0D,EAAA70D,KAAAqC,KAAAsyD,IAAAC,KAEAluC,EAAA1mB,KAAAmC,MAAAyyD,EAAAD,GAMA,OAJAjuC,GAAA,GAAA1mB,KAAAoC,KACAskB,GAAA,EAAA1mB,KAAAoC,IAGA,CACAskB,QACAC,SAAAkuC,IAGAn3C,GAAA4pB,sBAAA,SAAArO,EAAAC,GACA,OAAAl5B,KAAAqC,KAAArC,KAAAQ,IAAA04B,EAAAz4B,EAAAw4B,EAAAx4B,EAAA,GAAAT,KAAAQ,IAAA04B,EAAAx4B,EAAAu4B,EAAAv4B,EAAA,KASAgd,GAAAo3C,WAAA,SAAAC,GACA,OAAAA,EAAA,WAWAr3C,GAAAg/B,YAAA,SAAA5jC,EAAA2hC,EAAAxhC,GACA,IAAAq2B,EAAAx2B,EAAAk8C,wBACAC,EAAAh8C,EAAA,EACA,OAAAjZ,KAAAuM,OAAAkuC,EAAAwa,GAAA3lB,KAAA2lB,GAGAv3C,GAAAmY,YAAA,SAAAq/B,EAAAC,EAAAC,EAAA9zD,GAMA,IAAA6Z,EAAA+5C,EAAA9rC,KAAA+rC,EAAAD,EACA1sC,EAAA2sC,EACAr/D,EAAAs/D,EAAAhsC,KAAA+rC,EAAAC,EAEAC,EAAAr1D,KAAAqC,KAAArC,KAAAQ,IAAAgoB,EAAA/nB,EAAA0a,EAAA1a,EAAA,GAAAT,KAAAQ,IAAAgoB,EAAA9nB,EAAAya,EAAAza,EAAA,IACA40D,EAAAt1D,KAAAqC,KAAArC,KAAAQ,IAAA1K,EAAA2K,EAAA+nB,EAAA/nB,EAAA,GAAAT,KAAAQ,IAAA1K,EAAA4K,EAAA8nB,EAAA9nB,EAAA,IAEA60D,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAGAC,EAAA3mD,MAAA2mD,GAAA,EAAAA,EACAC,EAAA5mD,MAAA4mD,GAAA,EAAAA,EAEA,IAAAC,EAAAn0D,EAAAi0D,EACAG,EAAAp0D,EAAAk0D,EAEA,OACAr6C,SAAA,CACA1a,EAAA+nB,EAAA/nB,EAAAg1D,GAAA3/D,EAAA2K,EAAA0a,EAAA1a,GACAC,EAAA8nB,EAAA9nB,EAAA+0D,GAAA3/D,EAAA4K,EAAAya,EAAAza,IAEA5K,KAAA,CACA2K,EAAA+nB,EAAA/nB,EAAAi1D,GAAA5/D,EAAA2K,EAAA0a,EAAA1a,GACAC,EAAA8nB,EAAA9nB,EAAAg1D,GAAA5/D,EAAA4K,EAAAya,EAAAza,MAIAgd,GAAAi4C,QAAAniD,OAAAmiD,SAAA,MACAj4C,GAAAkY,oBAAA,SAAAjN,GAMA,IAUA1tB,EAAA26D,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BA/8B,EAhEAg9B,GAAAxtC,GAAA,IAAAlU,IAAA,SAAAmG,GACA,OACA2D,MAAA3D,EAAAuD,OACAi4C,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAAxjE,OAEA,IAAAsI,EAAA,EAAaA,EAAAq7D,IAAer7D,EAE5B,KADA46D,EAAAM,EAAAl7D,IACAsjB,MAAA6K,KAAA,CAMA,GAFAwsC,EAAA36D,EAAA,EAAAk7D,EAAAl7D,EAAA,SACA66D,EAAA76D,EAAAq7D,EAAA,EAAAH,EAAAl7D,EAAA,WACA66D,EAAAv3C,MAAA6K,KAAA,CACA,IAAAmtC,EAAAT,EAAAv3C,MAAA9d,EAAAo1D,EAAAt3C,MAAA9d,EAGAo1D,EAAAO,OAAA,IAAAG,GAAAT,EAAAv3C,MAAA7d,EAAAm1D,EAAAt3C,MAAA7d,GAAA61D,EAAA,GAGAX,KAAAr3C,MAAA6K,KACAysC,EAAAQ,GAAAR,EAAAO,QACIN,KAAAv3C,MAAA6K,KACJysC,EAAAQ,GAAAT,EAAAQ,OACIp/D,KAAAsoD,KAAAsW,EAAAQ,UAAAp/D,KAAAsoD,KAAAuW,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAAn7D,EAAA,EAAaA,EAAAq7D,EAAA,IAAmBr7D,EAChC46D,EAAAM,EAAAl7D,GACA66D,EAAAK,EAAAl7D,EAAA,GACA46D,EAAAt3C,MAAA6K,MAAA0sC,EAAAv3C,MAAA6K,OAIA1L,GAAAwjC,aAAA2U,EAAAO,OAAA,EAAAp/D,KAAA2+D,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAAl2D,KAAAQ,IAAAu1D,EAAA,GAAA/1D,KAAAQ,IAAAw1D,EAAA,KACA,IAIAC,EAAA,EAAAj2D,KAAAqC,KAAA6zD,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAAn7D,EAAA,EAAaA,EAAAq7D,IAAer7D,GAC5B46D,EAAAM,EAAAl7D,IACAsjB,MAAA6K,OAIAwsC,EAAA36D,EAAA,EAAAk7D,EAAAl7D,EAAA,QACA66D,EAAA76D,EAAAq7D,EAAA,EAAAH,EAAAl7D,EAAA,QACA26D,MAAAr3C,MAAA6K,OACA+P,GAAA08B,EAAAt3C,MAAA9d,EAAAm1D,EAAAr3C,MAAA9d,GAAA,EACAo1D,EAAAt3C,MAAA7C,sBAAAm6C,EAAAt3C,MAAA9d,EAAA04B,EACA08B,EAAAt3C,MAAA3C,sBAAAi6C,EAAAt3C,MAAA7d,EAAAy4B,EAAA08B,EAAAQ,IAEAP,MAAAv3C,MAAA6K,OACA+P,GAAA28B,EAAAv3C,MAAA9d,EAAAo1D,EAAAt3C,MAAA9d,GAAA,EACAo1D,EAAAt3C,MAAA5C,kBAAAk6C,EAAAt3C,MAAA9d,EAAA04B,EACA08B,EAAAt3C,MAAA1C,kBAAAg6C,EAAAt3C,MAAA7d,EAAAy4B,EAAA08B,EAAAQ,MAIA34C,GAAAoY,SAAA,SAAA69B,EAAA9gD,EAAA+7C,GACA,OAAAA,EACA/7C,GAAA8gD,EAAAhhE,OAAA,EAAAghE,EAAA,GAAAA,EAAA9gD,EAAA,GAEAA,GAAA8gD,EAAAhhE,OAAA,EAAAghE,IAAAhhE,OAAA,GAAAghE,EAAA9gD,EAAA,IAEA6K,GAAAyL,aAAA,SAAAwqC,EAAA9gD,EAAA+7C,GACA,OAAAA,EACA/7C,GAAA,EAAA8gD,IAAAhhE,OAAA,GAAAghE,EAAA9gD,EAAA,GAEAA,GAAA,EAAA8gD,EAAA,GAAAA,EAAA9gD,EAAA,IAGA6K,GAAAqjC,QAAA,SAAA1xB,EAAA9iB,GACA,IAAA6nD,EAAAp0D,KAAAkB,MAAAwc,GAAA62B,MAAAllB,IACAmnC,EAAAnnC,EAAArvB,KAAAQ,IAAA,GAAA4zD,GAuBA,OApBA7nD,EACAiqD,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,IAGAx2D,KAAAQ,IAAA,GAAA4zD,IAGA12C,GAAAmD,iBACA,oBAAA9N,OACA,SAAAa,GACAA,KAGAb,OAAA0N,uBACA1N,OAAA0jD,6BACA1jD,OAAA2jD,0BACA3jD,OAAA4jD,wBACA5jD,OAAA6jD,yBACA,SAAAhjD,GACA,OAAAb,OAAA8jD,WAAAjjD,EAAA,SAIA8J,GAAAwa,oBAAA,SAAA4+B,EAAAh+C,GACA,IAAAoN,EAAA0D,EACAgI,EAAAklC,EAAAC,eAAAD,EACAl5C,EAAAk5C,EAAAzkD,QAAAykD,EAAAE,WACAC,EAAAr5C,EAAAs5C,wBAEAC,EAAAvlC,EAAAulC,QACAA,KAAAxkE,OAAA,GACAuzB,EAAAixC,EAAA,GAAAC,QACAxtC,EAAAutC,EAAA,GAAAE,UAGAnxC,EAAA0L,EAAAwlC,QACAxtC,EAAAgI,EAAAylC,SAMA,IAAA5gB,EAAA/nC,WAAAgP,GAAA0gB,SAAAxgB,EAAA,iBACA84B,EAAAhoC,WAAAgP,GAAA0gB,SAAAxgB,EAAA,gBACA+4B,EAAAjoC,WAAAgP,GAAA0gB,SAAAxgB,EAAA,kBACAg5B,EAAAloC,WAAAgP,GAAA0gB,SAAAxgB,EAAA,mBACA3E,EAAAg+C,EAAA19C,MAAA09C,EAAA59C,KAAAo9B,EAAAE,EACAz9B,EAAA+9C,EAAAz9C,OAAAy9C,EAAA39C,IAAAo9B,EAAAE,EAOA,OAHA1wB,EAAAlmB,KAAAuM,OAAA2Z,EAAA+wC,EAAA59C,KAAAo9B,GAAA,EAAA74B,EAAA3E,MAAAH,EAAAk8C,yBACAprC,EAAA5pB,KAAAuM,OAAAqd,EAAAqtC,EAAA39C,IAAAo9B,GAAA,EAAA94B,EAAA1E,OAAAJ,EAAAk8C,yBAEA,CACAv0D,EAAAylB,EACAxlB,EAAAkpB,IAuDAlM,GAAA45C,mBAAA,SAAAtE,GACA,OAAAD,EAAAC,EAAA,4BAGAt1C,GAAA65C,oBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,8BAKAt1C,GAAA85C,kBAAA,SAAAt3B,EAAAnW,EAAA0tC,GAGA,OAFA1tC,EAAArM,GAAA0gB,SAAA8B,EAAAnW,IAEAhU,QAAA,QAAA0hD,EAAAhpD,SAAAsb,EAAA,QAAAtb,SAAAsb,EAAA,KAKArM,GAAA01C,eAAA,SAAAJ,GACA,IAAA0E,EAAA1E,EAAA5yB,WAIA,OAHAs3B,GAAA,wBAAAA,EAAAl8D,aACAk8D,IAAAC,MAEAD,GAEAh6C,GAAAoyB,gBAAA,SAAAkjB,GACA,IAAA9yB,EAAAxiB,GAAA01C,eAAAJ,GACA,IAAA9yB,EACA,OAAA8yB,EAAA3yB,YAGA,IAAAA,EAAAH,EAAAG,YACAoW,EAAA/4B,GAAA85C,kBAAAt3B,EAAA,eAAAG,GACAsW,EAAAj5B,GAAA85C,kBAAAt3B,EAAA,gBAAAG,GAEAlgC,EAAAkgC,EAAAoW,EAAAE,EACAihB,EAAAl6C,GAAA45C,mBAAAtE,GACA,OAAApkD,MAAAgpD,GAAAz3D,EAAAH,KAAAD,IAAAI,EAAAy3D,IAEAl6C,GAAAsyB,iBAAA,SAAAgjB,GACA,IAAA9yB,EAAAxiB,GAAA01C,eAAAJ,GACA,IAAA9yB,EACA,OAAA8yB,EAAA6E,aAGA,IAAAA,EAAA33B,EAAA23B,aACAnhB,EAAAh5B,GAAA85C,kBAAAt3B,EAAA,cAAA23B,GACAjhB,EAAAl5B,GAAA85C,kBAAAt3B,EAAA,iBAAA23B,GAEAz6D,EAAAy6D,EAAAnhB,EAAAE,EACAkhB,EAAAp6C,GAAA65C,oBAAAvE,GACA,OAAApkD,MAAAkpD,GAAA16D,EAAA4C,KAAAD,IAAA3C,EAAA06D,IAEAp6C,GAAA0gB,SAAA,SAAAa,EAAAd,GACA,OAAAc,EAAA84B,aACA94B,EAAA84B,aAAA55B,GACAe,SAAAi0B,YAAAG,iBAAAr0B,EAAA,MAAA+4B,iBAAA75B,IAEAzgB,GAAA2xB,YAAA,SAAAv2B,EAAAm/C,GACA,IAAAC,EAAAp/C,EAAAk8C,wBAAAiD,GAAA,oBAAAllD,eAAAu8B,kBAAA,EACA,OAAA4oB,EAAA,CAIA,IAAAt6C,EAAA9E,EAAA8E,OACA1E,EAAAJ,EAAAI,OACAD,EAAAH,EAAAG,MAEA2E,EAAA1E,SAAAg/C,EACAt6C,EAAA3E,QAAAi/C,EACAp/C,EAAAC,IAAApK,MAAAupD,KAKAt6C,EAAA9D,MAAAZ,QAAA0E,EAAA9D,MAAAb,QACA2E,EAAA9D,MAAAZ,SAAA,KACA0E,EAAA9D,MAAAb,QAAA,QAIAyE,GAAAkuB,WAAA,SAAAusB,EAAA76C,EAAAF,GACA,OAAAE,EAAA,IAAA66C,EAAA,MAAA/6C,GAEAM,GAAA03B,YAAA,SAAAr8B,EAAAmE,EAAAk7C,EAAAn0B,GAEA,IAAAvuC,GADAuuC,KAAA,IACAvuC,KAAAuuC,EAAAvuC,MAAA,GACA2iE,EAAAp0B,EAAAq0B,eAAAr0B,EAAAq0B,gBAAA,GAEAr0B,EAAA/mB,WACAxnB,EAAAuuC,EAAAvuC,KAAA,GACA2iE,EAAAp0B,EAAAq0B,eAAA,GACAr0B,EAAA/mB,QAGAnE,EAAAmE,OACA,IAAAq7C,EAAA,EACA76C,GAAA5J,KAAAskD,EAAA,SAAAI,GAEAA,UAAA,IAAA96C,GAAAviB,QAAAq9D,GACAD,EAAA76C,GAAAiuB,YAAA5yB,EAAArjB,EAAA2iE,EAAAE,EAAAC,GACI96C,GAAAviB,QAAAq9D,IAGJ96C,GAAA5J,KAAA0kD,EAAA,SAAAC,GAEAA,SAAA/6C,GAAAviB,QAAAs9D,KACAF,EAAA76C,GAAAiuB,YAAA5yB,EAAArjB,EAAA2iE,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAA1lE,OAAA,EACA,GAAA+lE,EAAAN,EAAAzlE,OAAA,CACA,QAAAsI,EAAA,EAAkBA,EAAAy9D,EAAWz9D,WAC7BvF,EAAA2iE,EAAAp9D,IAEAo9D,EAAAz3C,OAAA,EAAA83C,GAEA,OAAAH,GAEA76C,GAAAiuB,YAAA,SAAA5yB,EAAArjB,EAAA2iE,EAAAE,EAAAjrD,GACA,IAAA2jD,EAAAv7D,EAAA4X,GAQA,OAPA2jD,IACAA,EAAAv7D,EAAA4X,GAAAyL,EAAA4yB,YAAAr+B,GAAA2L,MACAo/C,EAAA99D,KAAA+S,IAEA2jD,EAAAsH,IACAA,EAAAtH,GAEAsH,GAEA76C,GAAAk8B,mBAAA,SAAAwe,GACA,IAAAO,EAAA,EAQA,OAPAj7C,GAAA5J,KAAAskD,EAAA,SAAAI,GACA96C,GAAAviB,QAAAq9D,IACAA,EAAA7lE,OAAAgmE,IACAA,EAAAH,EAAA7lE,UAIAgmE,GAGAj7C,GAAA23B,MAAAriC,EAKA,SAAAljB,GAMA,OAJAA,aAAA8oE,iBACA9oE,EAAA2sB,GAAAO,OAAAd,cAGAlJ,EAAAljB,IAVA,SAAAA,GAEA,OADAgK,QAAAvD,MAAA,uBACAzG,GAWA4tB,GAAAkH,cAAA,SAAAi0C,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eACAC,EACAn7C,GAAA23B,MAAAwjB,GAAA1nD,SAAA,IAAAD,OAAA,IAAApD,aAo/IAirD,GAEA9lB,GAAA+lB,UAAA/kB,GACAhB,GAAAgmB,UAAAx5C,GACAwzB,GAAAimB,iBAAAl5C,GACAizB,GAAAtb,eACAsb,GAAA1xB,kBAAAuE,GACAmtB,GAAAj3B,SAAAS,GACAw2B,GAAAp1B,QAAAqB,GACA+zB,GAAA3uB,YACA2uB,GAAAkmB,YAAA5/B,GACA0Z,GAAAmmB,QAAA9+B,GACA2Y,GAAAxR,YACAwR,GAAA7P,QAAAC,GACA4P,GAAAomB,MAAA7iB,GACAvD,GAAAqmB,aAAAl1B,GACA6O,GAAAsmB,MAAAplB,GACAlB,GAAAumB,QAAAnrB,GAIA4E,GAAAhgC,QAAAa,KAAAqO,GAAA,SAAAxT,EAAA5Y,GACAk9C,GAAAqmB,aAAAh1B,kBAAAvuC,EAAA4Y,IAAAuwC,aAQA9b,GACAA,GAAA9mC,eAAA8D,KACA6yC,GAAA7P,QAAAI,SAAAJ,GAAAhjC,KAIA6yC,GAAAxR,SAAA1jB,aAEA,IAAA07C,GAAAxmB,GAyGA,MAxGA,oBAAAlgC,SACAA,OAAAi8B,MAAAiE,IAYAA,GAAAjE,MAAAiE,GASAA,GAAA0c,OAAAvsB,GAAA9R,OAAAwgC,SASA7e,GAAAif,MAAA9uB,GAAAhT,MAAA0hC,SASA7e,GAAAymB,cAAAzmB,GAAA7P,QAUA6P,GAAA0mB,WAAA1mB,GAAAp1B,QAAAzI,OAAA,IASA69B,GAAA2mB,cAAA3mB,GAAAhgC,QAAA2K,OASAq1B,GAAA4mB,cAAA5mB,GAAAmmB,QASAnmB,GAAA6mB,gBAAA3a,GAQAlM,GAAAhgC,QAAAa,KACA,CACA,MACA,SACA,WACA,OACA,YACA,QACA,WAEA,SAAAimD,GACA9mB,GAAA8mB,GAAA,SAAAhhD,EAAAihD,GACA,WAAA/mB,GAAAl6B,EAAAk6B,GAAAhgC,QAAA8B,MAAAilD,GAAA,GAA0E,CAC1EjkE,KAAAgkE,EAAAtnD,OAAA,GAAAwnD,cAAAF,EAAA7tD,MAAA,SAMAutD,GA90c4DS,CAAA,WAAwC,IAAM,OAAQ7mE,EAAQ,GAAY,MAAAu+B,KAA1E,uCCL5DjiC,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAsqE,UAiBA,SAAAC,GAKA,SAAA3oE,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAsoE,UACAtmE,UAAA9B,EAAAsoE,SAAAC,mBACAxoE,UAAA,CAAAC,EAAAsoE,SAAAE,aAAAxoE,EAAAsoE,SAAAG,oBACAtmE,UAAAnC,EAAAsoE,SAAAI,mBACAvoE,OAAA,CAAAkoE,MA1BAvqE,EAAA6qE,OA8BA,SAAA7gE,GAKA,SAAApI,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAA6oE,OACA7mE,UAAA9B,EAAAsoE,SAAAM,gBACA7oE,UAAA,CAAAC,EAAAsoE,SAAAE,aAAAxoE,EAAAsoE,SAAAO,iBACA1mE,UAAAnC,EAAAsoE,SAAAQ,gBACA3oE,OAAA,CAAA2H,MAvCAhK,EAAAirE,QA2CA,WAGA,IAAAroE,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAEAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA4B,EAAAC,QAAAwmE,gBACA,SAAAtpE,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAipE,QACAjnE,UAAA9B,EAAAsoE,SAAAW,iBACAlpE,UAAA,CAAAC,EAAAsoE,SAAAY,cAAAlpE,EAAAsoE,SAAAa,kBACAhnE,UAAAnC,EAAAsoE,SAAAc,iBACAjpE,OAAA,CAAAO,EAAAI,MAxDAhD,EAAAurE,cA4DA,SAAArlE,GAKA,IAAAtD,EAEAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,KACAG,EAEAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA4B,EAAAC,QAAAwmE,gBACA,SAAAtpE,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAupE,cACAvnE,UAAA9B,EAAAsoE,SAAAW,iBACAlpE,UAAA,CAAAC,EAAAsoE,SAAAY,cAAAlpE,EAAAsoE,SAAAgB,sBAAAtpE,EAAAsoE,SAAAa,kBACAhnE,UAAAnC,EAAAsoE,SAAAc,iBACAjpE,OAAA,CAAA6D,EAAAtD,EAAAI,MA3EAhD,EAAAyrE,UA+EA,SAAAlB,GAKA,SAAA3oE,EAAAC,gBAAA,CACAC,WAAAC,EAAAC,QAAAypE,UACAznE,UAAA9B,EAAAsoE,SAAAkB,mBACAzpE,UAAAC,EAAAsoE,SAAAmB,mBACAtnE,UAAAnC,EAAAsoE,SAAAoB,mBACAvpE,OAAA,CAAAkoE,MAvFA,IAAAroE,EAAoBsB,EAAQ,GAE5BzB,EAAcyB,EAAQ,IAEtBiB,EAAiBjB,EAAQ,IAEzB5B,EAAe4B,EAAQ,wCCfvB1D,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA6rE,WASA,SAAA1rE,GAKA,OAAAA,EAAAC,SAAA0rE,WAbA9rE,EAAAurE,gBACAvrE,EAAA+rE,kBAuBA,SAAA7lE,GAKA,SAAAmD,EAAAC,gBAAAiiE,EAAA,SAAAS,GACA,OAAAA,EAAA9lE,IAAA,MA3BA,IAAAmD,EAAgB7F,EAAQ,IAaxB,SAAA+nE,EAAAprE,GAKA,OAAAA,EAAAC,SAAA0rE,KAAAG,oDC3BA,SAAA9+C,GAOa,SAAA++C,EAAAv6D,GAAe,IAAAH,EAAA,EAAQ,kBAAkB,OAAAA,EAAAG,EAAA7O,OAAA,CAAmBoG,MAAA,EAAAjJ,MAAA0R,EAAAH,MAAqB,CAAEtI,MAAA,IAAU,IAAAijE,EAAA,mBAAArsE,OAAAssE,iBAAAtsE,OAAAC,eAAA,SAAA4R,EAAAH,EAAAD,GAAwFI,GAAAtG,MAAAK,WAAAiG,GAAA7R,OAAA4L,YAAAiG,EAAAH,GAAAD,EAAAtR,QAAwDosE,EAAA,oBAAAnpD,iBAAA/b,eAAA,IAAAgmB,GAAA,MAAAA,IAAAhmB,KAAuG,SAAAmlE,IAAcA,EAAA,aAAgBD,EAAA7gE,SAAA6gE,EAAA7gE,OAAA+gE,GAAwB,SAAAC,EAAA76D,EAAAH,GAAiBrK,KAAA8I,EAAA0B,EAASw6D,EAAAhlE,KAAA,eAAuB8sB,cAAA,EAAAw4C,UAAA,EAAAxsE,MAAAuR,IACxcg7D,EAAA9gE,UAAAC,SAAA,WAAiC,OAAAxE,KAAA8I,GAAe,IAwCiJ0B,EAAQH,EAxCzJ+6D,EAAA,WAA0J,IAAA/6D,EAAA,EAAQ,OAAhJ,SAAAG,EAAAJ,GAAc,GAAApK,gBAAAwK,EAAA,UAAAvF,UAAA,+BAAwE,WAAAogE,EAAA,kBAAAj7D,GAAA,QAAAC,IAAAD,IAAxG,GAA8K,SAAAm7D,IAAcJ,IAAK,IAAA36D,EAAA06D,EAAA7gE,OAAAC,SAAwBkG,MAAA06D,EAAA7gE,OAAAC,SAAA4gE,EAAA7gE,OAAA,oBAAqD,mBAAAH,MAAAK,UAAAiG,IAAAw6D,EAAA9gE,MAAAK,UAAAiG,EAAA,CAA6DsiB,cAAA,EAAAw4C,UAAA,EAAAxsE,MAAA,WAA6C,OACxa,SAAA0R,GAA4E,OAA7D+6D,KAAK/6D,EAAA,CAAG1L,KAAA0L,IAAQ06D,EAAA7gE,OAAAC,UAAA,WAAgC,OAAAtE,MAAawK,EAD4Vg7D,CAAAT,EAAA/kE,UAAuBulE,EAAA,aAE/b,SAAAE,EAAAj7D,EAAAH,GAAiB,GAAAA,EAAA,CAAM,IAAAD,EAAA86D,EAAQ16D,IAAAomC,MAAA,KAAe,QAAA80B,EAAA,EAAYA,EAAAl7D,EAAA7O,OAAA,EAAa+pE,IAAA,CAAK,IAAAC,EAAAn7D,EAAAk7D,GAAWC,KAAAv7D,MAAAu7D,GAAA,IAAkBv7D,IAAAu7D,IAA8Bt7D,IAAPq7D,EAAAt7D,EAAhBI,MAAA7O,OAAA,OAA8B+pE,GAAA,MAAAr7D,GAAA26D,EAAA56D,EAAAI,EAAA,CAAuBsiB,cAAA,EAAAw4C,UAAA,EAAAxsE,MAAAuR,KAA4I,SAAAu7D,EAAAp7D,GAAe,IAAAH,EAAA,oBAAAhG,eAAAC,UAAAkG,EAAAnG,OAAAC,UAAsE,OAAA+F,IAAA5F,KAAA+F,GAAA,CAAoB1L,KAAAimE,EAAAv6D,IAA9Mi7D,EAAA,gCAAAj7D,GAAsC,OAAAA,GAAA,WAAsB,OADnL,SAAAA,EAAAH,GAAiBk7D,IAAK/6D,aAAAmmC,SAAAnmC,GAAA,IAA6B,IAAAJ,EAAA,EAAAs7D,EAAA,CAAW5mE,KAAA,WAAgB,GAAAsL,EAAAI,EAAA7O,OAAA,CAAe,IAAAgqE,EAAAv7D,IAAU,OAAOtR,MAAAuR,EAAAs7D,EAAAn7D,EAAAm7D,IAAA5jE,MAAA,GAAyE,OAAhD2jE,EAAA5mE,KAAA,WAAkB,OAAOiD,MAAA,EAAAjJ,WAAA,IAAuB4sE,EAAA5mE,SAA0D,OAAxC4mE,EAAArhE,OAAAC,UAAA,WAA8B,OAAAohE,GAAUA,EAC9DG,CAAA7lE,KAAA,SAAAqK,GAA2B,OAAAA,OACnSo7D,EAAA,mBAAAj7D,GAAyB,SAAAH,EAAAS,GAAc9K,KAAAoG,EAAA,EAASpG,KAAA8lE,OAAA,EAAc9lE,KAAA8I,EAAA,GAAU,IAAAhC,EAAA9G,KAAAq7B,IAAe,IAAIvwB,EAAAhE,EAAA3G,QAAA2G,EAAA1G,QAAsB,MAAAkG,GAASQ,EAAA1G,OAAAkG,IAAa,SAAA8D,IAAapK,KAAA8I,EAAA,KAAY,SAAA48D,EAAA56D,GAAc,OAAAA,aAAAT,EAAAS,EAAA,IAAAT,EAAA,SAAAvD,GAA0CA,EAAAgE,KAAO,GAAAN,EAAA,OAAAA,EAAcJ,EAAA7F,UAAA6B,EAAA,SAAA0E,GAA0B,SAAA9K,KAAA8I,EAAA,CAAiB9I,KAAA8I,EAAA,GAAU,IAAAhC,EAAA9G,KAAWA,KAAAq7B,EAAA,WAAkBv0B,EAAAg/D,MAAQ9lE,KAAA8I,EAAAvF,KAAAuH,IAAgB,IAAA66D,EAAAT,EAAArF,WAAmBz1D,EAAA7F,UAAA82B,EAAA,SAAAvwB,GAA0B66D,EAAA76D,EAAA,IAAQV,EAAA7F,UAAAuhE,EAAA,WAAyB,KAAK9lE,KAAA8I,GAAA9I,KAAA8I,EAAAnN,QAAsB,CAAE,IAAAmP,EAAA9K,KAAA8I,EAAa9I,KAAA8I,EAAA,GAAU,QAAAhC,EAAA,EAAYA,EAAAgE,EAAAnP,SAAWmL,EAAA,CAAK,IAAAR,EACrfwE,EAAAhE,GAAKgE,EAAAhE,GAAA,KAAU,IAAIR,IAAI,MAAAy/D,GAAS/lE,KAAAsG,EAAAy/D,KAAY/lE,KAAA8I,EAAA,MAAasB,EAAA7F,UAAA+B,EAAA,SAAAwE,GAA0B9K,KAAAq7B,EAAA,WAAkB,MAAAvwB,KAAYT,EAAA9F,UAAA82B,EAAA,WAAyB,SAAAvwB,EAAAi7D,GAAc,gBAAAC,GAAmB1/D,OAAA,EAAAy/D,EAAAthE,KAAAqC,EAAAk/D,KAAuB,IAAAl/D,EAAA9G,KAAAsG,GAAA,EAAgB,OAAOnG,QAAA2K,EAAA9K,KAAAimE,GAAA7lE,OAAA0K,EAAA9K,KAAAsG,KAAqC+D,EAAA9F,UAAA0hE,EAAA,SAAAn7D,GAA0B,GAAAA,IAAA9K,UAAAsG,EAAA,IAAArB,UAAA,4CAAwE,GAAA6F,aAAAT,EAAArK,KAAAkmE,EAAAp7D,OAAiC,CAAKG,EAAA,cAAAH,GAAmB,iBAAAhE,EAAA,MAAAgE,EAA4B,MAAAG,EAAQ,eAAAnE,GAAA,EAAqB,MAAAmE,EAAQ,QAAAnE,GAAA,EAAaA,EAAA9G,KAAAmmE,EAAAr7D,GAAA9K,KAAAmJ,EAAA2B,KACveT,EAAA9F,UAAA4hE,EAAA,SAAAr7D,GAA0B,IAAAhE,OAAA,EAAa,IAAIA,EAAAgE,EAAA9I,KAAS,MAAAsE,GAAmB,YAAVtG,KAAAsG,KAAiB,mBAAAQ,EAAA9G,KAAAomE,EAAAt/D,EAAAgE,GAAA9K,KAAAmJ,EAAA2B,IAA4CT,EAAA9F,UAAA+B,EAAA,SAAAwE,GAA0B9K,KAAAqmE,EAAA,EAAAv7D,IAAaT,EAAA9F,UAAA4E,EAAA,SAAA2B,GAA0B9K,KAAAqmE,EAAA,EAAAv7D,IAAaT,EAAA9F,UAAA8hE,EAAA,SAAAv7D,EAAAhE,GAA4B,MAAA9G,KAAAoG,EAAA,MAAA+zC,MAAA,iBAAArvC,EAAA,KAAAhE,EAAA,sCAAA9G,KAAAoG,GAAiGpG,KAAAoG,EAAA0E,EAAS9K,KAAA8lE,EAAAh/D,EAAS9G,KAAA2lE,KAAUt7D,EAAA9F,UAAAohE,EAAA,WAAyB,SAAA3lE,KAAA8I,EAAA,CAAiB,QAAAgC,EAAA,EAAYA,EAAA9K,KAAA8I,EAAAnN,SAAgBmP,EAAAw7D,EAAAlgE,EAAApG,KAAA8I,EAAAgC,IAAoB9K,KAAA8I,EAAA,OAAc,IAAAw9D,EAAA,IAAAl8D,EAEgB,OAFHC,EAAA9F,UAAA2hE,EAAA,SAAAp7D,GAA0B,IAAAhE,EAChf9G,KAAAq7B,IAASvwB,EAAAy7D,EAAAz/D,EAAA3G,QAAA2G,EAAA1G,SAAyBiK,EAAA9F,UAAA6hE,EAAA,SAAAt7D,EAAAhE,GAA4B,IAAAR,EAAAtG,KAAAq7B,IAAe,IAAIvwB,EAAArG,KAAAqC,EAAAR,EAAAnG,QAAAmG,EAAAlG,QAA6B,MAAA2lE,GAASz/D,EAAAlG,OAAA2lE,KAAc17D,EAAA9F,UAAAvC,KAAA,SAAA8I,EAAAhE,GAA+B,SAAAR,EAAA6/D,EAAAK,GAAgB,yBAAAL,EAAA,SAAAM,GAAwC,IAAIV,EAAAI,EAAAM,IAAS,MAAAC,GAAUV,EAAAU,KAAOF,EAAG,IAAAT,EAAAC,EAAAW,EAAA,IAAAt8D,EAAA,SAAA87D,EAAAK,GAA+BT,EAAAI,EAAIH,EAAAQ,IAA4B,OAAtBxmE,KAAAumE,EAAAjgE,EAAAwE,EAAAi7D,GAAAz/D,EAAAQ,EAAAk/D,IAAsBW,GAAWt8D,EAAA9F,UAAAqiE,MAAA,SAAA97D,GAA8B,OAAA9K,KAAAgC,UAAA,EAAA8I,IAA4BT,EAAA9F,UAAAgiE,EAAA,SAAAz7D,EAAAhE,GAA4B,SAAAR,IAAa,OAAAy/D,EAAA3/D,GAAY,OAAA0E,EAAAi7D,EAAAD,GAAc,MAAM,OAAAh/D,EAAAi/D,EAAAD,GAAc,MAAM,cAAA3rB,MAAA,qBAC9d4rB,EAAA3/D,IAAO,IAAA2/D,EAAA/lE,KAAW,MAAAA,KAAA8I,EAAAw9D,EAAAlgE,EAAAE,GAAAtG,KAAA8I,EAAAvF,KAAA+C,IAAqC+D,EAAAlK,QAAAulE,EAAYr7D,EAAAjK,OAAA,SAAA0K,GAAqB,WAAAT,EAAA,SAAAvD,EAAAR,GAA2BA,EAAAwE,MAAQT,EAAAw8D,KAAA,SAAA/7D,GAAmB,WAAAT,EAAA,SAAAvD,EAAAR,GAA2B,QAAAy/D,EAAAH,EAAA96D,GAAAk7D,EAAAD,EAAAjnE,QAA2BknE,EAAAjkE,KAAQikE,EAAAD,EAAAjnE,OAAA4mE,EAAAM,EAAAltE,OAAAytE,EAAAz/D,EAAAR,MAAgC+D,EAAAy8D,IAAA,SAAAh8D,GAAkB,IAAAhE,EAAA8+D,EAAA96D,GAAAxE,EAAAQ,EAAAhI,OAAuB,OAAAwH,EAAAvE,KAAA2jE,EAAA,QAAAr7D,EAAA,SAAA07D,EAAAC,GAAwC,SAAAW,EAAAF,GAAgB,gBAAAC,GAAoBP,EAAAM,GAAAC,EAAa,KAAJF,GAAIT,EAAAI,IAAY,IAAAA,EAAA,GAAAK,EAAA,EAAa,GAAAL,EAAA5iE,UAAA,GAAAijE,IAAAd,EAAAp/D,EAAAxN,OAAAytE,EAAAI,EAAAR,EAAAxqE,OAAA,GAAAqqE,GAAA1/D,EAAAQ,EAAAhI,cAAgEwH,EAAAvE,SAAkBsI,IACzd,SAAAG,EAAAH,EAAAD,GAAiB,IAAAs7D,GAAMA,EAAAt7D,EAAA28D,SAAArB,EAAAsB,IAAAtB,EAAA,cAAoC,OAAAr7D,KAASq7D,EAAAt7D,EAAA68D,SAAAvB,EAAuF,aAAvFzC,eAAA54D,EAA8DjF,EAAAvM,QAAAwR,EAAlI,CAA2J,WAAA68D,EAAA18D,GAA8B,SAAAJ,EAAAa,EAAAnC,GAAgB,IAAA+B,EAAA/B,IAAAjG,GAAAoI,KAAApI,GAAqB7C,KAAA6C,GAAAgI,GAAA,IAAAA,IAAAs8D,IAAwBnnE,KAAAonE,KAAAn8D,EAAAnC,GAAehC,EAAA9G,KAAA,mBAA0B,OAAAA,KAAAiL,EAAAtS,OAAAukB,KAAAld,KAAAiL,EAAA4Q,MAAA7b,KAAAiL,EAAAiS,KAAA,IAAA/S,GAAAxR,OAAAukB,KAAAld,KAAAmK,KAAgFrD,EAAA9G,KAAA,oBAA2B,OAAAA,KAAA6b,MAAAlgB,SAA2B,SAAA+pE,EAAAz6D,EAAAnC,EAAA+B,EAAAwlC,GACtU,OAD0VrwC,KAAA0lE,IAAA1lE,KAAAiE,IAAAjE,KAAAqnE,EAAArnE,KAAAqnE,EAAAzkE,OAAAiI,GAAA7K,KAAA0lE,IAAAr1B,GAAArwC,KAAAqnE,EAAA1rE,QACzb00C,IAAArwC,KAAA0lE,EAAA1lE,KAAAiE,GAAAjE,KAAA0lE,IAAA1lE,KAAAiE,IAAAjE,KAAAitC,OAAAjtC,KAAA8G,EAAA6hB,IAAA7f,EAAA9I,KAAAqnE,GAAArnE,KAAAgmE,GAAAhmE,KAAAgmE,EAAAhmE,KAAAqnE,KAA+FrnE,KAA8H,SAAAsmE,EAAAr7D,EAAAnC,GAAiB,QAAA+B,EAAAI,EAAAtP,OAAA00C,EAAAi3B,EAAAx+D,GAAA8xB,EAAA,GAAAzwB,EAAA,EAAAtB,EAAA,EAAwCsB,EAAAU,EAAIV,IAAA,CAAK,IAAA/D,EAAA6E,EAAAd,IAAWkmC,GAAAvnC,EAAA1C,KAAAiqC,IAAAvnC,EAAA1C,MAAAw0B,EAAA/xB,KAAAzC,GAA+B,OAAAw0B,EAAS,SAAA9vB,EAAAG,EAAAnC,EAAA+B,EAAAwlC,EAAAzV,EAAAzwB,EAAAtB,EAAAzC,EAAAgD,EAAAkB,GAAwD,GAAxBO,EAAA08D,EAAA18D,EAAAhC,EAAA,EAAA+xB,EAAAx0B,EAAA+D,EAAArB,EAAAM,EAAAkB,GAAwBlE,EAAA,CAAMA,EAAAyE,EAAApP,KAAS,IAAAiO,EAAAmB,EAAA/L,KAAa+L,IAAAsQ,OAAW,GAAAtS,EAAAC,EAAA9I,KAAA8iC,MAAAj6B,EAAA,KAAA+xB,EAAA/vB,OAA8B,CAC/c,IADod/B,EAAA+B,EAAIA,EAAA7K,KAAA8K,EAAS8vB,EAAA9xB,EAAAnN,OAAWwO,EAAAjG,MAAA02B,GAC5e/xB,EAAA,EAAQA,EAAA+xB,EAAI/xB,IAAAsB,EAAAtB,GAAAgC,EAAA/B,EAAAD,IAAiBC,EAAAqB,EAAqH,OAAjHU,EAAA/B,EAAIunC,IAAAi3B,EAAAj3B,KAAA,GAAAm3B,EAAAn3B,EAAAO,MAAA,MAAAj1C,OAAA00C,EAAAq2B,GAAAc,IAAA,GAAAn3B,EAAAo2B,IAAA57D,EAAAo4B,KAAAoN,IAAqExlC,EAAA4zD,EAAAr4D,EAAAsD,EAAAmB,GAAY7K,KAAAitC,OAAAjtC,KAAA8G,EAAA6hB,IAAA1d,EAAAJ,GAA4BA,EAAS,SAAA/D,EAAAmE,EAAAnC,EAAA+B,GAAkBlS,OAAAC,eAAAqS,EAAAnC,EAAA,CAA2B4f,IAAA7d,IAAQ,SAAAvE,EAAA2E,GAAc,WAAAw8D,OAAAx8D,EAAA,KAAyB,SAAA86D,EAAA96D,EAAAnC,GAAgB,QAAA+B,EAAA,EAAYA,EAAA/B,EAAAnN,OAAWkP,GAAA,EAAAI,IAAAy8D,QAAA5+D,EAAA+B,GAAA/B,EAAA+B,EAAA,IAA8B,OAAAI,EAAS,SAAA+6D,EAAA/6D,EAAAnC,EAAA+B,EAAAwlC,EAAAzV,EAAAzwB,EAAAtB,EAAAzC,GAA4B,OAAA0C,EAAA+B,GAAA/B,EAAA+B,IAAoB+vB,KAAAx0B,GAAAyC,GAAAzC,EAAA,MAAA+D,GAAAtB,GAAAzC,EAAA,KAAAw0B,EAAAzwB,EAAoCrB,EAAA+B,GAAA+vB,EAAOA,GAAA/xB,KAAAoC,OAAA7E,GAAAw0B,EAAA,SAAA/vB,KAAAI,EAAAJ,GAAA,KAAAI,EAAAtP,QAAA00C,GAAyDzV,GAAS,SAAA+rC,EAAA17D,EAAAnC,GAAiB,GAAAmC,EAAA,QAAAJ,EACnflS,OAAAukB,KAAAjS,GAAAolC,EAAA,EAAAzV,EAAA/vB,EAAAlP,OAA8B00C,EAAAzV,EAAIyV,IAAA,CAAK,IAAAlmC,EAAAU,EAAAwlC,GAAAxnC,EAAAoC,EAAAd,GAAkB,GAAAtB,EAAA,QAAAzC,EAAA,EAAAgD,EAAAP,EAAAlN,OAA4ByK,EAAAgD,EAAIhD,IAAA,IAAAyC,EAAAzC,KAAA0C,EAAA,CAAiB,IAAAM,SAAA6B,EAAAd,GAAAtB,EAAA+gB,OAAAxjB,EAAA,GAAgC,MAAMuhE,EAAA9+D,EAAAzC,KAAAugE,EAAA99D,EAAAzC,GAAA0C,KAA0B,SAAAq9D,EAAAl7D,GAAc,QAAAnC,EAAA,GAAA+B,EAAA,GAAAwlC,EAAA,GAAAzV,EAAA,EAA2BA,EAAA3vB,EAAAtP,OAAWi/B,IAAA,CAAK,IAAAzwB,EAAAc,EAAA2vB,GAAWzwB,IAAAU,IAAA+vB,GAAA,MAAAzwB,GAAwBkmC,EAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,IAAA,MAAAxlC,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,IAAAwlC,GAAA,MAAAxlC,KAAA/B,GAAAqB,IAAkIrB,GAAAqB,GAAUkmC,EAAAzV,IAAA3vB,EAAAtP,OAAA,KAAAsP,EAAA2vB,EAAA,GAA2B/vB,EAAAV,EAAI,OAAArB,EAAS,SAAA09D,EAAAv7D,EAAAnC,GAAoC,UAApBmC,IAAAtP,OAAAmN,EAAAnN,QAAoB,EAAAsP,GAAA,IAAoB,SAAAw7D,EAAAx7D,EAClfnC,GAAiB,OAAdmC,IAAAu8D,KAAO1+D,IAAA0+D,KAAO,EAAAv8D,EAAAnC,EAAA,IAAsB,SAAA49D,EAAAz7D,EAAAnC,GAAiB,QAAA+B,EAAA28D,EAAA7rE,OAAA00C,EAAA,EAAuBA,EAAAxlC,EAAIwlC,IAAAplC,IAAAu8D,EAAAn3B,IAAAvnC,IAAA0+D,EAAAn3B,IAAwB,OAAAplC,EAAAnC,GAAA,EAAAmC,EAAAnC,EAAA,IAAsB,SAAA21D,EAAAxzD,EAAAnC,EAAA+B,GAAmB,OAAAI,EAAA,CAAUxP,KAAAwP,EAAAnM,KAAAgK,EAAA,GAAAA,EAAA,KAAAqS,OAAAtQ,GAAiCA,EAAG,SAAA08D,EAAAt8D,EAAAnC,EAAA+B,EAAAwlC,EAAAzV,EAAAzwB,EAAAtB,GAA2B,IAAAzC,EAAA,GAAS,QAAAyE,EAAA,CAAWA,EAAA,IAAM,IAAAzB,EAAA,QAASA,EAAAyB,KAAA+lC,MAAA,KAAuB,IAAAtmC,EAAAW,EAAAtP,OAAe,KAAA2O,EAAA,CAAQ,IAAA+8D,EAAAO,EAAAC,EAC1PC,EAD0Pp+D,EAAAq+D,IAAA5+D,EAAA,GAAAP,EAAA,EAAA29D,GAAA,EAAA58D,EAAA,EAAkC,GAAAP,EAAA,OAAAA,EAAAzN,OAAA,CAAsB,IAAA8N,EAAAL,EAAQA,GAAA,OAAKA,EAAAy+D,EAAApwD,SAAArO,EAAA,OAA2B,GAAAP,EAAA,CAAM,IAAAw+D,EAAAU,IAAUn/D,EAAA0B,EAAI1B,IAAA,WAAAgyB,EAAAhyB,GAAA,CAAqB,IAAAy9D,EAAAp7D,EAAArC,GAAWo/D,EAAA3B,EAAA1qE,OAAe,IAAAisE,EAAA,EAAQA,EAAAI,EAAIJ,IAAAP,EAAA,IAAAhB,EAAAuB,IAAA,OAAkB,IAAAK,EAC/er/D,EAAA,EAAI,GAAAs/D,EAAAD,GAAA,OAAAxJ,EAAA5zD,EAAAs9D,EAAA/hE,GAAyBwC,EAAA,OAAI,IAAAw/D,EAAAC,EAAAztC,MAAmB,KAAWhyB,EAAA0B,EAAI1B,IAAA,CAAK,IAAAq9D,EAAAr9D,KAAAq/D,GAAA39D,GAAA,EAAmB,IAAA89D,IAAAx/D,EAAA,IAAAg/D,EAAAQ,GAAAxtC,KAAAhyB,KAAA,QAAAg/D,EAAA,WAAAA,EAAyD,SAAzDE,GAAA,OAAuEA,EAAA39D,GAAA,EAAoB,GAAA69D,GAAP3B,EAAAp7D,EAAArC,IAAOjN,OAAA,CAAe,GAAA4qE,EAAA,KAAA/pE,EAAiH,CAAKA,EAAA6pE,EAAI,SAA/G,IAAAH,EAAA1pE,EAAAb,OAAe,IAAAisE,EAAA,EAAQA,EAAA1B,EAAI0B,IAAA,CAAY,IAAAU,EAAA,KAAP/B,EAAA/pE,EAAAorE,IAAoB/+D,GAAAw+D,EAAAiB,KAAA5+D,EAAA4+D,GAAA,EAAAn+D,IAAA/D,EAAAuD,KAAA48D,IAAkC,IAAA/pE,EAAA,KAAW+pE,GAAA,EAA6B,IAAN+B,GAAA,EAAMV,EAAA,EAAQA,EAAAI,EAAIJ,IAAA,CAAY,IAAAW,EAAA,KAAPrC,EAAAG,EAAAuB,IAAOY,EAAAr+D,EAAAT,EAAA6+D,IAAA,EAAA3/D,EAA2B,MAAA4/D,IAAAn4B,GAAAxnC,GAAAw+D,EAAAkB,KAAAp+D,GAAAT,EAAA6+D,IAAA,GAAAC,IAAA5/D,EAAA,CAA4C,GAAAq9D,GAAM,KAAA4B,OAAAl+D,KAAAvD,EAAAuD,KAAAu8D,EAAAp9D,GAAAa,IAAAb,GAAA,OAAA21D,EAAA5zD,EAAAlB,GAAAP,GAAA,GAAAhD,QAA0DsD,EAAA6+D,GAC7e3/D,EAAA,EAAI0/D,GAAA,OAAMj4B,KAAAk4B,EAAAp/D,EAAAq/D,KAAAr/D,EAAAq/D,GAAA,KAAAD,EAAA5sE,QAAAuqE,GAA4C,GAAA4B,IAAAQ,IAAAj4B,EAAA,WAAqB,GAAAy3B,IAAAz3B,EAAA,OAAAouB,EAAA5zD,EAAAs9D,EAAA9B,GAAgC,GAAA7pE,EAAA,GAAAoM,EAAApM,EAAAb,OAAAkN,EAAA,IAAA++D,EAAAx+D,EAAAqO,SAAArO,EAAA,MAA8Cw+D,EAAAh/D,EAAIg/D,IAAAP,EAAA,KAAAp8D,EAAAzO,EAAAorE,OAAAxhE,EAAAuD,KAAAsB,QAAgC7E,EAAA5J,EAAS,GAAA6zC,EAAA,IAAA1mC,EAAAvD,EAAAzK,OAAA8N,GAAAb,EAAA6O,SAAAhO,EAAA,SAAAm+D,EAAAnwD,SAAAhO,EAAA,WAAAb,EAAAO,EAAAxN,OAAAisE,EAAA,GAAqFh/D,KAAI,GAAAs9D,EAAA/8D,EAAAP,GAAA,CAAY,IAAAo/D,EAAA9B,EAAAvqE,OAAeisE,EAAAI,EAAIJ,IAAA,GAAAv3B,EAAA61B,EAAA0B,KAAA/+D,IAAAw+D,EAAA,IAAAh3B,MAAAjqC,EAAAuD,KAAA0mC,EAAAvnC,GAAAa,IAAAb,GAAA,OAAA21D,EAAA5zD,EAAAjC,EAAA,IAAAg/D,EAAAxhE,GAAwEwhE,EAAA,QAAKt9D,GAAAswB,GAAA,QAAAA,EAAA,KAAAx0B,EAAA6E,EAAA,GAAA7B,MAAAqO,SAAArO,EAAA,SAA2D,GAAAN,EAAA,CAAMD,EAAAzC,EAAAzK,OAAWyN,KAAAP,IAAAO,EAAA,GAAqB,IAAA++D,GAAP/+D,KAAA,GAAON,EAC5eq/D,EAAAt/D,EAAAzC,IAAA8O,MAAA9L,EAAA++D,MAAA,EAAA/+D,IAAAhD,IAAA8O,MAAA9L,KAA2C,OAAAq1D,EAAA5zD,EAAAs9D,EAAA/hE,GAAiB,SAAAiiE,EAAAp9D,GAAc,uBAAAA,EAA0B,SAAAm7D,EAAAn7D,GAAc,OAAAA,EAAAyT,cAAAxa,MAA6B,SAAAojE,EAAAr8D,GAAe,yBAAAA,EAA4B,SAAA08D,EAAA18D,GAAc,uBAAAA,EAA0B,SAAAi9D,EAAAj9D,GAAc,gBAAAA,EAA6B,SAAAw9D,EAAAx9D,GAAe,QAAAnC,EAAA5E,MAAA+G,GAAAJ,EAAA,EAAuBA,EAAAI,EAAIJ,IAAA/B,EAAA+B,GAAAk9D,IAAa,OAAAj/D,EAAS,SAAAi/D,IAAa,OAAApvE,OAAA+vE,OAAA,MAA2B,SAAAC,IAAc,IAAA19D,EAAAnC,EAAQ/I,KAAA6oE,UAAA,SAAA/9D,GAA2B,GAAAA,IAAAnM,KAAA,GAAAmM,EAAAg+D,OAAA,CAAyB,IAAAx4B,EAAAvnC,EAAA+/D,OAAAh+D,EAAAi+D,QAAAj+D,EAAAk+D,UAAA,CAAsCC,MAAAn+D,EAAAm+D,MAAAD,UAAAl+D,EAAAk+D,UACrejmC,MAAAj4B,EAAAi4B,OAAcj4B,EAAAm+D,OAAUjpE,KAAAkpE,YAAA,CAAkBpmE,GAAAoI,EAAA69D,QAAAj+D,EAAAi+D,QAAAE,MAAAn+D,EAAAm+D,MAAA7tD,OAAAk1B,SAAgDxlC,EAAA++B,IAAA9gC,EAAA8gC,IAAA/+B,EAAAhI,GAAAgI,EAAAi+D,SAAAj+D,EAAAmhB,OAAAljB,EAAAkjB,OAAAnhB,EAAAhI,GAAAgI,EAAAi+D,SAAAj+D,EAAAo/B,OAAAnhC,EAAAmhC,OAAAp/B,EAAAhI,IAAAgI,EAAAgX,MAAA/Y,EAAA+Y,QAAAhX,EAAA/I,OAAA+I,EAAA/B,EAAAhH,QAAAonE,OAAAj+D,EAAAnI,QAAAC,IAAA8H,MAAA2hC,WAAAvhC,EAAAJ,EAAAhI,GAAAgI,EAAA+S,QAAAqvB,OAAA,EAAApiC,EAAA+S,QAAAurD,OAAA,EAAAt+D,EAAA+S,QAAAsrD,QAAA,EAAiUpgE,EAAA,IAAjUA,EAAA,IAAAsgE,SAAAv+D,EAAA2hC,SAAA68B,UAAAx+D,EAAA2hC,SAAAztB,QAAA,KAAmS,EAAAlU,EAAA2hC,SAAA88B,YAAA,MAAnS,IAAiUz+D,EAAA+S,WAA6B,SAAA2rD,EAAAt+D,EAAAnC,EAAA+B,EAAAwlC,GAAqBplC,EAAAT,EAAA,kBAAAS,EAAA09D,EAAA,SAAAx+D,IAAuCA,EACpfA,EAAAzL,OAAAyL,EAAAgR,QAAAk1B,EAAAlmC,EAAAtH,GAAAsH,EAAA2+D,QAAA3+D,EAAAgR,OAAAhR,EAAA6+D,MAAA7+D,EAAA24B,MAAA34B,EAAA6vD,OAAA7vD,EAAAq/D,UAAiF1gE,GAAI,IAAA8xB,EAAAssC,EAAA1iE,WAAsE,OAAlDqG,EAAAhI,GAAAiG,EAAOmC,EAAAg+D,YAAA,CAAez8B,SAAA5R,EAAAhd,QAAA/S,EAAAhI,GAAAiG,IAA4BmC,EAAS,IAWmIu8D,EAXnIiC,EAAA,CAAOC,OAAA,QAAA7gE,EAAA,UAAA+nC,MAAA,MAAA3D,OAAA,EAAAk8B,OAAA,EAAAllE,GAAA,EAAA8jE,GAAA,EAAA98D,GAAA,EAAAJ,EAAA,EAAAk+D,UAAA,EAAAY,MAAA,GAAgGC,EAAA,CAAKC,OAAA,CAAQH,OAAA,QAAA7gE,EAAA,SAAAkgE,UAAA,EAAAl+D,EAAA,GAA0Ci/D,MAAA,CAAQJ,OAAA,QAAA7gE,EAAA,SAAAkgE,UAAA,EAAAl+D,EAAA,EAAA8+D,MAAA,GAAkDpyD,MAAA,CAAQmyD,OAAA,QAAA7gE,EAAA,OAAAkgE,UAAA,EAAAl+D,EAAA,GAAwCk/D,MAAA,CAAQL,OAAA,QAAA7gE,EAAA,SAAAkgE,UAAA,EAAAl+D,EAAA,EAAA8+D,MAAA,GAAkDK,QAAA,CAAUN,OAAA,UAChf7gE,EAAA,SAAAkgE,UAAA,EAAAl+D,EAAA,EAAA8+D,MAAA,GAAmCM,KAAA,CAAOP,OAAA,QAAA7gE,EAAA,SAAAkgE,UAAA,EAAAl+D,EAAA,EAAA8+D,MAAA,IAAmDO,EAAA,GAAA/C,EAAA,EAAAgD,EAAA,GAAiBC,EAAA,GAAOhgE,EAAAs+D,OAAA,SAAAz9D,EAAAnC,GAAuB,WAAAsB,EAAAa,EAAAnC,IAAmBsB,EAAAigE,gBAAA,SAAAp/D,GAA8B,QAAAnC,KAAAmC,IAAA3F,eAAAwD,IAAAohE,EAAA3mE,KAAA+C,EAAAwC,GAAAmC,EAAAnC,IAAuD,OAAA9I,MAAaoK,EAAAkgE,gBAAA,SAAAr/D,EAAAnC,GAAiD,OAAjByhE,EAAAt/D,GAAAnC,EAAAkgC,KAAAuhC,GAAiBvqE,MAAaoK,EAAAogE,iBAAA,SAAAv/D,EAAAnC,GAAgE,OAA/BqhE,EAAAl/D,GAAAnC,EAAA41B,OAAe0rC,EAAAn/D,GAAAnC,EAAA2hE,QAAgBzqE,MAAaoK,EAAAs/D,OAAA,SAAAz+D,EAAAnC,GAAuB,OAAAyhE,EAAAt/D,GAAAnC,IAAiBsB,EAAA7F,UAAA6iE,KAAA,SAAAn8D,EAAAnC,GAAyC,GAAV9I,KAAAoG,EAAA,GAAU0C,EAAA,CAAM,IAAA+B,EAAA/B,EAAA4hE,OAAez/D,EAAAnC,OAAImC,IACtfA,EAAAw+D,GAAA5+D,EAAAI,EAAAy/D,OAAuI,GAAtH5hE,EAAA,GAAKu/D,EAAAp9D,KAAAnC,EAAA8gE,EAAA3+D,KAAAnI,QAAA2wD,KAAA,qBAAAxoD,KAAA,IAA0DJ,KAAA/B,EAAA8gE,EAAA/+D,KAAA/H,QAAA2wD,KAAA,qBAAA5oD,IAAuDA,EAAAI,EAAAi+D,OAAA,uBAAAyB,OAAA1/D,EAAAi+D,QAAA,EAAAlpE,KAAA8I,EAAA,SAAqE,CAAK,IAAAunC,EAAA54B,SAAA5M,EAAA,OAAwB7K,KAAAmJ,GAAA,EAAUnJ,KAAA0lE,EAAA,EAAS1lE,KAAAqnE,EAAA,GAAUrnE,KAAAgmE,EAAA,KAAYhmE,KAAA8I,EAAA5E,MAAAmsC,GAAgB,QAAAzV,EAAA,EAAYA,EAAAyV,EAAIzV,IAAA56B,KAAA8I,EAAA8xB,GAAA2uC,EAAAvpE,KAAA6C,GAAA+3B,EAAA3vB,EAAAy6D,EAAA18B,KAAAhpC,OACoH,GADzEA,KAAA6I,EAAAoC,EAAA2/D,UAAA9hE,EAAAD,GAAA7I,KAAA6I,GAAA4gE,EAAA5gE,EAAoC7I,KAAA4wC,MAAA3lC,EAAA2lC,OAAA5wC,KAAA4wC,OAAA64B,EAAA74B,MAAwC5wC,KAAA+nE,EAAA98D,EAAA4/D,KAAA7qE,KAAA+nE,GAAA0B,EAAA1B,EAA0B/nE,KAAAmpE,MAAA,oBAAAjpE,SAAAgoE,EAAAr9D,EAAAI,EAAAk+D,OACncnpE,KAAAmpE,OAAAM,EAAAN,MAAAt+D,EAAsB7K,KAAAiE,EAAAikE,EAAAr9D,EAAAI,EAAAi+D,QAAAlpE,KAAAiE,GAAAwlE,EAAAxlE,EAAA4G,EAAmC7K,KAAA+oE,UAAAb,EAAAr9D,EAAAI,EAAA89D,WAAAjgE,EAAAigE,WAAA/oE,KAAA+oE,WAAAU,EAAAV,UAAAl+D,EAA2E7K,KAAA6K,EAAAq9D,EAAAr9D,EAAAI,EAAA6/D,YAAAjgE,EAAA/B,EAAA+B,GAAA7K,KAAA6K,GAAA4+D,EAAA5+D,IAA8CA,GAAA7K,KAAA+oE,YAAA/oE,KAAA6K,EAAA7K,KAAA+oE,UAAA,GAA6C/oE,KAAA2pE,MAAA,WAAA3pE,KAAA6I,GAAAq/D,EAAAr9D,EAAAI,EAAA0+D,OAAA7gE,EAAA6gE,OAAA3pE,KAAA2pE,OAAAF,EAAAE,MAAA9+D,EAA0E7K,KAAAq7B,GAAAxwB,EAAAq9D,EAAAr9D,EAAAI,EAAAy+D,QAAA5gE,EAAA4gE,QAAAD,EAAAC,OAAA7+D,IAAA0/D,EAAA1/D,IAAA0/D,EAAA1/D,GAAAm+B,KAAAuhC,KAAAjD,EAAAz8D,KAAA7K,KAAAq7B,IAAA,IAA2FxwB,EAAAI,EAAA8/D,UAAA/qE,KAAAgrE,WAAAngE,GAAkCA,GAAA/B,EAAAmC,EAAAggE,OAAAhgE,EAAAyzB,OAAA,CAA2C,GAAhB2pC,EAAAx9D,OAAAs/D,EAAAt/D,IAAgBu7D,EAAAv7D,GAAA,CAASwlC,EAAArwC,KAAAq7B,EAAST,EAAAmtC,IAAM,QAAA59D,EAAA,EAAYA,EACrfU,EAAAlP,OAASwO,IAAA,CAAK,IAAAtB,EAAAwnC,IAAAxlC,EAAAV,IAAAU,EAAAV,GAAqBywB,EAAA/xB,GAAA,EAAOgC,EAAA+vB,EAAI56B,KAAA0+B,OAAA7zB,EAAc,GAAAA,EAAA/B,GAAAmC,EAAAw/D,QAAA,CAAgD,QAAArkE,KAA7B0C,EAAAu/D,EAAAx9D,GAAAu/D,EAAAv/D,KAAewlC,EAAArwC,KAAAq7B,EAAST,EAAA,GAAK9xB,IAAAxD,eAAAc,KAAA+D,EAAAkmC,IAAAjqC,KAAAw0B,EAAAr3B,KAAA+C,EAAA6D,EAAA,WAAAkmC,IAAAvnC,EAAA1C,IAAA0C,EAAA1C,KAAuFpG,KAAAyqE,QAAA7vC,EAA+G,GAAhG56B,KAAAiL,EAAA2vB,GAAA/vB,EAAAI,EAAAigE,KAZvG,SAAAvF,EAAA16D,GAAc,IAAAJ,EAAA/B,EAAAi/D,IAAY,IAAAl9D,KAAAI,EAAA,GAAAA,EAAA3F,eAAAuF,GAAA,CAAmC,IAAAwlC,EAAAplC,EAAAJ,GAAW/B,EAAA+B,GAAAu7D,EAAA/1B,KAAAn7B,MAAA,GAAAyyD,EAAAt3B,GAAAs1B,EAAAt1B,KAAiC,OAAAvnC,EAYF68D,CAAA96D,GAAA7K,KAAAiL,GAAAw+D,EAAAx+D,EAAoCjL,KAAA4nE,EAAAa,EAAAzoE,KAAA6K,GAAA7K,KAAA+oE,WAAA,IAAsC/oE,KAAAqG,EAAA0hE,IAAW/nE,KAAAmK,EAAA49D,IAAWntC,EAAA,CAAuG,GAAjG56B,KAAA8K,EAAAi9D,IAAW98D,EAAAigE,IAAA,KAAW9kE,EAAAw0B,EAAA/e,MAAA,GAAa/S,EAAA8xB,EAAA1d,KAAA,GAAYmzB,EAAAzV,EAAAuwC,MAAUhhE,EAAAywB,EAAAwwC,IAAQhF,EAAAxrC,EAAA/3B,MAAA+3B,EAAA/3B,GAAA+3B,EAAA/3B,GAAA+tC,MAAA,MAAgCzmC,EAAA,CAAuB,GAAjBnK,KAAAqmE,EAAA0B,IAAWl/D,EAAAk/D,IAAM13B,EAAA,GAAAg4B,EAAAh4B,GAAAxnC,EAAAwnC,GAAAplC,OAAoB,GAAAm7D,EAAA/1B,GAAA,QAAAjnC,EAAA,EAAyBA,EAAAinC,EAAA10C,OAAWyN,IAAAP,EAAAwnC,EAAAjnC,IAAA6B,OACxe08D,EAAAt3B,KAAAxnC,EAAAwnC,GAAqC,IAApB+1B,EAAAj8D,KAAAywB,EAAAwwC,IAAAjhE,EAAA,CAAAA,IAAoBkmC,EAAA,EAAQA,EAAAlmC,EAAAxO,OAAW00C,IAAArwC,KAAAqmE,EAAAl8D,EAAAkmC,IAAA03B,IAAqB/nE,KAAA2lE,EAAAx7D,EAASkmC,EAAAxnC,EAAI,GAAAwnC,EAAA,CAAM,IAAA+1B,EAAA/1B,GAAA,GAAAs3B,EAAAt3B,GAAA,CAAkB,IAAA/lC,EAAA+lC,EAAQzV,EAAAuwC,MAAA96B,EAAA13C,OAAAukB,KAAAmzB,QAAyBzV,EAAAuwC,MAAA96B,EAAA,CAAAA,GAAmB,IAAAzV,EAAA,EAAQA,EAAAyV,EAAA10C,OAAWi/B,IAAAwrC,EAAAj8D,EAAAkmC,EAAAzV,MAAAtwB,IAAAW,EAAAX,EAAAH,IAAArB,EAAA8xB,GAAAzwB,EAAAkmC,EAAAzV,GAAAzwB,EAAAymC,MAAA,MAAAxqC,EAAA+D,GAAA,IAAAC,EAAAa,GAAA7E,EAAA+D,GAAAW,EAAA9K,KAAA8K,GAAqK,OAAhF9K,KAAA8lE,GAAA,EAAU9lE,KAAA8G,KAAA9G,KAAAitC,MAAApiC,EAAAq9D,EAAAr9D,EAAAI,EAAAgiC,OAAAjtC,KAAAitC,OAAAw8B,EAAAx8B,MAAApiC,IAAA,IAAAwgE,EAAAxgE,GAAsE7K,MAAaoK,EAAA7F,UAAAmlE,OAAA,SAAAz+D,GAC5V,OAD2XA,GAAAi/D,EAAAvuE,SAAAsP,EAAA86D,EAAA96D,EAAAi/D,IAA0Bj/D,GAAAjL,KAAAoG,EAAAzK,SAAAsP,EAAA86D,EAAA96D,EAAAjL,KAAAoG,IAAkC6E,GAAAjL,KAAAq7B,IAAApwB,EAAAjL,KAAAq7B,EAAApwB,IAAyBA,GAAAjL,KAAAyqE,UAAAx/D,EAAA86D,EAAA96D,EAC/djL,KAAAyqE,UAAex/D,GAAUb,EAAA7F,UAAAymE,WAAA,SAAA//D,GAAmC,IAAAJ,EAAA/B,EAAA9I,KAAAoG,EAAe,IAAAyE,KAAAI,IAAA3F,eAAAuF,IAAA/B,EAAAvF,KAAA+C,EAAAuE,GAAAI,EAAAJ,IAAkD,OAAA7K,MAAaoK,EAAA7F,UAAAqlC,IAAA,SAAA3+B,EAAAnC,EAAA+B,EAAAwlC,EAAAzV,GAAoC,GAAA56B,KAAAiL,GAAA08D,EAAA18D,GAAA,OAAAjL,KAAAsG,EAAA,MAAA2E,EAAAnC,GAAyC,GAAAA,GAAAu/D,EAAAv/D,KAAAmC,GAAA,IAAAA,GAAA,CAAwB,IAAAd,EAAA,IAAAc,EAAY,GAAAjL,KAAAmK,OAAAkmC,EAAA,OAAArwC,KAAAgsB,OAAA/gB,EAAAnC,GAAyC,GAAA9I,KAAAiE,EAAA,QAAAjE,KAAAmJ,GAAAnJ,KAAA8I,EAAAnN,SAAAqE,KAAAmJ,EAAA,GAAAnJ,KAAA8I,EAAA9I,KAAAmJ,GAAA8/D,YAAA,CAAgFr/B,KAAA,EAAA/mC,GAAAoI,EAAA69D,QAAAhgE,IAAsB9I,KAAAmK,KAAA,GAAAnK,KAAAmJ,EAAA0B,OAAA7K,KAAkC,IAAA46B,EAAA,CAAO,GAAA56B,KAAAmpE,OAAA,mBAAAmC,cAAA,CAAkD,IAAAziE,EAAA7I,KACzc,OADodmK,EAAA,IAAAjK,QAAA,SAAAkoE,GAA0BvI,WAAA,WAAsBh3D,EAAA+gC,IAAA3+B,EAChiBnC,EAAA,KAAAunC,GAAA,GAAaxnC,EAAA,KAAOu/D,QAAQv9D,GAAAV,EAAAnI,KAAA6I,GAA6B7K,MAAdmK,EAA0B,GAAAU,EAAA,OAAA7K,KAAA4pC,IAAA3+B,EAAAnC,EAAA,KAAAunC,GAAA,GAAAxlC,IAAA7K,KAA8D,KAAjB8I,EAAA9I,KAAA0pE,OAAA5gE,IAAiBnN,OAAA,OAAAqE,KAAkC46B,EAAA0sC,EAATz8D,EAAA7K,KAAA6I,GAASgC,EAAA/B,KAAA8nC,MAAA5wC,KAAA4wC,OAAiC5wC,KAAA0+B,SAAA9D,EAAA0rC,EAAA1rC,EAAA56B,KAAA0+B,SAAmC,IAAAt4B,EAAA2hE,IAAU3hE,EAAAmlE,KAAAxD,IAAW,QAAA3+D,EAAAwxB,EAAAj/B,OAAA2O,EAAAtK,KAAA+oE,UAAAr/D,EAAA1J,KAAA2pE,MAAAxgE,EAAAnJ,KAAA6K,EAAAw8D,EAAArnE,KAAA4nE,EAAAh/D,EAAA5I,KAAA+nE,EAAAH,EAAA,EAAgFA,EAAAx+D,EAAIw+D,IAAA,CAAK,IAAArB,EAAA3rC,EAAAgtC,GAAW,GAAArB,EAAA,CAAM,IAAA58D,EAAA48D,EAAA5qE,OAAAksE,GAAAj/D,EAAAg/D,EAAA,EAAAx+D,EAAAw+D,GAAAx+D,EAAAK,EAAA,GAAoC,OAAAoB,GAAU,iCAAAw7D,EAAA18D,IAAuC08D,GAAIL,EAAAqB,EAAAjhE,EAAAqD,EAAA88D,EAAAF,GAAA58D,EAAAwB,EAAArC,EAAA,GAAAe,EAAA08D,GAAA18D,EAAAk+D,EAAAv9D,EAAAnB,EAAA,GAAyCM,EAAA,GAAK,kBAAA48D,EAC/e,EAAEA,EAAA18D,EAAI08D,IAAAL,EAAAqB,EAAAjhE,EAAAqD,GAAA88D,EAAAF,GAAAp7D,EAAArC,GAAAy9D,EAAA,GAAA18D,EAAA,EAAAk+D,EAAAv9D,EAAAnB,EAAA,GAA2C,MAAM,eAAAk9D,EAAA,EAAoBA,EAAA18D,EAAI08D,IAAA,QAAA2B,GAAAp/D,EAAAy9D,EAAA,EAAA18D,EAAA08D,GAAA18D,EAAAs+D,EAAAt+D,EAAgCs+D,EAAA5B,EAAI4B,IAAAjC,EAAAqB,EAAAjhE,EAAAqD,EAAA88D,EAAA8C,UAAAhD,EAAA4B,GAAAh9D,EAAA+8D,EAAAH,EAAAv9D,EAAAnB,EAAA,GAA4C,MAAM,WAAAQ,EAAAq8D,EAAAqB,EAAAjhE,EAAAmgE,EAAAt7D,EAAA,EAAA48D,EAAAv9D,EAAAnB,EAAA,GAAAO,GAAA,EAAAN,GAAAO,GAAAW,EAAA,IAAAX,EAAAvD,EAAAmlE,KAAAhF,KAAAngE,EAAAmlE,KAAAhF,GAAAwB,KAAAxB,EAAAvmE,KAAAqG,EAAAkgE,KAAAvmE,KAAAqG,EAAAkgE,GAAAkC,EAAAt/D,GAAAmB,GAAA,QAAAu9D,EAAAD,EAAAl+D,KAAAm+D,EAAA,IAAAp+D,EAAAm+D,EAAAl+D,EAAA,GAAAN,IAAAK,EAAAL,GAA0Jy+D,EAAAp+D,EAAIo+D,QAAAD,GAAA5B,EAAAO,EAAA58D,EAAAixB,EAAAitC,GAAA58D,EAAA,EAAA9B,GAAA0+D,EAAAD,IAAAC,IAAAD,GAAAt9D,EAAAnB,EAAA,KAAmDnJ,KAAAmK,KAAA,EAAYnK,KAAA8lE,GAAA,EAAU,OAAA9lE,MAAaoK,EAAA7F,UAAA+B,EAAA,SAAA2E,EAAAnC,EAAA+B,GAA8B,GAAAu7D,EAAAt9D,GAAA,QAAAunC,EAAA,EAAAzV,EAAA9xB,EAAAnN,OAA+B00C,EAAAzV,EAAIyV,IAAA,CAAK,GAAAA,IAAAzV,EAAA,SAAA56B,KAAAsG,EAAA2E,EAC/dnC,EAAAunC,GAAAxlC,GAAQ7K,KAAAsG,EAAA2E,EAAAnC,EAAAunC,QAAe,CAAKA,EAAArwC,KAAAiL,EAAA4Q,MAAe+e,EAAA56B,KAAAiL,EAAAiS,KAAc,QAAA9W,EAAAgD,EAAAkB,EAAAZ,EAAAS,EAAAnK,KAAAiL,EAAAmgE,IAAAviE,EAAA7I,KAAAiL,EAAApI,GAAAsG,EAAA,EAA6CA,EAAAN,EAAAlN,OAAWwN,IAAA/C,MAAA0C,GAAAD,EAAAM,IAAmB,GAAAgB,EAAA,CAAM,IAAAtB,EAAA,EAAQA,EAAAsB,EAAAxO,OAAWkN,IAAA,CAA2B,IAAfO,GAAPkB,EAAAH,EAAAtB,IAAO+nC,MAAA,KAAeznC,EAAA,EAAQA,EAAAC,EAAAzN,OAAWwN,IAAAO,MAAAZ,GAAAM,EAAAD,IAAmBO,EAAA,IAAAA,EAAoBN,GAAZA,EAAApJ,KAAAqmE,EAAA/7D,IAAYZ,KAAAN,EAAAM,GAAA,IAAkB,cAAAuB,EAAA,WAAAjL,KAAA8K,EAAA1E,GAAAyC,EAAA,EAAAsB,EAAAywB,EAAAj/B,OAAoDkN,EAAAsB,EAAItB,IAAA,CAAK,GAAAA,IAAAsB,EAAA,SAAAkmC,EAAAzV,EAAA/xB,IAAAohC,OAAA7jC,EAAAyE,GAAA7K,KAA2CqwC,EAAAzV,EAAA/xB,IAAAohC,OAAA7jC,GAAoE,IAAlDyC,EAAA7I,KAAAiL,EAAAkgE,MAAe/hE,QAAAzN,QAAAmN,GAAmB9I,KAAA8K,EAAA1E,GAAA0C,EAAYqB,EAAA,EAAIG,EAAAzB,EAAAlN,OAAewO,EAAAG,EAAIH,IAAA,CAAqB,IAAhBf,EAAAP,EAAAsB,GAAOT,OAAA,EAASP,EAAA,EAAQA,EAAAC,EAAAzN,OAAWwN,IAAAO,MAC3eZ,GAAAM,EAAAD,IAASC,EAAAinC,EAAAzV,EAAAzwB,IAAUhB,EAAA,QAAA8B,EAAA7B,EAAAwgC,IAAAxgC,EAAA4iB,OAA2B7hB,IAAAG,EAAA,EAAAnB,EAAA1E,KAAA2E,EAAAhD,EAAAsD,EAAAmB,GAAA1B,EAAA1E,KAAA2E,EAAAhD,EAAAsD,IAAuC,OAAA1J,MAAaoK,EAAA7F,UAAAynB,OAAA,SAAA/gB,EAAAnC,EAAA+B,GAAmC,OAAA7K,KAAAiL,GAAA08D,EAAA18D,GAAAjL,KAAAsG,EAAA,SAAA2E,EAAAnC,IAA4C9I,KAAAmK,EAAA,IAAAc,IAAAo9D,EAAAv/D,KAAA9I,KAAAiqC,OAAAh/B,GAAAjL,KAAA4pC,IAAA3+B,EAAAnC,EAAA+B,GAAA,IAAyD7K,OAAaoK,EAAA7F,UAAA0lC,OAAA,SAAAh/B,EAAAnC,EAAA+B,GAAmC,GAAA7K,KAAAiL,GAAA08D,EAAA18D,GAAA,OAAAjL,KAAAsG,EAAA,SAAA2E,EAAAnC,GAA4C,IAAAunC,EAAA,IAAAplC,EAAY,GAAAjL,KAAAmK,EAAAkmC,GAAA,CAAc,GAAArwC,KAAAiE,EAAA,OAAAjE,KAAA8I,EAAA9I,KAAAmK,EAAAkmC,IAAA44B,YAAA,CAAgDh/B,QAAA,EAAApnC,GAAAoI,WAAejL,KAAAmK,EAAAkmC,GAAAvnC,OAAA9I,KAA+B,IAAA6K,EAAA,CAAO,GAAA7K,KAAAmpE,OAAA,mBAAAmC,cAAA,CAAkD,IAAA1wC,EACvf56B,KAAwF,OAAnFqwC,EAAA,IAAAnwC,QAAA,SAAAiK,GAA0B01D,WAAA,WAAsBjlC,EAAAqP,OAAAh/B,EAAA,SAAoB2vB,EAAA,KAAOzwB,QAAQrB,GAAAunC,EAAAruC,KAAA8G,GAA6B9I,MAAdqwC,EAA0B,GAAAvnC,EAAA,OAAA9I,KAAAiqC,OAAAh/B,EAAA,SAAAnC,IAAA9I,KAA4C,IAAA8I,EAAA,EAAQA,EAAA9I,KAAA6K,GAAA7K,KAAA+oE,WAAA,GAA6BjgE,IAAA69D,EAAA3mE,KAAA4nE,EAAA9+D,GAAAmC,GAAoBjL,KAAA2pE,OAAAhD,EAAA3mE,KAAAqG,EAAA4E,UAAyBjL,KAAAmK,EAAAkmC,GAAiBrwC,KAAA8lE,GAAA,EAAU,OAAA9lE,MAAmBoK,EAAA7F,UAAAskE,OAAA,SAAA59D,EAAAnC,EAAA+B,EAAAwlC,GAAqC,GAAAs3B,EAAA7+D,GAAA,CAAS,GAAAs9D,EAAAt9D,GAAA,QAAA8xB,EAAA,EAAoBA,EAAA9xB,EAAAnN,OAAWi/B,IAAA9xB,EAAA8xB,GAAA4wC,MAAAvgE,OAAiBnC,EAAA0iE,MAAAvgE,EAAeA,EAAAnC,EAAIA,EAAA,SAAMA,GAAAw+D,EAAAx+D,IAAA+B,EAAA/B,IAAA,KAAAA,GAAA,IAAAA,MAAA,KAA4C,IAAAqB,EAAA,GAAAtB,EAAAoC,EAAa,GAAA08D,EAAA18D,KAAAm7D,EAAAn7D,GAAA,CAAgBJ,MAAAI,EAAA2R,YAC7e/T,EAAA+T,SAAA,MAAkB,IAAAxW,EAAA6E,EAAAg4B,KAAa75B,EAAA6B,EAAAxP,KAAaqN,EAAAmC,EAAA+9D,MAAU,IAAA1+D,EAAAW,EAAA89D,UAAkBr/D,EAAAuB,EAAAu+D,QAAgBv+D,IAAAugE,MAAU,GAAAxrE,KAAAiL,EAAA,CAAWX,EAAAtK,KAAAiL,EAAA4Q,MAAe,IAAA0qD,EAAA58D,EAAAR,EAAAN,EAAAi6B,MAAAukC,EAAAx+D,EAAA4iE,MAAA,KAAA7iE,EAAAC,EAAAsiE,MAAAvD,EAAAP,EAA+C,GAAAz+D,EAAAw9D,EAAAx9D,OAAA,CAAAA,SAAmB,GAAAw9D,EAAAv9D,GAAA,CAAc,IAAAg/D,EAAAh/D,EAAQD,EAAA,GAAKg/D,EAAA,GAAK,QAAAn+D,EAAA,EAAYA,EAAAZ,EAAAlN,OAAW8N,IAAAmxB,GAAAyV,EAAAxnC,EAAAY,IAAAgiE,MAAApE,EAAAz+D,EAAAa,GAAA4mC,EAAA86B,MAAAvD,EAAAn+D,GAAAmxB,EAAA,QAAAA,EAAA2rC,GAAA,UAAA3rC,IAAAjxB,GAAA,QAA4Ef,EAAA5I,KAAAiL,EAAAiS,KAA8B,IAAXmqD,EAAAz+D,EAAAjN,OAAW8N,EAAA,EAAQA,EAAA49D,EAAI59D,IAAAo+D,IAAAh/D,EAAAg/D,EAAAp+D,IAAAL,IAAAi/D,EAAAx/D,OAAApN,KAAA,KAAAoN,EAAAmgE,MAAA,GAAA7+D,EAAAV,GAAAa,EAAA1B,EAAAa,IAAAo/D,OAAAhgE,EAAA,GAA2E,GAAA7I,KAAAiE,EAAA,CAAuC,IAA5BjE,KAAAgmE,EAAAn7D,EAAS7K,KAAA0lE,EAAA,EAAS1lE,KAAAqnE,EAAA,GAAU/8D,EAAA,EAAQA,EAAAtK,KAAAiE,EAASqG,IAAAtK,KAAA8I,EAAAwB,GAAA2+D,YAAA,CAA2BJ,QAAA,EACzgBG,MAAAlgE,EAAAggE,QAAAjgE,IAAoB,OAAO,GAAAgC,EAAA,OAAAA,EAAAC,EAAArG,KAAAzE,KAAAiL,EAAA28D,EAAAz9D,EAAA/D,EAAA0C,EAAAY,EAAAP,EAAAC,EAAAO,EAAA48D,IAAgD,GAAAvmE,KAAAmpE,MAAA,CAAe,IAAA9C,EAAArmE,KAAW,WAAAE,QAAA,SAAAwrE,GAAgCxrE,QAAA4mE,IAAA38D,GAAAnI,KAAA,SAAA2pE,GAAiCD,EAAA5gE,EAAArG,KAAA4hE,EAAAp7D,EAAA28D,EAAA+D,EAAAvlE,EAAA0C,EAAAY,EAAAP,EAAAC,EAAAO,EAAA48D,QAAuC,OAAAz7D,EAAArG,KAAAzE,KAAAiL,EAAA28D,EAAAz9D,EAAA/D,EAAA0C,EAAAY,EAAAP,EAAAC,EAAAO,EAAA48D,GAAiE,GAAzBj8D,MAAAtK,KAAA+oE,WAAA,IAAyB14B,EAAA,CAAO,GAAArwC,KAAAmpE,OAAA,mBAAAmC,cAAA,CAAkD,IAAAtD,EAAAhoE,KAAiG,OAAtFsK,EAAA,IAAApK,QAAA,SAAAwrE,GAA2B7L,WAAA,WAAsB6L,EAAA1D,EAAAa,OAAAhgE,EAAAC,EAAA,UAA0Bk/D,EAAA,SAAWn9D,GAAAP,EAAAtI,KAAA6I,GAA6B7K,MAAdsK,EAA0B,GAAAO,EAAA,OAAAA,EAAA7K,KAAA6oE,OAAAhgE,EAAAC,EAAA,UACjd9I,KAAK,IAAAiL,IAAAo9D,EAAAp9D,GAAA,OAAAd,EAA0B,GAAJtB,EAAAoC,EAAIjL,KAAAitC,MAAA,GAAAjtC,KAAA8lE,GAAyB,GAAAj7D,EAAA7K,KAAA8G,EAAA4hB,IAAAzd,GAAA,OAAAJ,OAA4B7K,KAAA8G,EAAA+a,QAAA7hB,KAAA8lE,GAAA,EAA+C,KAAjBj9D,EAAA7I,KAAA0pE,OAAA7gE,IAAiBlN,OAAA,OAAAwO,EAA+BU,EAAAy8D,EAATz8D,EAAA7K,KAAA6I,GAASgC,EAAAhC,KAAA+nC,MAAA5wC,KAAA4wC,OAAiC5wC,KAAA0+B,SAAA7zB,EAAAy7D,EAAAz7D,EAAA7K,KAAA0+B,SAAmCmpC,EAAAh9D,EAAAlP,OAAW00C,GAAA,EAAKzV,EAAA,GAAK,IAAAqtC,EAAAF,IAAAK,EAAA,EAAkE,GAApD,EAAAP,IAAA7nE,KAAA2pE,OAAA,WAAA3pE,KAAA6I,EAAAw+D,GAAA,EAAAx8D,EAAAo4B,KAAAujC,KAAoDa,IAAA59D,EAAAzJ,KAAAqG,GAAA,QAAAyhE,EAAA9nE,KAAA6K,EAAoCu9D,EAAAP,EAAIO,IAAA,CAAK,IAAAnC,EAAAp7D,EAAAu9D,GAAW,GAAAnC,EAAA,CAAM,GAAAoB,EAAA,CAAM,IAAAz+D,EAAA,GAAAa,EAAAw8D,GAAAr9D,EAAAq9D,EAAAgC,EAAAhC,GAAA,OAAyB,IAAAv8D,EAAA,OAAAS,EAAoB,GAAAT,GAAA0+D,IAAAP,EAAA,IAAAjtC,EAAAj/B,OAAA0rE,GAAA,EAAAY,EAAAhC,EAAAr9D,GAAAq9D,GAAA,OAA4C,IAAAr9D,EAAA,SAAoB,IAAAq/D,EAAAhC,GAAA,CAAU,IAAAC,EACxf,GAAAoC,GAAA,EAAA9rE,EAAA,EAAA+rE,EAAAlB,EAAA59D,EAAAb,GAAA5I,KAAA4nE,EAA6B,GAAAW,EAAA,QAAAC,OAAA,EAAAL,EAAA,EAA2BA,EAAAL,EAAAx9D,EAAO69D,KAAAK,EAAAD,EAAAJ,IAAAI,EAAAJ,GAAAlC,MAAAC,EAAA1pE,KAAAgsE,EAAAF,GAAA,GAAwC,GAAAA,EAAA1/D,EAAAq9D,EAAArrC,IAAAj/B,QAAA,EAAAa,EAAA0pE,EAAAtjE,OAAAtC,MAAA,GAAA4lE,KAAA,QAAoD,IAAAx8D,EAAA,CAAY2mC,GAAA,EAAK,MAAM43B,EAAAhC,GAAA,SAAS51B,GAAA,EAAyD,OAA/CA,IAAAlmC,EAAAo9D,EAAA3sC,EAAA9xB,EAAAM,EAAAM,IAAmB1J,KAAAitC,OAAAjtC,KAAA8G,EAAA6hB,IAAA1d,EAAAd,GAA4BA,GAAUC,EAAA7F,UAAAqnE,KAAA,SAAA3gE,EAAAnC,GAA+B,OAAA9I,KAAA8iC,MAAA73B,EAAAnC,EAAA,aAAmCsB,EAAA7F,UAAAu+B,MAAA,SAAA73B,EAAAnC,EAAA+B,EAAAwlC,GAAoC,IAAAjqC,EAAAw0B,EAAA56B,KAAA8K,EAAAX,EAAA,GAAAtB,EAAA,EAAwB,GAAA8+D,EAAA18D,GAAA,CAASJ,MAAA/B,GAAS,IAAAM,EAAAzQ,OAAAukB,KAAAjS,GAAqBX,EAAAlB,EAAAzN,OAAe+N,GAAA,EAAS,OAAAY,GAAA,OAAAlB,EAAA,UAAAwxB,EAAA3vB,EAAApI,KAAsC,IAAAuD,EAAApG,KAAA2lE,KAAAt1B,EAAA,QAAAlnC,EACje,EAAEA,EAAA/C,EAAAzK,OAAWwN,IAAA,CAAK,IAAAk+D,EAAAjhE,EAAA+C,GAAAP,EAAAqC,EAAAo8D,GAAkB,IAAAa,EAAAt/D,GAAA,CAAU,IAAAg/D,EAAA5nE,KAAAqmE,EAAAgB,GAAA,IAAAz+D,GAAuB,QAAA0B,EAAA,OAAAs9D,EAAoBx+D,EAAAwgB,OAAAxgB,EAAA2V,QAAAsoD,GAAA,UAAyBp8D,EAAAo8D,GAAY,OAAkB,IAAXjhE,EAAAlC,MAAAoG,GAAWnB,EAAA,EAAQA,EAAAmB,EAAInB,IAAA/C,EAAA+C,GAAAC,EAAAD,GAAAynC,MAAA,SAAyB,CAAK,GAAA02B,EAAAr8D,GAAA,CAAyC,IAAXJ,GAApB/B,EAAAunC,GAAA13C,OAAAukB,KAAA0d,IAAoBj/B,OAAWyN,EAAA,EAAQA,EAAAyB,EAAIzB,IAAA6B,EAAAX,EAAAswB,EAAA9xB,EAAAM,OAAAe,EAAAtB,KAAAyB,GAA+B,OAAAH,EAAS,GAAA+9D,EAAAp/D,GAAA,OAAA8xB,EAAA3vB,IAAqB,UAAAA,EAAA,OAAA2vB,EAAA9xB,IAAyBM,EAAA,CAAA6B,GAAMX,EAAA,EAAIlE,EAAA,CAAA6E,EAAA2lC,MAAA,MAAiBlnC,GAAA,EAAuC,IAAXP,GAAvBknC,EAAAu3B,GAAAv3B,GAAA13C,OAAAukB,KAAA0d,IAAuBj/B,OAAW0rE,EAAA,EAAQA,EAAAl+D,EAAIk+D,IAAA,CAAKz+D,EAAAg/D,EAAAv3B,EAAAg3B,GAAAzsC,EAAAyV,EAAAg3B,IAAiB,QAAAd,GAAA,EAAA58D,EAAA,EAAiBA,EAAAW,EAAIX,IAAA,CAAKD,IAAAZ,EAAAmC,EAAA7B,EAAAO,KAAe,IAAAk+D,EAAAzhE,EAAAuD,GAAAF,EAAAo+D,EAAAlsE,OAAA0qE,EAAAz9D,EAA0B,KAAAa,EAAA,QAAAu+D,EAC5e,EAAEA,EAAAv+D,EAAIu+D,IAAA3B,IAAAwB,EAAAG,SAAc3B,IAAAwB,EAAA,IAAe,GAAAxB,IAAAv9D,EAAA,CAAUy9D,GAAA,EAAK,OAAO,GAAAA,IAAAp8D,EAAAtB,KAAAD,EAAAiC,GAAAhC,IAAAgC,GAAA,MAAgC,OAAAV,GAAUC,EAAA7F,UAAAzC,KAAA,WAA4B,IAAA9B,KAAAiE,EAA+E,OAAYpB,GAAA7C,KAAA6C,GAAAy/B,MAAAtiC,KAAArE,OAAAsxC,SAAAjtC,KAAAitC,QAAAjtC,KAAAitC,MAAA46B,IAAA7nE,KAAAitC,MAAA46B,EAAAlsE,OAAAovE,QAAAb,EAAAvuE,QAAAqE,KAAAoG,EAAApG,KAAAoG,EAAAzK,OAAA,GAAAutE,OAAAlpE,KAAAiE,EAAA8kE,UAAA/oE,KAAA+oE,UAAAY,MAAA3pE,KAAA2pE,MAAAmB,WAAA9qE,KAAA6K,EAAAghE,WAAA7rE,KAAA2pE,OAAA,WAAA3pE,KAAA6I,GAA3F,QAAAoC,EAAA,EAAsBA,EAAAjL,KAAAiE,EAASgH,IAAAjL,KAAA8I,EAAAmC,GAAAg+D,YAAA,CAA2BnnE,MAAA,EAAAe,GAAA7C,KAAA6C,MAAoRuH,EAAA7F,UAAAsd,MAAA,WAA6B,OAAA7hB,KAAAisB,UAAAm7C,QAC1eh9D,EAAA7F,UAAA0nB,QAAA,WAAkG,GAAnEjsB,KAAAitC,QAAAjtC,KAAA8G,EAAA+a,QAAA7hB,KAAA8G,EAAA,MAAyC9G,KAAA4nE,EAAA5nE,KAAAqG,EAAArG,KAAAmK,EAAA,KAA0BnK,KAAAiL,EAAA,CAAW,QAAAA,EAAAjL,KAAAiL,EAAAiS,KAAApU,EAAA,EAA0BA,EAAAmC,EAAAtP,OAAWmN,IAAA9I,KAAAiL,EAAA4Q,MAAA5Q,EAAAnC,IAAAmjB,UAAiCjsB,KAAAiL,EAAAjL,KAAA8K,EAAA,KAAmB,OAAA9K,MAAaoK,EAAA7F,UAAAunE,OAAA,WAA8B,GAAA9rE,KAAAiL,EAAA,CAAqD,IAA1C,IAAAA,EAAAjL,KAAAiL,EAAAiS,KAAkBpU,EAAA5E,MAAA+G,EAAAtP,OAAA,GAAwBkP,EAAA,EAAYA,EAAAI,EAAAtP,OAAWkP,IAAA,CAAK,IAAAwlC,EAAArwC,KAAAiL,EAAA4Q,MAAA5Q,EAAAJ,IAAyB/B,EAAA+B,GAAA,CAAAwlC,EAAAu3B,EAAAv3B,EAAAhqC,EAAA1N,OAAAukB,KAAAmzB,EAAAlmC,IAAgCrB,EAAA+B,GAAA7K,KAAA8K,OAAYhC,EAAA,CAAA9I,KAAA4nE,EAAA5nE,KAAAqG,EAAA1N,OAAAukB,KAAAld,KAAAmK,IAA2C,OAAAb,KAAAC,UAAAT,IAA0BsB,EAAA7F,UAAAwnE,OAAA,SAAA9gE,GAA+BA,EAAA3B,KAAAmzC,MAAAxxC,GAC3e,IAAAnC,EAAAi/D,IAAU,GAAA/nE,KAAAiL,EAAA,CAAW,QAAAJ,EAAA7K,KAAAiL,EAAAiS,KAAAmzB,EAAAxlC,EAAAlP,OAAAi/B,EAAA3vB,EAAA,MAAAd,EAAA,EAA+CA,EAAAywB,EAAAj/B,OAAWwO,IAAArB,EAAA8xB,EAAAzwB,IAAA,EAAc,IAAAywB,EAAA,EAAQA,EAAAyV,EAAIzV,KAAAzwB,EAAAnK,KAAAiL,EAAA4Q,MAAAhR,EAAA+vB,KAAAgtC,EAAA38D,EAAA2vB,GAAA,GAAAzwB,EAAA9D,EAAA4E,EAAA2vB,GAAA,GAAAzwB,IAAArB,EAAAqB,EAAAW,EAAAG,EAAAolC,GAAgErwC,KAAA8K,EAAAG,EAAAolC,OAAY,CAAY,IAAPxlC,EAAAI,EAAA,GAAOolC,EAAA,EAAQA,EAAAxlC,EAAAlP,OAAW00C,IAAAvnC,EAAA+B,EAAAwlC,IAAA,EAAcrwC,KAAA4nE,EAAA38D,EAAA,GAAYjL,KAAAqG,EAAA4E,EAAA,GAAYjL,KAAAmK,EAAArB,IAAW,IAAoEmC,EAApEs/D,EAAA,CAAQyB,MAAA,SAAA/gE,GAAkB,OAAAA,EAAAg4D,eAAuBgJ,QAAmBhhE,EAAA,CAAA3E,EAAA,gBAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,gBACzUA,EAAA,eAAAA,EAAA,aAAAA,EAAA,SAAAA,EAAA,YAAAA,EAAA,SAAAA,EAAA,eAAAA,EAAA,YAAAA,EAAA,iBAAAA,EAAA,aAA4L,SAAAwC,GAA0C,aAAvBA,EAAAi9D,EAAAj9D,EAAAm6D,cAAAh4D,IAAuB,GAAAnC,IAAoBojE,SAAA,WAAuB,IAAAjhE,EAAA,CAAA3E,EAAA,UAAAA,EAAA,WAAAA,EAAA,WAAAA,EAAA,WAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,UAAAA,EAAA,WAAmO,gBAAAwC,EACpf+B,GAAG,OAAA/B,GAAgC,GAAjBA,EAAA9I,KAAAisE,OAAAnjE,IAAiBnN,SAAAmN,EAAAi9D,EAAAj9D,EAAAmC,IAAuBJ,GAAA,EAAA/B,EAAAnN,SAAAmN,EAAAq9D,EAAAr9D,IAAwBA,GAA/EA,GADuP,GAC9J6mD,MAAA,WAAoB,IAAA1kD,EAAA,CAAA3E,EAAA,SAAAA,EAAA,SAAAA,EAAA,aAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,YAAAA,EAAA,gBAAkG,gBAAAwC,GAAmB,IAAAA,EAAA,OAAAA,EAAqC,MAAtBA,EAAA9I,KAAAksE,SAAApjE,GAAA,IAAsBnN,OAAA,CAAemN,IAAA8nC,MAAA,KAAe,QAAA/lC,EAAA,EAAYA,EAAA/B,EAAAnN,OAAWkP,IAAA,CAAK,IAAAwlC,EAAAvnC,EAAA+B,GAAW,EAAAwlC,EAAA10C,SAAAmN,EAAA+B,GAAAwlC,EAAA,GAAA01B,EAAA11B,EAAAg5B,UAAA,GAAAp+D,IAA0DnC,EAAAq9D,EAAdr9D,IAAAuxB,KAAA,MAAqB,OAAAvxB,GAApT,GAA8TkhE,QAAA,WAAsB,IAAA/+D,EAAA,CAAA3E,EAAA,YAAAA,EAAA,iBAAAA,EAAA,aAAuD,gBAAAwC,GAAmB,OAAAq9D,EAAAJ,EAAAj9D,EAAAm6D,cAC1fh4D,KAD0Z,IAClZogE,EAAA,WAAe,SAAApgE,EAAAnC,GAAc9I,KAAA6hB,QAAa7hB,KAAAgoE,GAAA,IAAAl/D,KAC8G,OAD7FmC,EAAA1G,UAAAsd,MAAA,WAA6B7hB,KAAAitC,MAAA86B,IAAe/nE,KAAAsuB,MAAAy5C,IAAe/nE,KAAA6b,MAAAksD,IAAe/nE,KAAA6nE,EAAA,IAAW58D,EAAA1G,UAAAokB,IAAA,SAAA7f,EAAA+B,GAA8B,GAAA7K,KAAAgoE,GAAAE,EAAAloE,KAAAitC,MAAAnkC,IAAA,CAA6B,IAAAunC,EAAArwC,KAAA6nE,EAAAlsE,OAAoB,GAAA00C,IAAArwC,KAAAgoE,EAAA,CAAe33B,IAAI,IAAAzV,EAAA56B,KAAA6nE,EAAAx3B,UAAgBrwC,KAAAitC,MAAArS,UAAqB56B,KAAAsuB,MAAAsM,UAAqB56B,KAAA6b,MAAA+e,GAAqB56B,KAAA6b,MAAA/S,GAAAunC,EAAgBrwC,KAAA6nE,EAAAx3B,GAAAvnC,EAAY9I,KAAAsuB,MAAAxlB,IAAA,EAAiB9I,KAAAitC,MAAAnkC,GAAA+B,EAAgB7K,KAAA0oB,IAAA5f,QAAY9I,KAAAitC,MAAAnkC,GAAA+B,GAAsBI,EAAA1G,UAAAmkB,IAAA,SAAA5f,GAA4B,IAAA+B,EAAA7K,KAAAitC,MAAAnkC,GAAoB,GAAA9I,KAAAgoE,GAAAn9D,EAAA,CAAc,IAAAwlC,IAAArwC,KAAAsuB,MAAAxlB,GACte8xB,EAAA56B,KAAA6b,MAAA1R,EAAAywB,EAAA9xB,GAAoB,KAAAqB,EAAA,CAAQ,QAAAtB,EAAA7I,KAAA6nE,EAAAzhE,EAAA+D,EAAqBnK,KAAAsuB,MAAAzlB,IAAAsB,KAAAkmC,IAAA,IAAAlmC,IAAoC,KAAJA,IAAI/D,EAAA,CAAU,IAAAiqC,EAAAjqC,EAAQiqC,EAAAlmC,EAAIkmC,IAAAjqC,EAAAyC,EAAAwnC,EAAA,GAAAxnC,EAAAwnC,GAAAjqC,EAAAw0B,EAAAx0B,GAAAiqC,EAA2BxnC,EAAAsB,GAAArB,EAAO8xB,EAAA9xB,GAAAqB,IAAS,OAAAU,GAAUI,EADxJ,GACoK,OAAAb,EAhCjB,EAgCsCI,EAAA,GAAQH,EAAA,oBAAA8hE,MAAA,oBAAAC,SAAAC,gBAA4E,SAAAjiE,EAAAs7D,EAAAC,EAAAW,EAAAx7D,GAC5Q,OADwS66D,EAAAt7D,EAAA+hE,IAAAC,gBAAA,IAAAF,KAAA,KAAAxG,EAAAnhE,WAAA,QAA2DzF,KAAA,qBAAuBqL,EAAA,UAAwBI,EAATJ,GAAA,IAAAs7D,KAASl7D,EAAAJ,GAAA,IAAgBI,EAAAJ,GAAAU,GAAA,IAAA6/D,OAAAhF,GAAsBn7D,EAAAJ,GAAAU,GAAA89D,UAAAtC,EAAqBxjE,QAAAC,IAAA,oBACtdqH,EAAA,IAAAU,GAASN,EAAAJ,GAAAU,MAAgB9K,4DC/CzBrH,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA4J,gBAAA,EAQA5J,EAAA4J,WAJA,CACAC,KAAA,OACAkB,QAAA,8CCTA,IAAAtH,EAAcD,EAAQ,IACtBiwE,EAAWjwE,EAAQ,KACnB2pB,EAAa3pB,EAAQ,IACrBkwE,EAAyBlwE,EAAQ,KACjCmwE,EAAqBnwE,EAAQ,KAE7BC,IAAA2rE,EAAA3rE,EAAA6rE,EAAA,WAA2CsE,QAAA,SAAAC,GAC3C,IAAA7E,EAAA0E,EAAAvsE,KAAAssE,EAAApsE,SAAA8lB,EAAA9lB,SACAysE,EAAA,mBAAAD,EACA,OAAA1sE,KAAAgC,KACA2qE,EAAA,SAAAljE,GACA,OAAA+iE,EAAA3E,EAAA6E,KAAA1qE,KAAA,WAA8D,OAAAyH,KACzDijE,EACLC,EAAA,SAAA/xC,GACA,OAAA4xC,EAAA3E,EAAA6E,KAAA1qE,KAAA,WAA8D,MAAA44B,KACzD8xC,yCCfLrwE,EAAQ,KAARA,CAAwB,iBAAAuwE,GACxB,kBACA,OAAAA,EAAA5sE,KAAA;;;;;;;ACI6DoF,EAAAvM,QAG5D,WAAqB,aAEtB,IAAAg0E,EAAA,mBAAAxoE,QAAA,iBAAAA,OAAAC,SAAA,SAAA4T,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,mBAAA7T,QAAA6T,EAAAwG,cAAAra,QAAA6T,IAAA7T,OAAAE,UAAA,gBAAA2T,GAaA40D,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAA/nE,UAAA,sCAIAgoE,EAAA,WACA,SAAAhI,EAAA5pD,EAAA/Y,GACA,QAAA2B,EAAA,EAAmBA,EAAA3B,EAAA3G,OAAkBsI,IAAA,CACrC,IAAA8oC,EAAAzqC,EAAA2B,GACA8oC,EAAAhgB,WAAAggB,EAAAhgB,aAAA,EACAggB,EAAAjgB,cAAA,EACA,UAAAigB,MAAAu4B,UAAA,GACA3sE,OAAAC,eAAAyiB,EAAA0xB,EAAAnrC,IAAAmrC,IAIA,gBAAAigC,EAAAE,EAAAC,GAGA,OAFAD,GAAAjI,EAAA+H,EAAAzoE,UAAA2oE,GACAC,GAAAlI,EAAA+H,EAAAG,GACAH,GAdA,GAwBAI,EAAAz0E,OAAA00E,QAAA,SAAAhyD,GACA,QAAApX,EAAA,EAAiBA,EAAAvI,UAAAC,OAAsBsI,IAAA,CACvC,IAAAmX,EAAA1f,UAAAuI,GAEA,QAAArC,KAAAwZ,EACAziB,OAAA4L,UAAAe,eAAAb,KAAA2W,EAAAxZ,KACAyZ,EAAAzZ,GAAAwZ,EAAAxZ,IAKA,OAAAyZ,GAGAiyD,EAAA,WACA,SAAAA,EAAAvrD,GACA,IAAAwrD,IAAA7xE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACA8xE,EAAA9xE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACA+xE,EAAA/xE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,OACAoxE,EAAA9sE,KAAAstE,GAEAttE,KAAA+hB,MACA/hB,KAAAutE,UACAvtE,KAAAwtE,UACAxtE,KAAAytE,iBAmUA,OAhUAR,EAAAK,EAAA,EACA1rE,IAAA,cACA9I,MAAA,WACA,IACA40E,EAAA,GAoBA,YAnBA,IAAA1tE,KAAA+hB,KAAA/hB,KAAA+hB,IAEO4rD,SAAAppE,UAAAqpE,cAAA5tE,KAAA+hB,KACP7d,MAAAK,UAAA2Q,MAAAzQ,KAAAzE,KAAA+hB,KACO7d,MAAAC,QAAAnE,KAAA+hB,KACP/hB,KAAA+hB,IACO,iBAAA/hB,KAAA+hB,IACP7d,MAAAK,UAAA2Q,MAAAzQ,KAAAyjC,SAAA2lC,iBAAA7tE,KAAA+hB,MAEA,CAAA/hB,KAAA+hB,KARA,IAUA9e,QAAA,SAAA8e,GACA,IAAA+rD,EAAAJ,EAAAhvC,OAAA,SAAAqvC,GACA,OAAAA,EAAAC,SAAAjsD,KACSpmB,OAAA,GACT,IAAA+xE,EAAA3uD,QAAAgD,IAAA+rD,GACAJ,EAAAnqE,KAAAwe,KAGA2rD,IAEG,CACH9rE,IAAA,oBACA9I,MAAA,SAAAm1E,EAAAC,GACA,IAAAC,EAAAzyE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,gBAEAwvE,OAAA,EACA,IACA,IAAAkD,EAAAH,EAAAI,cAEA,GADAnD,EAAAkD,EAAAlmC,UACAkmC,IAAAlD,EACA,UAAA/wB,MAAA,uBAEO,MAAAvf,GACPuzC,IAEAjD,GACAgD,EAAAhD,KAGG,CACHtpE,IAAA,gBACA9I,MAAA,SAAAm1E,GACA,IAAAvjE,EAAA,cACA+3D,EAAAwL,EAAA7iC,aAAA,OAAAkjC,OACAC,EAAAN,EAAAI,cAAAG,SAAAD,KACA,OAAAA,IAAA7jE,GAAA+3D,IAAA/3D,GAAA+3D,IAEG,CACH7gE,IAAA,oBACA9I,MAAA,SAAAm1E,EAAAC,EAAAC,GACA,IAAAM,EAAAzuE,KAEA0uE,GAAA,EACAC,EAAA,KACAxkD,EAAA,SAAAA,IACA,IAAAukD,EAAA,CAGAA,GAAA,EACAE,aAAAD,GACA,IACAF,EAAAI,cAAAZ,KACAA,EAAArmC,oBAAA,OAAAzd,GACAskD,EAAAK,kBAAAb,EAAAC,EAAAC,IAES,MAAAvzC,GACTuzC,OAGAF,EAAA1mC,iBAAA,OAAApd,GACAwkD,EAAA9O,WAAA11C,EAAAnqB,KAAAytE,kBAEG,CACH7rE,IAAA,gBACA9I,MAAA,SAAAm1E,EAAAC,EAAAC,GACA,IACA,aAAAF,EAAAI,cAAAnmC,SAAA6mC,WACA/uE,KAAA6uE,cAAAZ,GACAjuE,KAAAgvE,kBAAAf,EAAAC,EAAAC,GAEAnuE,KAAA8uE,kBAAAb,EAAAC,EAAAC,GAGAnuE,KAAAgvE,kBAAAf,EAAAC,EAAAC,GAEO,MAAAvzC,GACPuzC,OAGG,CACHvsE,IAAA,iBACA9I,MAAA,SAAAipB,EAAAhgB,GACA,IAAAktE,EAAAjvE,KAEAkvE,EAAA,EACAlvE,KAAAmvE,cAAAptD,EAAA,WACA,UACO,SAAAksD,GACPiB,IACAD,EAAAG,eAAAnB,EAAAoB,cAAA,qBACAH,GACAntE,OAGO,SAAAutE,GACPA,GACAvtE,QAIG,CACHH,IAAA,gBACA9I,MAAA,SAAAipB,EAAA2c,EAAA5hB,GACA,IAAAyyD,EAAAvvE,KAEAu3B,EAAA77B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,gBAEAuyE,EAAAlsD,EAAA8rD,iBAAA,UACA2B,EAAAvB,EAAAtyE,OACA2zE,EAAA,EACArB,EAAA/pE,MAAAK,UAAA2Q,MAAAzQ,KAAAwpE,GACA,IAAAwB,EAAA,aACAD,GAAA,GACAj4C,EAAA+3C,IAGAE,GACAC,IAEAxB,EAAAhrE,QAAA,SAAAgrE,GACAX,EAAA1nD,QAAAqoD,EAAAsB,EAAA/B,SACAiC,IAEAF,EAAAG,cAAAzB,EAAA,SAAA0B,GACAjxC,EAAAuvC,KACAqB,IACAxyD,EAAA6yD,IAEAF,KACWA,OAIR,CACH7tE,IAAA,iBACA9I,MAAA,SAAAipB,EAAA6tD,EAAAlxC,GACA,OAAAwJ,SAAA2nC,mBAAA9tD,EAAA6tD,EAAAlxC,GAAA,KAEG,CACH98B,IAAA,yBACA9I,MAAA,SAAAg3E,GACA,WAAAxC,EAAAwC,EAAAT,cAAA,QAAArvE,KAAAutE,WAEG,CACH3rE,IAAA,oBACA9I,MAAA,SAAA4uC,EAAAqoC,EAAA9B,GACA,IAAA+B,EAAAtoC,EAAAuoC,wBAAAhC,GACApvE,EAAAqxE,KAAAC,4BACA,GAAAH,EAAAnxE,EAAA,CACA,UAAAkxE,EAOA,SANA,IAAAK,EAAAL,EAAAE,wBAAAhC,GACAl7B,EAAAm9B,KAAAG,4BACA,GAAAD,EAAAr9B,EACA,SAMA,WAEG,CACHnxC,IAAA,kBACA9I,MAAA,SAAAw3E,GACA,IAAAP,EAAAO,EAAAC,eACA7oC,OAAA,EAMA,OAJAA,EADA,OAAAqoC,EACAO,EAAAE,WAEAF,EAAAE,YAAAF,EAAAE,WAEA,CACAT,WACAroC,UAGG,CACH9lC,IAAA,oBACA9I,MAAA,SAAA4uC,EAAAqoC,EAAAU,EAAAxC,GACA,IAAArsE,GAAA,EACA0tE,GAAA,EAOA,OANArB,EAAAhrE,QAAA,SAAAytE,EAAAzsE,GACAysE,EAAA1mE,MAAAymE,IACA7uE,EAAAqC,EACAqrE,EAAAoB,EAAApB,WAGAtvE,KAAA2wE,kBAAAjpC,EAAAqoC,EAAAU,KACA,IAAA7uE,GAAA0tE,GAKS,IAAA1tE,GAAA0tE,IACTrB,EAAArsE,GAAA0tE,SAAA,GALArB,EAAA1qE,KAAA,CACAyG,IAAAymE,EACAnB,SAAA,KAKA,KAEA,IAAA1tE,GACAqsE,EAAA1qE,KAAA,CACAyG,IAAAymE,EACAnB,SAAA,KAGA,KAEG,CACH1tE,IAAA,oBACA9I,MAAA,SAAAm1E,EAAA2B,EAAAgB,EAAAC,GACA,IAAAC,EAAA9wE,KAEAiuE,EAAAhrE,QAAA,SAAAytE,GACAA,EAAApB,SACAwB,EAAAhC,kBAAA4B,EAAA1mE,IAAA,SAAA2lE,GACAmB,EAAAC,uBAAApB,GAAAqB,YAAApB,EAAAgB,EAAAC,SAKG,CACHjvE,IAAA,sBACA9I,MAAA,SAAA82E,EAAA7tD,EAAAkvD,EAAAC,EAAAC,GAgBA,IAfA,IAAAC,EAAApxE,KAEAswE,EAAAtwE,KAAAqxE,eAAAtvD,EAAA6tD,EAAAsB,GACAjD,EAAA,GACA3gD,EAAA,GACAoa,OAAA,EACAqoC,OAAA,EAEAuB,WAAAF,EAAAG,gBAAAjB,GAEAP,EAAAuB,EAAAvB,SACAroC,EAAA4pC,EAAA5pC,MAKA1nC,KAAAutE,SACAvtE,KAAAmvE,cAAAptD,EAAA,SAAA0uD,GACA,OAAAW,EAAAI,kBAAA9pC,EAAAqoC,EAAAU,EAAAxC,IACW,SAAA0B,GACXyB,EAAAL,uBAAApB,GAAAqB,YAAApB,EAAA,SAAA6B,GACA,OAAAnkD,EAAA/pB,KAAAkuE,IACaP,KAGb5jD,EAAA/pB,KAAAmkC,GAlBA,IACA4pC,EAmBAhkD,EAAArqB,QAAA,SAAAykC,GACAupC,EAAAvpC,KAEA1nC,KAAAutE,SACAvtE,KAAA0xE,kBAAAzD,EAAA2B,EAAAqB,EAAAC,GAEAC,MAEG,CACHvvE,IAAA,cACA9I,MAAA,SAAA82E,EAAA9yD,EAAA4hB,GACA,IAAAizC,EAAA3xE,KAEA+B,EAAArG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,gBAEAqyE,EAAA/tE,KAAA4xE,cACApC,EAAAzB,EAAApyE,OACA6zE,GACAztE,IAEAgsE,EAAA9qE,QAAA,SAAA8e,GACA,IAAA8vD,EAAA,WACAF,EAAAG,oBAAAlC,EAAA7tD,EAAAjF,EAAA4hB,EAAA,aACA8wC,GAAA,GACAztE,OAIA4vE,EAAApE,QACAoE,EAAAvC,eAAArtD,EAAA8vD,GAEAA,SAIG,EACHjwE,IAAA,UACA9I,MAAA,SAAA4zB,EAAAqlD,GACA,IAAAC,EAAA,iBAAAD,EAAA,CAAAA,KACA3zE,EAAAsuB,EAAA9G,SAAA8G,EAAAulD,iBAAAvlD,EAAAwlD,mBAAAxlD,EAAAylD,oBAAAzlD,EAAA0lD,kBAAA1lD,EAAA2lD,sBACA,GAAAj0E,EAAA,CACA,IAAAmZ,GAAA,EAQA,OAPAy6D,EAAAM,MAAA,SAAAC,GACA,OAAAn0E,EAAAqG,KAAAioB,EAAA6lD,KACAh7D,GAAA,GACA,KAIAA,EAEA,aAIA+1D,EA7UA,GAgVAkF,EAAA,WACA,SAAAC,EAAA1wD,GACA+qD,EAAA9sE,KAAAyyE,GAEAzyE,KAAA+hB,MACA/hB,KAAA0yE,IAAA,EACA,IAAAnL,EAAAxrD,OAAA42D,UAAAC,WACArL,EAAAxoD,QAAA,YAAAwoD,EAAAxoD,QAAA,iBACA/e,KAAA0yE,IAAA,GA8mBA,OA1mBAzF,EAAAwF,EAAA,EACA7wE,IAAA,MACA9I,MAAA,SAAA6J,GACA,IAAAiX,EAAAle,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,WAEAqH,EAAA/C,KAAA6yE,IAAA9vE,IACA/C,KAAA6yE,IAAAC,OAGA,qBAAA/vE,EAAA,YAAA8pE,EAAA9pE,KAAA,mBAAAA,EAAA6W,IACA7W,EAAA6W,GAAA,YAAAjX,KAGG,CACHf,IAAA,YACA9I,MAAA,SAAAgf,GACA,OAAAA,EAAA4vD,QAAA,sCAAuC,UAEpC,CACH9lE,IAAA,eACA9I,MAAA,SAAAgf,GAsBA,MArBA,aAAA9X,KAAA6yE,IAAAE,YACAj7D,EAAA9X,KAAAgzE,qBAAAl7D,IAEAA,EAAA9X,KAAAizE,UAAAn7D,GACAnf,OAAAukB,KAAAld,KAAA6yE,IAAAK,UAAAv3E,SACAmc,EAAA9X,KAAAmzE,qBAAAr7D,KAEA9X,KAAA6yE,IAAAO,eAAApzE,KAAA6yE,IAAAQ,kBAAA13E,UACAmc,EAAA9X,KAAAszE,yBAAAx7D,IAEA9X,KAAA6yE,IAAAU,aACAz7D,EAAA9X,KAAAwzE,uBAAA17D,IAEAA,EAAA9X,KAAAyzE,yBAAA37D,IACA9X,KAAA6yE,IAAAO,eAAApzE,KAAA6yE,IAAAQ,kBAAA13E,UACAmc,EAAA9X,KAAA0zE,oBAAA57D,IAEA,aAAA9X,KAAA6yE,IAAAE,YACAj7D,EAAA9X,KAAA2zE,sBAAA77D,IAEAA,EAAA9X,KAAA4zE,qBAAA97D,KAGG,CACHlW,IAAA,uBACA9I,MAAA,SAAAgf,GACA,IAAA+7D,EAAA7zE,KAAA6yE,IAAAK,SACAY,EAAA9zE,KAAA6yE,IAAAkB,cAAA,OACAC,EAAAh0E,KAAA6yE,IAAAO,eAAApzE,KAAA6yE,IAAAQ,kBAAA13E,OAAA,QACA,QAAAkgB,KAAAg4D,EACA,GAAAA,EAAAvuE,eAAAuW,GAAA,CACA,IAAA/iB,EAAA+6E,EAAAh4D,GACAo4D,EAAA,aAAAj0E,KAAA6yE,IAAAE,UAAA/yE,KAAAgzE,qBAAAn3D,GAAA7b,KAAAizE,UAAAp3D,GACAq4D,EAAA,aAAAl0E,KAAA6yE,IAAAE,UAAA/yE,KAAAgzE,qBAAAl6E,GAAAkH,KAAAizE,UAAAn6E,GACA,KAAAm7E,GAAA,KAAAC,IACAp8D,IAAA4vD,QAAA,IAAAD,OAAA,IAAAznE,KAAAizE,UAAAgB,GAAA,IAAAj0E,KAAAizE,UAAAiB,GAAA,SAAAJ,GAAAE,EAAA,IAAAh0E,KAAAm0E,gBAAAF,GAAA,IAAAj0E,KAAAm0E,gBAAAD,GAAA,IAAAF,IAIA,OAAAl8D,IAEG,CACHlW,IAAA,kBACA9I,MAAA,SAAAgf,GAIA,OAHA9X,KAAA6yE,IAAAO,eAAApzE,KAAA6yE,IAAAQ,kBAAA13E,UACAmc,EAAA9X,KAAAszE,yBAAAx7D,IAEAA,IAEG,CACHlW,IAAA,uBACA9I,MAAA,SAAAgf,GAIA,OAHAA,IAAA4vD,QAAA,sBAAA19D,GACA,aAAAA,EAAAyR,OAAA,cAEAisD,QAAA,sBAAA19D,GACA,aAAAA,EAAAyR,OAAA,eAGG,CACH7Z,IAAA,wBACA9I,MAAA,SAAAgf,GACA,IAAAyD,EAAA,eAAAvb,KAAA6yE,IAAAE,UACA,OAAAj7D,EAAA4vD,QAAA,UAAAnsD,EAAA,oBAAAmsD,QAAA,UAAAnsD,EAAA,uBAEG,CACH3Z,IAAA,2BACA9I,MAAA,SAAAgf,GACA,OAAAA,EAAA4vD,QAAA,qBAAA19D,EAAAoqE,EAAAC,GACA,IAAAC,EAAAD,EAAA54D,OAAA24D,EAAA,GACA,gBAAAG,KAAAD,IAAA,KAAAA,EACAtqE,EAEAA,EAAA,SAIG,CACHpI,IAAA,sBACA9I,MAAA,SAAAgf,GACA,IAAA08D,EAAA,GACAnB,EAAArzE,KAAA6yE,IAAAQ,kBAOA,OANAnvE,MAAAC,QAAAkvE,MAAA13E,QACA64E,EAAAjxE,KAAAvD,KAAAizE,UAAAI,EAAAh5C,KAAA,MAEAr6B,KAAA6yE,IAAAO,eACAoB,EAAAjxE,KAAA,gCAEAixE,EAAA74E,OAAAmc,EAAA84B,MAAA,WAAAvW,KAAA,IAAAm6C,EAAAn6C,KAAA,UAAAviB,IAEG,CACHlW,IAAA,yBACA9I,MAAA,SAAAgf,GACA,IAAAg8D,EAAA9zE,KAAA6yE,IAAAkB,cAAA,OACAU,EAAAz0E,KAAA6yE,IAAAkB,cAAA,8lBACAzE,EAAA,GAaA,OAZAx3D,EAAA84B,MAAA,IAAA3tC,QAAA,SAAA69D,GACA2T,EAAAnC,MAAA,SAAAmC,GACA,QAAAA,EAAA11D,QAAA+hD,GAAA,CACA,GAAAwO,EAAAvwD,QAAA01D,IAAA,EACA,SAEA38D,IAAA4vD,QAAA,IAAAD,OAAA,IAAAgN,EAAA,SAAAX,GAAA,IAAAW,EAAA,KACAnF,EAAA/rE,KAAAkxE,GAEA,aAGA38D,IAEG,CACHlW,IAAA,2BACA9I,MAAA,SAAAgf,GACA,OAAAA,EAAA4vD,QAAA,uBAEG,CACH9lE,IAAA,uBACA9I,MAAA,SAAAgf,GACA,IAAA22D,EAAAzuE,KAGA00E,EAAA10E,KAAA6yE,IAAA8B,SACA3qE,EAAA,iBAAA0qE,MAAA57E,MACA87E,EAAA,iBAAAF,EAAA,GAAAA,EAAAG,SACAC,EAAA,GAIA,OAHAF,EAAA3xE,QAAA,SAAA8xE,GACAD,GAAA,IAAArG,EAAAwE,UAAA8B,KAEA/qE,GACA,gBACA,QACA,YAAA8N,EAAA,IACA,oBAEA,eADAg9D,EAAA,OAAAA,GAAA90E,KAAAizE,UAbA,0CAcA,KAAAn7D,EAAA,KAAAg9D,EAAA,MACA,cACA,eAAAA,EAAA,KAAAh9D,EAAA,YAAAg9D,EAAA,OAGG,CACHlzE,IAAA,uBACA9I,MAAA,SAAAk8E,GACA,IAAA/F,EAAAjvE,KAEA01B,EAAA,GAcA,OAbAs/C,EAAA/xE,QAAA,SAAAgyE,GACAhG,EAAA4D,IAAAqC,mBAKAD,EAAArkC,MAAA,KAAA3tC,QAAA,SAAAkyE,GACAA,EAAA7G,SAAA,IAAA54C,EAAA3W,QAAAo2D,IACAz/C,EAAAnyB,KAAA4xE,KANAF,EAAA3G,SAAA,IAAA54C,EAAA3W,QAAAk2D,IACAv/C,EAAAnyB,KAAA0xE,KAUA,CACAG,SAAA1/C,EAAAuN,KAAA,SAAAh4B,EAAAnC,GACA,OAAAA,EAAAnN,OAAAsP,EAAAtP,SAEAA,OAAA+5B,EAAA/5B,UAGG,CACHiG,IAAA,YACA9I,MAAA,SAAAA,GACA,OAAA0jB,OAAA9E,WAAA5e,SAEG,CACH8I,IAAA,cACA9I,MAAA,SAAAkmB,GACA,IAAAuwD,EAAAvvE,KAEA,IAAAkE,MAAAC,QAAA6a,IAAA,oBAAArmB,OAAA4L,UAAAC,SAAAC,KAAAua,EAAA,IAGA,OAFAhf,KAAA+C,IAAA,qDACA/C,KAAA6yE,IAAAwC,QAAAr2D,GACA,GAEA,IAAA0W,EAAA,GACAsB,EAAA,EAgBA,OAfAhY,EAAAikB,KAAA,SAAAh4B,EAAAnC,GACA,OAAAmC,EAAAuc,MAAA1e,EAAA0e,QACOvkB,QAAA,SAAAC,GACP,IAAAoyE,EAAA/F,EAAAgG,2BAAAryE,EAAA8zB,GACAxP,EAAA8tD,EAAA9tD,MACA+P,EAAA+9C,EAAA/9C,IACApf,EAAAm9D,EAAAn9D,MAEAA,IACAjV,EAAAskB,QACAtkB,EAAAvH,OAAA47B,EAAA/P,EACAkO,EAAAnyB,KAAAL,GACA8zB,EAAAO,KAGA7B,IAEG,CACH9zB,IAAA,6BACA9I,MAAA,SAAAu/B,EAAArB,GACA,IAAAxP,OAAA,EACA+P,OAAA,EACApf,GAAA,EAcA,OAbAkgB,QAAA,IAAAA,EAAA7Q,OACAA,EAAA/P,SAAA4gB,EAAA7Q,MAAA,IACA+P,EAAA/P,EAAA/P,SAAA4gB,EAAA18B,OAAA,IACAqE,KAAAw1E,UAAAn9C,EAAA7Q,QAAAxnB,KAAAw1E,UAAAn9C,EAAA18B,SAAA47B,EAAAP,EAAA,GAAAO,EAAA/P,EAAA,EACArP,GAAA,GAEAnY,KAAA+C,IAAA,0CAAAuG,KAAAC,UAAA8uB,IACAr4B,KAAA6yE,IAAAwC,QAAAh9C,MAGAr4B,KAAA+C,IAAA,2BAAAuG,KAAAC,UAAA8uB,IACAr4B,KAAA6yE,IAAAwC,QAAAh9C,IAEA,CACA7Q,QACA+P,MACApf,WAGG,CACHvW,IAAA,wBACA9I,MAAA,SAAAu/B,EAAAo9C,EAAAn/D,GACA,IAAAihB,OAAA,EACApf,GAAA,EACAlP,EAAAqN,EAAA3a,OACA25B,EAAAmgD,EAAAxsE,EACAue,EAAA/P,SAAA4gB,EAAA7Q,MAAA,IAAA8N,EAgBA,OAdAiC,GADA/P,IAAAve,IAAAue,GACA/P,SAAA4gB,EAAA18B,OAAA,KACAsN,IACAsuB,EAAAtuB,EACAjJ,KAAA+C,IAAA,mDAAAkG,IAEAue,EAAA,GAAA+P,EAAA/P,EAAA,GAAAA,EAAAve,GAAAsuB,EAAAtuB,GACAkP,GAAA,EACAnY,KAAA+C,IAAA,kBAAAuG,KAAAC,UAAA8uB,IACAr4B,KAAA6yE,IAAAwC,QAAAh9C,IACO,KAAA/hB,EAAA+yD,UAAA7hD,EAAA+P,GAAAmwC,QAAA,aACPvvD,GAAA,EACAnY,KAAA+C,IAAA,mCAAAuG,KAAAC,UAAA8uB,IACAr4B,KAAA6yE,IAAAwC,QAAAh9C,IAEA,CACA7Q,QACA+P,MACApf,WAGG,CACHvW,IAAA,eACA9I,MAAA,SAAA48E,GACA,IAAA5E,EAAA9wE,KAEAgK,EAAA,GACA2rE,EAAA,GACA31E,KAAAsE,SAAA0sE,YAAA4E,WAAAC,UAAA,SAAAnuC,GACAiuC,EAAApyE,KAAA,CACAikB,MAAAxd,EAAArO,OACA47B,KAAAvtB,GAAA09B,EAAAouC,aAAAn6E,OACA+rC,UAEO,SAAAA,GACP,OAAAopC,EAAAiF,eAAAruC,EAAA0B,YACAwsC,WAAAI,cAEAJ,WAAAK,eAEO,WACPP,EAAA,CACA58E,MAAAkR,EACA2rE,cAIG,CACH/zE,IAAA,iBACA9I,MAAA,SAAAmvC,GACA,OAAAqlC,EAAA1nD,QAAAqiB,EAAAjoC,KAAA6yE,IAAArF,QAAA5qE,OAAA,6CAEG,CACHhB,IAAA,sBACA9I,MAAA,SAAA4uC,EAAAlgB,EAAA+P,GACA,IAAA2+C,EAAAl2E,KAAA6yE,IAAAnmD,QAAA1sB,KAAA6yE,IAAAnmD,QAAA,OACAypD,EAAAzuC,EAAA0uC,UAAA5uD,GACA6uD,EAAAF,EAAAC,UAAA7+C,EAAA/P,GACA8uD,EAAApuC,SAAAC,cAAA+tC,GAOA,OANAI,EAAA1rC,aAAA,sBACA5qC,KAAA6yE,IAAAzqC,WACAkuC,EAAA1rC,aAAA,QAAA5qC,KAAA6yE,IAAAzqC,WAEAkuC,EAAAR,YAAAK,EAAAL,YACAK,EAAA/sC,WAAAmtC,aAAAD,EAAAH,GACAE,IAEG,CACHz0E,IAAA,4BACA9I,MAAA,SAAA09E,EAAAhvD,EAAA+P,EAAA25C,EAAAD,GACA,IAAAG,EAAApxE,KAEAw2E,EAAAb,MAAArD,MAAA,SAAA9nE,EAAAvG,GACA,IAAAwyE,EAAAD,EAAAb,MAAA1xE,EAAA,GACA,YAAAwyE,KAAAjvD,QAAA,CACA,IAAA0pD,EAAA1mE,EAAAk9B,MACA,SAEA,IAAArhC,EAAAmhB,EAAAhd,EAAAgd,MACAoT,GAAArD,EAAA/sB,EAAA+sB,IAAA/sB,EAAA+sB,OAAA/sB,EAAAgd,MACAkvD,EAAAF,EAAA19E,MAAAujB,OAAA,EAAA7R,EAAAgd,OACAmvD,EAAAH,EAAA19E,MAAAujB,OAAAue,EAAApwB,EAAAgd,OAaA,GAZAhd,EAAAk9B,KAAA0pC,EAAAwF,oBAAApsE,EAAAk9B,KAAArhC,EAAAu0B,GACA47C,EAAA19E,MAAA49E,EAAAC,EACAH,EAAAb,MAAA1yE,QAAA,SAAAmG,EAAAiyB,GACAA,GAAAp3B,IACAuyE,EAAAb,MAAAt6C,GAAA7T,MAAA,GAAA6T,IAAAp3B,IACAuyE,EAAAb,MAAAt6C,GAAA7T,OAAAoT,GAEA47C,EAAAb,MAAAt6C,GAAA9D,KAAAqD,KAGArD,GAAAqD,EACAq2C,EAAAzmE,EAAAk9B,KAAAmvC,gBAAArsE,EAAAgd,SACA+P,EAAA/sB,EAAA+sB,KAGA,SAFA/P,EAAAhd,EAAA+sB,IAKA,aAGG,CACH31B,IAAA,cACA9I,MAAA,SAAAg+E,EAAAC,EAAA7F,EAAAD,EAAA+F,GACA,IAAArF,EAAA3xE,KAEAi3E,EAAA,IAAAF,EAAA,EAAAA,EAAA,EACA/2E,KAAAk3E,aAAA,SAAAV,GACAA,EAAAb,MAAA1yE,QAAA,SAAAykC,GACAA,SAEA,IADA,IAAAnwB,OAAA,EACA,QAAAA,EAAAu/D,EAAA1hE,KAAAsyB,EAAAouC,eAAA,KAAAv+D,EAAA0/D,IACA,GAAA/F,EAAA35D,EAAA0/D,GAAAvvC,GAAA,CAGA,IAAAqE,EAAAx0B,EAAAsE,MACA,OAAAo7D,EACA,QAAAhzE,EAAA,EAA6BA,EAAAgzE,EAAchzE,IAC3C8nC,GAAAx0B,EAAAtT,GAAAtI,OAGA+rC,EAAAiqC,EAAAiF,oBAAAlvC,EAAAqE,IAAAx0B,EAAA0/D,GAAAt7E,QACAs1E,EAAAvpC,EAAAmvC,iBACAC,EAAAK,UAAA,KAGAH,QAGG,CACHp1E,IAAA,4BACA9I,MAAA,SAAAg+E,EAAAC,EAAA7F,EAAAD,EAAA+F,GACA,IAAAI,EAAAp3E,KAEAi3E,EAAA,IAAAF,EAAA,EAAAA,EAAA,EACA/2E,KAAAk3E,aAAA,SAAAV,GAEA,IADA,IAAAj/D,OAAA,EACA,QAAAA,EAAAu/D,EAAA1hE,KAAAohE,EAAA19E,SAAA,KAAAye,EAAA0/D,IAAA,CACA,IAAAzvD,EAAAjQ,EAAAsE,MACA,OAAAo7D,EACA,QAAAhzE,EAAA,EAA2BA,EAAAgzE,EAAchzE,IACzCujB,GAAAjQ,EAAAtT,GAAAtI,OAGA,IAAA47B,EAAA/P,EAAAjQ,EAAA0/D,GAAAt7E,OACAy7E,EAAAC,0BAAAb,EAAAhvD,EAAA+P,EAAA,SAAAmQ,GACA,OAAAwpC,EAAA35D,EAAA0/D,GAAAvvC,IACW,SAAAA,EAAAyvC,GACXL,EAAAK,YACAlG,EAAAvpC,KAGAsvC,QAGG,CACHp1E,IAAA,qBACA9I,MAAA,SAAAw+E,EAAApG,EAAAD,EAAA+F,GACA,IAAAO,EAAAv3E,KAEAA,KAAAk3E,aAAA,SAAAV,GACA,IAAAf,EAAAe,EAAA19E,MAAA6C,OACA27E,EAAAr0E,QAAA,SAAAo1B,EAAAm/C,GACA,IAAAC,EAAAF,EAAAG,sBAAAr/C,EAAAo9C,EAAAe,EAAA19E,OACA0uB,EAAAiwD,EAAAjwD,MACA+P,EAAAkgD,EAAAlgD,IACApf,EAAAs/D,EAAAt/D,MAEAA,GACAo/D,EAAAF,0BAAAb,EAAAhvD,EAAA+P,EAAA,SAAAmQ,GACA,OAAAwpC,EAAAxpC,EAAArP,EAAAm+C,EAAA19E,MAAAuwE,UAAA7hD,EAAA+P,GAAAigD,IACa,SAAA9vC,GACbupC,EAAAvpC,EAAArP,OAIA2+C,QAGG,CACHp1E,IAAA,gBACA9I,MAAA,SAAA4uC,GAGA,IAFA,IAAAg5B,EAAAh5B,EAAA0B,WACAuuC,EAAAzvC,SAAA0vC,yBACAlwC,EAAAqC,YACA4tC,EAAAhvC,YAAAjB,EAAAyC,YAAAzC,EAAAqC,aAEA22B,EAAA6V,aAAAoB,EAAAjwC,GACA1nC,KAAA0yE,GAGA1yE,KAAA63E,kBAAAnX,GAFAA,EAAAoX,cAKG,CACHl2E,IAAA,oBACA9I,MAAA,SAAA4uC,GACA,GAAAA,EAAA,CAGA,OAAAA,EAAAqwC,SACA,KAAArwC,EAAAswC,aAAA,IAAAtwC,EAAAswC,YAAAD,UACArwC,EAAAuwC,WAAAvwC,EAAAswC,YAAAC,UACAvwC,EAAA0B,WAAAe,YAAAzC,EAAAswC,kBAGAh4E,KAAA63E,kBAAAnwC,EAAAqC,YAEA/pC,KAAA63E,kBAAAnwC,EAAAswC,gBAEG,CACHp2E,IAAA,aACA9I,MAAA,SAAAo/E,EAAArF,GACA,IAAAsF,EAAAn4E,KAEAA,KAAA6yE,MACA7yE,KAAA+C,IAAA,8BAAAm1E,EAAA,KACA,IAAAE,EAAA,EACAh6E,EAAA,cAKA4B,KAAA6yE,IAAAwF,iBACAj6E,EAAA,6BAEA4B,KAAA5B,GAAA85E,EAAAl4E,KAAA6yE,IAAAkE,aAAA,SAAAx/D,EAAAmwB,GACA,OAAAywC,EAAAtF,IAAAn0C,OAAAgJ,EAAAnwB,EAAA6gE,IARA,SAAA1rD,GACA0rD,IACAD,EAAAtF,IAAA/1D,KAAA4P,IAOO,WACP,IAAA0rD,GACAD,EAAAtF,IAAAwC,QAAA6C,GAEAC,EAAAtF,IAAA9wE,KAAAq2E,OAGG,CACHx2E,IAAA,OACA9I,MAAA,SAAAk8E,EAAAnC,GACA,IAAAyF,EAAAt4E,KAEAA,KAAA6yE,MACA,IAAAuF,EAAA,EACAh6E,EAAA,cAEAm6E,EAAAv4E,KAAAw4E,qBAAA,iBAAAxD,EAAA,CAAAA,MACAyD,EAAAF,EAAAnD,SACAsD,EAAAH,EAAA58E,OACAm4E,EAAA9zE,KAAA6yE,IAAAkB,cAAA,OAuBA/zE,KAAA6yE,IAAAwF,iBACAj6E,EAAA,6BAEA,IAAAs6E,EACA14E,KAAA6yE,IAAA9wE,KAAAq2E,GA1BA,SAAA/2C,EAAA4zC,GACA,IAAA6B,EAAA,IAAArP,OAAA6Q,EAAAK,aAAA1D,GAAA,KAAAnB,GACAluD,EAAA,EACA0yD,EAAAv1E,IAAA,8BAAA+zE,EAAA,KACAwB,EAAAl6E,GAAA04E,EAAA,WAAA8B,EAAAlxC,GACA,OAAA4wC,EAAAzF,IAAAn0C,OAAAgJ,EAAAutC,EAAAmD,EAAAxyD,IACS,SAAA8G,GACT9G,IACAwyD,IACAE,EAAAzF,IAAA/1D,KAAA4P,IACS,WACT,IAAA9G,GACA0yD,EAAAzF,IAAAwC,QAAAJ,GAEAwD,EAAAC,EAAA,KAAAzD,EACAqD,EAAAzF,IAAA9wE,KAAAq2E,GAEA/2C,EAAAo3C,IAAA15D,QAAAk2D,GAAA,MAWA5zC,CAAAo3C,EAAA,MAGG,CACH72E,IAAA,aACA9I,MAAA,SAAA+/E,EAAAhG,GACA,IAAAiG,EAAA94E,KAEAA,KAAA6yE,MACA,IAAAuF,EAAA,EACAd,EAAAt3E,KAAA+4E,YAAAF,GACAvB,KAAA37E,QACAqE,KAAA+C,IAAA,+CAAAuG,KAAAC,UAAA+tE,IACAt3E,KAAAg5E,mBAAA1B,EAAA,SAAA5vC,EAAArP,EAAA9gB,EAAAigE,GACA,OAAAsB,EAAAjG,IAAAn0C,OAAAgJ,EAAArP,EAAA9gB,EAAAigE,IACS,SAAA9qD,EAAA2L,GACT+/C,IACAU,EAAAjG,IAAA/1D,KAAA4P,EAAA2L,IACS,WACTygD,EAAAjG,IAAA9wE,KAAAq2E,MAGAp4E,KAAA6yE,IAAA9wE,KAAAq2E,KAGG,CACHx2E,IAAA,SACA9I,MAAA,SAAA+5E,GACA,IAAAoG,EAAAj5E,KAEAA,KAAA6yE,MACA,IAAAN,EAAAvyE,KAAA6yE,IAAAnmD,QAAA1sB,KAAA6yE,IAAAnmD,QAAA,IACA6lD,GAAA,gBACAvyE,KAAA6yE,IAAAzqC,YACAmqC,GAAA,IAAAvyE,KAAA6yE,IAAAzqC,WAEApoC,KAAA+C,IAAA,qBAAAwvE,EAAA,KACAvyE,KAAAsE,SAAA0sE,YAAA4E,WAAAsD,aAAA,SAAAxxC,GACAuxC,EAAAE,cAAAzxC,IACO,SAAAA,GACP,IAAA0xC,EAAA9L,EAAA1nD,QAAA8hB,EAAA6qC,GACAwD,EAAAkD,EAAAlD,eAAAruC,GACA,OAAA0xC,GAAArD,EACAH,WAAAI,cAEAJ,WAAAK,eAEOj2E,KAAA6yE,IAAA9wE,QAEJ,CACHH,IAAA,MACA+mB,IAAA,SAAA3e,GACAhK,KAAAq5E,KAAAjM,EAAA,GAA6B,CAC7B1gD,QAAA,GACA0b,UAAA,GACAolC,QAAA,GACAD,SAAA,EACAE,eAAA,IACAyH,oBAAA,EACA3B,YAAA,EACAL,SAAA,GACAyB,SAAA,YACA0D,gBAAA,EACAtE,eAAA,EACAX,eAAA,EACA2D,aAAA,EACA1D,kBAAA,GACAN,UAAA,WACAj2D,KAAA,aACAu4D,QAAA,aACA32C,OAAA,WACA,UAEA38B,KAAA,aACA+wE,OAAA,EACA/vE,IAAAgZ,OAAAjZ,SACOkH,IAEP0e,IAAA,WACA,OAAA1oB,KAAAq5E,OAEG,CACHz3E,IAAA,WACA8mB,IAAA,WACA,WAAA4kD,EAAAttE,KAAA+hB,IAAA/hB,KAAA6yE,IAAAtF,QAAAvtE,KAAA6yE,IAAArF,QAAAxtE,KAAA6yE,IAAApF,oBAGAgF,EAtnBA,GAgpBA,OAvBA,SAAA1wD,GACA,IAAA0sD,EAAAzuE,KAEA+sE,EAAA,IAAAyF,EAAAzwD,GAiBA,OAhBA/hB,KAAA1B,KAAA,SAAA02E,EAAAnC,GAEA,OADA9F,EAAAzuE,KAAA02E,EAAAnC,GACApE,GAEAzuE,KAAAs5E,WAAA,SAAAtE,EAAAnC,GAEA,OADA9F,EAAAuM,WAAAtE,EAAAnC,GACApE,GAEAzuE,KAAAu5E,WAAA,SAAAvE,EAAAnC,GAEA,OADA9F,EAAAwM,WAAAvE,EAAAnC,GACApE,GAEAzuE,KAAAw5E,OAAA,SAAA3G,GAEA,OADA9F,EAAAyM,OAAA3G,GACApE,GAEAzuE,MA9hC6DkjE","file":"8.894ce693cbb5ec6224f4.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLogs = getLogs;\nexports.getAudits = getAudits;\nexports.getConfig = getConfig;\nexports.getLdapGroups = getLdapGroups;\nexports.getLdapGroupsCount = getLdapGroupsCount;\nexports.getEnvironmentConfig = getEnvironmentConfig;\nexports.getComplianceReports = getComplianceReports;\nexports.getClusterInfo = getClusterInfo;\nexports.getUserAccessTokens = getUserAccessTokens;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getLogs(state) {\n  return state.entities.admin.logs;\n}\n\nfunction getAudits(state) {\n  return state.entities.admin.audits;\n}\n\nfunction getConfig(state) {\n  return state.entities.admin.config;\n}\n\nfunction getLdapGroups(state) {\n  return state.entities.admin.ldapGroups;\n}\n\nfunction getLdapGroupsCount(state) {\n  return state.entities.admin.ldapGroupsCount;\n}\n\nfunction getEnvironmentConfig(state) {\n  return state.entities.admin.environmentConfig;\n}\n\nfunction getComplianceReports(state) {\n  return state.entities.admin.complianceReports;\n}\n\nfunction getClusterInfo(state) {\n  return state.entities.admin.clusterInfo;\n}\n\nfunction getUserAccessTokens(state) {\n  return state.entities.admin.userAccessTokens;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBotAccounts = getBotAccounts;\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nfunction getBotAccounts(state) {\n  return state.entities.bots.accounts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBot = createBot;\nexports.patchBot = patchBot;\nexports.loadBot = loadBot;\nexports.loadBots = loadBots;\nexports.disableBot = disableBot;\nexports.enableBot = enableBot;\nexports.assignBot = assignBot;\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nvar BOTS_PER_PAGE_DEFAULT = 20;\n\nfunction createBot(bot) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [bot]\n  });\n}\n\nfunction patchBot(botUserId, botPatch) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, botPatch]\n  });\n}\n\nfunction loadBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction loadBots() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BOTS_PER_PAGE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getBotsIncludeDeleted,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNTS,\n    params: [page, perPage]\n  });\n}\n\nfunction disableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.disableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction enableBot(botUserId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.enableBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId]\n  });\n}\n\nfunction assignBot(botUserId, newOwnerId) {\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.assignBot,\n    onSuccess: _action_types.BotTypes.RECEIVED_BOT_ACCOUNT,\n    params: [botUserId, newOwnerId]\n  });\n}","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScheme = getScheme;\nexports.getSchemes = getSchemes;\nexports.createScheme = createScheme;\nexports.deleteScheme = deleteScheme;\nexports.patchScheme = patchScheme;\nexports.getSchemeTeams = getSchemeTeams;\nexports.getSchemeChannels = getSchemeChannels;\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _client = require(\"../client\");\n\nvar _action_types = require(\"../action_types\");\n\nvar _constants = require(\"../constants\");\n\nvar _reduxBatchedActions = require(\"redux-batched-actions\");\n\nvar _helpers = require(\"./helpers\");\n\nvar _errors = require(\"./errors\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction getScheme(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getScheme,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME, _action_types.SchemeTypes.GET_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_FAILURE,\n    params: [schemeId]\n  });\n}\n\nfunction getSchemes(scope\n/*: SchemeScope*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemes,\n    onRequest: _action_types.SchemeTypes.GET_SCHEMES_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEMES, _action_types.SchemeTypes.GET_SCHEMES_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEMES_FAILURE,\n    params: [scope, page, perPage]\n  });\n}\n\nfunction createScheme(scheme\n/*: Scheme*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createScheme,\n    onRequest: _action_types.SchemeTypes.CREATE_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.CREATED_SCHEME, _action_types.SchemeTypes.CREATE_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.CREATE_SCHEME_FAILURE,\n    params: [scheme]\n  });\n}\n\nfunction deleteScheme(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: _action_types.SchemeTypes.DELETE_SCHEME_REQUEST,\n                  data: null\n                }, getState);\n                data = null;\n                _context.prev = 2;\n                _context.next = 5;\n                return _client.Client4.deleteScheme(schemeId);\n\n              case 5:\n                data = _context.sent;\n                _context.next = 13;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                (0, _helpers.forceLogoutIfNecessary)(_context.t0, dispatch, getState);\n                dispatch((0, _reduxBatchedActions.batchActions)([{\n                  type: _action_types.SchemeTypes.DELETE_SCHEME_FAILURE,\n                  error: _context.t0\n                }, (0, _errors.logError)(_context.t0)]), getState);\n                return _context.abrupt(\"return\", {\n                  error: _context.t0\n                });\n\n              case 13:\n                dispatch({\n                  type: _action_types.SchemeTypes.DELETED_SCHEME,\n                  data: {\n                    schemeId: schemeId\n                  }\n                }, getState);\n                dispatch({\n                  type: _action_types.SchemeTypes.DELETE_SCHEME_SUCCESS,\n                  data: null\n                }, getState);\n                return _context.abrupt(\"return\", {\n                  data: data\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\nfunction patchScheme(schemeId\n/*: string*/\n, scheme\n/*: SchemePatch*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.patchScheme,\n    onRequest: _action_types.SchemeTypes.PATCH_SCHEME_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.PATCHED_SCHEME, _action_types.SchemeTypes.PATCH_SCHEME_SUCCESS],\n    onFailure: _action_types.SchemeTypes.PATCH_SCHEME_FAILURE,\n    params: [schemeId, scheme]\n  });\n}\n\nfunction getSchemeTeams(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemeTeams,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_TEAMS_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME_TEAMS, _action_types.SchemeTypes.GET_SCHEME_TEAMS_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_TEAMS_FAILURE,\n    params: [schemeId, page, perPage]\n  });\n}\n\nfunction getSchemeChannels(schemeId\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.PAGE_SIZE_DEFAULT;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getSchemeChannels,\n    onRequest: _action_types.SchemeTypes.GET_SCHEME_CHANNELS_REQUEST,\n    onSuccess: [_action_types.SchemeTypes.RECEIVED_SCHEME_CHANNELS, _action_types.SchemeTypes.GET_SCHEME_CHANNELS_SUCCESS],\n    onFailure: _action_types.SchemeTypes.GET_SCHEME_CHANNELS_FAILURE,\n    params: [schemeId, page, perPage]\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSchemes = getSchemes;\nexports.getScheme = getScheme;\nexports.makeGetSchemeChannels = makeGetSchemeChannels;\nexports.makeGetSchemeTeams = makeGetSchemeTeams;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es7.object.entries\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _reselect = require(\"reselect\");\n\nvar _channels = require(\"./channels\");\n\nvar _teams = require(\"./teams\");\n\nvar _schemes = require(\"../../constants/schemes\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction getSchemes(state\n/*: GlobalState*/\n)\n/*: { [string]: Scheme }*/\n{\n  return state.entities.schemes.schemes;\n}\n\nfunction getScheme(state\n/*: GlobalState*/\n, id\n/*: string*/\n)\n/*: Scheme*/\n{\n  var schemes = getSchemes(state);\n  return schemes[id];\n}\n\nfunction makeGetSchemeChannels() {\n  return ((0, _reselect.createSelector)(_channels.getAllChannels, function (state, props\n  /*: {schemeId: string}*/\n  ) {\n    return getScheme(state, props.schemeId);\n  }, function (allChannels, scheme) {\n    if (!scheme) {\n      return [];\n    }\n\n    if (scheme.scope === _schemes.ScopeTypes.TEAM) {\n      var msg = \"Not implemented: scheme '\".concat(scheme.id, \"' is team-scope but 'getSchemeChannels' only accepts channel-scoped schemes.\");\n      console.log(msg); // eslint-disable-line no-console\n\n      return [];\n    }\n\n    var schemeChannels\n    /*: Array<Channel>*/\n    = []; // $FlowFixMe\n\n    Object.entries(allChannels).forEach(function (item\n    /*: [string, Channel]*/\n    ) {\n      var _item = _slicedToArray(item, 2),\n          channel\n      /*: Channel*/\n      = _item[1];\n\n      if (channel.scheme_id === scheme.id) {\n        schemeChannels.push(channel);\n      }\n    });\n    return schemeChannels;\n  })\n  /*: (GlobalState, {schemeId: string}) => Array<Channel>*/\n  );\n}\n\nfunction makeGetSchemeTeams() {\n  return ((0, _reselect.createSelector)(_teams.getTeams, function (state, props\n  /*: {schemeId: string}*/\n  ) {\n    return getScheme(state, props.schemeId);\n  }, function (allTeams, scheme) {\n    if (!scheme) {\n      return [];\n    }\n\n    if (scheme.scope === _schemes.ScopeTypes.CHANNEL) {\n      var msg = \"Error: scheme '\".concat(scheme.id, \"' is channel-scoped but 'getSchemeChannels' only accepts team-scoped schemes.\");\n      console.log(msg); // eslint-disable-line no-console\n\n      return [];\n    }\n\n    var schemeTeams\n    /*: Array<Team>*/\n    = []; // $FlowFixMe\n\n    Object.entries(allTeams).forEach(function (item\n    /*: [string, Team]*/\n    ) {\n      var _item2 = _slicedToArray(item, 2),\n          team\n      /*: Team*/\n      = _item2[1];\n\n      if (team.scheme_id === scheme.id) {\n        schemeTeams.push(team);\n      }\n    });\n    return schemeTeams;\n  })\n  /*: (GlobalState, {schemeId: string}) => Array<Team>*/\n  );\n}","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createJob = createJob;\nexports.getJob = getJob;\nexports.getJobs = getJobs;\nexports.getJobsByType = getJobsByType;\nexports.cancelJob = cancelJob;\n\nvar _action_types = require(\"../action_types\");\n\nvar _client = require(\"../client\");\n\nvar _constants = require(\"../constants\");\n\nvar _helpers = require(\"./helpers\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction createJob(job\n/*: Job*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.createJob,\n    onRequest: _action_types.JobTypes.CREATE_JOB_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.CREATE_JOB_SUCCESS],\n    onFailure: _action_types.JobTypes.CREATE_JOB_FAILURE,\n    params: [job]\n  });\n}\n\nfunction getJob(id\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJob,\n    onRequest: _action_types.JobTypes.GET_JOB_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOB, _action_types.JobTypes.GET_JOB_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOB_FAILURE,\n    params: [id]\n  });\n}\n\nfunction getJobs()\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants.General.JOBS_CHUNK_SIZE;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJobs,\n    onRequest: _action_types.JobTypes.GET_JOBS_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.GET_JOBS_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOBS_FAILURE,\n    params: [page, perPage]\n  });\n}\n\nfunction getJobsByType(type\n/*: JobType*/\n)\n/*: ActionFunc*/\n{\n  var page\n  /*: number*/\n  = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var perPage\n  /*: number*/\n  = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants.General.JOBS_CHUNK_SIZE;\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.getJobsByType,\n    onRequest: _action_types.JobTypes.GET_JOBS_REQUEST,\n    onSuccess: [_action_types.JobTypes.RECEIVED_JOBS, _action_types.JobTypes.RECEIVED_JOBS_BY_TYPE, _action_types.JobTypes.GET_JOBS_SUCCESS],\n    onFailure: _action_types.JobTypes.GET_JOBS_FAILURE,\n    params: [type, page, perPage]\n  });\n}\n\nfunction cancelJob(job\n/*: string*/\n)\n/*: ActionFunc*/\n{\n  return (0, _helpers.bindClientFunc)({\n    clientFunc: _client.Client4.cancelJob,\n    onRequest: _action_types.JobTypes.CANCEL_JOB_REQUEST,\n    onSuccess: _action_types.JobTypes.CANCEL_JOB_SUCCESS,\n    onFailure: _action_types.JobTypes.CANCEL_JOB_FAILURE,\n    params: [job]\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAllJobs = getAllJobs;\nexports.getJobsByType = getJobsByType;\nexports.makeGetJobsByType = makeGetJobsByType;\n\nvar _reselect = require(\"reselect\");\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nfunction getAllJobs(state\n/*: GlobalState*/\n)\n/*: IDMappedObjects<Job>*/\n{\n  return state.entities.jobs.jobs;\n}\n\nfunction getJobsByType(state\n/*: GlobalState*/\n)\n/*: {[JobType]: Array<Job>}*/\n{\n  return state.entities.jobs.jobsByTypeList;\n}\n\nfunction makeGetJobsByType(type\n/*: JobType*/\n)\n/*: (state: GlobalState) => Array<Job>*/\n{\n  return (0, _reselect.createSelector)(getJobsByType, function (jobsByType) {\n    return jobsByType[type] || [];\n  });\n}","/*\r\n FlexSearch v0.6.22\r\n Copyright 2019 Nextapps GmbH\r\n Author: Thomas Wilkerling\r\n Released under the Apache 2.0 Licence\r\n https://github.com/nextapps-de/flexsearch\r\n*/\r\n'use strict';function ma(n){var q=0;return function(){return q<n.length?{done:!1,value:n[q++]}:{done:!0}}}var na=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(n,q,p){n!=Array.prototype&&n!=Object.prototype&&(n[q]=p.value)},Z=\"undefined\"!=typeof window&&window===this?this:\"undefined\"!=typeof global&&null!=global?global:this;function pa(){pa=function(){};Z.Symbol||(Z.Symbol=qa)}function ra(n,q){this.b=n;na(this,\"description\",{configurable:!0,writable:!0,value:q})}\r\nra.prototype.toString=function(){return this.b};var qa=function(){function n(p){if(this instanceof n)throw new TypeError(\"Symbol is not a constructor\");return new ra(\"jscomp_symbol_\"+(p||\"\")+\"_\"+q++,p)}var q=0;return n}();function sa(){pa();var n=Z.Symbol.iterator;n||(n=Z.Symbol.iterator=Z.Symbol(\"Symbol.iterator\"));\"function\"!=typeof Array.prototype[n]&&na(Array.prototype,n,{configurable:!0,writable:!0,value:function(){return ta(ma(this))}});sa=function(){}}\r\nfunction ta(n){sa();n={next:n};n[Z.Symbol.iterator]=function(){return this};return n}function za(n,q){sa();n instanceof String&&(n+=\"\");var p=0,D={next:function(){if(p<n.length){var I=p++;return{value:q(I,n[I]),done:!1}}D.next=function(){return{done:!0,value:void 0}};return D.next()}};D[Symbol.iterator]=function(){return D};return D}\r\nfunction Aa(n,q){if(q){var p=Z;n=n.split(\".\");for(var D=0;D<n.length-1;D++){var I=n[D];I in p||(p[I]={});p=p[I]}n=n[n.length-1];D=p[n];q=q(D);q!=D&&null!=q&&na(p,n,{configurable:!0,writable:!0,value:q})}}Aa(\"Array.prototype.keys\",function(n){return n?n:function(){return za(this,function(q){return q})}});function Ba(n){var q=\"undefined\"!=typeof Symbol&&Symbol.iterator&&n[Symbol.iterator];return q?q.call(n):{next:ma(n)}}\r\nAa(\"Promise\",function(n){function q(m){this.h=0;this.o=void 0;this.b=[];var v=this.j();try{m(v.resolve,v.reject)}catch(l){v.reject(l)}}function p(){this.b=null}function D(m){return m instanceof q?m:new q(function(v){v(m)})}if(n)return n;p.prototype.h=function(m){if(null==this.b){this.b=[];var v=this;this.j(function(){v.o()})}this.b.push(m)};var I=Z.setTimeout;p.prototype.j=function(m){I(m,0)};p.prototype.o=function(){for(;this.b&&this.b.length;){var m=this.b;this.b=[];for(var v=0;v<m.length;++v){var l=\r\nm[v];m[v]=null;try{l()}catch(E){this.l(E)}}}this.b=null};p.prototype.l=function(m){this.j(function(){throw m;})};q.prototype.j=function(){function m(E){return function(H){l||(l=!0,E.call(v,H))}}var v=this,l=!1;return{resolve:m(this.L),reject:m(this.l)}};q.prototype.L=function(m){if(m===this)this.l(new TypeError(\"A Promise cannot resolve to itself\"));else if(m instanceof q)this.M(m);else{a:switch(typeof m){case \"object\":var v=null!=m;break a;case \"function\":v=!0;break a;default:v=!1}v?this.K(m):this.w(m)}};\r\nq.prototype.K=function(m){var v=void 0;try{v=m.then}catch(l){this.l(l);return}\"function\"==typeof v?this.N(v,m):this.w(m)};q.prototype.l=function(m){this.B(2,m)};q.prototype.w=function(m){this.B(1,m)};q.prototype.B=function(m,v){if(0!=this.h)throw Error(\"Cannot settle(\"+m+\", \"+v+\"): Promise already settled in state\"+this.h);this.h=m;this.o=v;this.I()};q.prototype.I=function(){if(null!=this.b){for(var m=0;m<this.b.length;++m)ba.h(this.b[m]);this.b=null}};var ba=new p;q.prototype.M=function(m){var v=\r\nthis.j();m.F(v.resolve,v.reject)};q.prototype.N=function(m,v){var l=this.j();try{m.call(v,l.resolve,l.reject)}catch(E){l.reject(E)}};q.prototype.then=function(m,v){function l(K,V){return\"function\"==typeof K?function(ja){try{E(K(ja))}catch(ka){H(ka)}}:V}var E,H,ca=new q(function(K,V){E=K;H=V});this.F(l(m,E),l(v,H));return ca};q.prototype.catch=function(m){return this.then(void 0,m)};q.prototype.F=function(m,v){function l(){switch(E.h){case 1:m(E.o);break;case 2:v(E.o);break;default:throw Error(\"Unexpected state: \"+\r\nE.h);}}var E=this;null==this.b?ba.h(l):this.b.push(l)};q.resolve=D;q.reject=function(m){return new q(function(v,l){l(m)})};q.race=function(m){return new q(function(v,l){for(var E=Ba(m),H=E.next();!H.done;H=E.next())D(H.value).F(v,l)})};q.all=function(m){var v=Ba(m),l=v.next();return l.done?D([]):new q(function(E,H){function ca(ja){return function(ka){K[ja]=ka;V--;0==V&&E(K)}}var K=[],V=0;do K.push(void 0),V++,D(l.value).F(ca(K.length-1),H),l=v.next();while(!l.done)})};return q});\r\n(function(n,q,p){var D;(D=p.define)&&D.amd?D([],function(){return q}):(D=p.modules)?D[n.toLowerCase()]=q:\"object\"===typeof exports?module.exports=q:p[n]=q})(\"FlexSearch\",function Ca(n){function p(a,b){var c=b?b.id:a&&a.id;this.id=c||0===c?c:Da++;this.init(a,b);v(this,\"index\",function(){return this.a?Object.keys(this.a.index[this.a.keys[0]].f):Object.keys(this.f)});v(this,\"length\",function(){return this.index.length})}function D(a,b,c,d){this.D!==this.i&&(this.A=this.A.concat(c),this.D++,d&&this.A.length>=\r\nd&&(this.D=this.i),this.D===this.i&&(this.cache&&this.v.set(b,this.A),this.H&&this.H(this.A)));return this}function I(a){var b=G(),c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];b[c]=N(d)?d.slice(0):U(d)?I(d):d}return b}function ba(a,b){for(var c=a.length,d=da(b),e=[],f=0,g=0;f<c;f++){var h=a[f];if(d&&b(h)||!d&&!b[h])e[g++]=h}return e}function m(a,b,c,d,e,f,g,h,k,t){c=ua(c,g?0:e,h,f,b,k,t);if(h){h=c.page;var y=c.next;c=c.result}if(g)b=this.where(g,null,e,c);else{b=c;c=this.m;e=b.length;f=Array(e);\r\nfor(g=0;g<e;g++)f[g]=c[b[g]];b=f}c=b;d&&(da(d)||(W=d.split(\":\"),1<W.length?d=ka:(W=W[0],d=ja)),c.sort(d));c=fa(h,y,c);this.cache&&this.v.set(a,c);return c}function v(a,b,c){Object.defineProperty(a,b,{get:c})}function l(a){return new RegExp(a,\"g\")}function E(a,b){for(var c=0;c<b.length;c+=2)a=a.replace(b[c],b[c+1]);return a}function H(a,b,c,d,e,f,g,h){if(b[c])return b[c];e=e?(h-(g||h/1.5))*f+(g||h/1.5)*e:f;b[c]=e;e>=g&&(a=a[h-(e+.5>>0)],a=a[c]||(a[c]=[]),a[a.length]=d);return e}function ca(a,b){if(a)for(var c=\r\nObject.keys(a),d=0,e=c.length;d<e;d++){var f=c[d],g=a[f];if(g)for(var h=0,k=g.length;h<k;h++)if(g[h]===b){1===k?delete a[f]:g.splice(h,1);break}else U(g[h])&&ca(g[h],b)}}function K(a){for(var b=\"\",c=\"\",d=\"\",e=0;e<a.length;e++){var f=a[e];if(f!==c)if(e&&\"h\"===f){if(d=\"a\"===d||\"e\"===d||\"i\"===d||\"o\"===d||\"u\"===d||\"y\"===d,(\"a\"===c||\"e\"===c||\"i\"===c||\"o\"===c||\"u\"===c||\"y\"===c)&&d||\" \"===c)b+=f}else b+=f;d=e===a.length-1?\"\":a[e+1];c=f}return b}function V(a,b){a=a.length-b.length;return 0>a?1:a?-1:0}function ja(a,\r\nb){a=a[W];b=b[W];return a<b?-1:a>b?1:0}function ka(a,b){for(var c=W.length,d=0;d<c;d++)a=a[W[d]],b=b[W[d]];return a<b?-1:a>b?1:0}function fa(a,b,c){return a?{page:a,next:b?\"\"+b:null,result:c}:c}function ua(a,b,c,d,e,f,g){var h=[];if(!0===c){c=\"0\";var k=\"\"}else k=c&&c.split(\":\");var t=a.length;if(1<t){var y=G(),w=[],A,r=0,u,F=!0,z=0,C;if(k)if(2===k.length){var x=k;k=!1}else k=C=parseInt(k[0],10);if(g){for(A=G();r<t;r++)if(\"not\"===e[r]){var B=a[r];var J=B.length;for(u=0;u<J;u++)A[\"@\"+B[u]]=1}else var P=\r\nr+1;if(Q(P))return fa(c,R,h);r=0}else var Y=X(e)&&e;for(var ha;r<t;r++){var L=r===(P||t)-1;if(!Y||!r)if((u=Y||e&&e[r])&&\"and\"!==u)if(\"or\"===u)ha=!1;else continue;else ha=f=!0;B=a[r];if(J=B.length){if(F)if(S){var M=S.length;for(u=0;u<M;u++){F=S[u];var aa=\"@\"+F;g&&A[aa]||(y[aa]=1,f||(h[z++]=F))}var S=null;F=!1}else{S=B;continue}aa=!1;for(u=0;u<J;u++){M=B[u];var T=\"@\"+M,ea=f?y[T]||0:r;if(!(!ea&&!d||g&&A[T]||!f&&y[T]))if(ea===r){if(L){if(!C||--C<z)if(h[z++]=M,b&&z===b)return fa(c,z+(k||0),h)}else y[T]=\r\nr+1;aa=!0}else d&&(T=w[ea]||(w[ea]=[]),T[T.length]=M)}if(ha&&!aa&&!d)break}else if(ha&&!d)return fa(c,R,B)}if(S)if(r=S.length,g)for(u=k?parseInt(k,10):0;u<r;u++)a=S[u],A[\"@\"+a]||(h[z++]=a);else h=S;if(d)for(z=h.length,x?(r=parseInt(x[0],10)+1,u=parseInt(x[1],10)+1):(r=w.length,u=0);r--;)if(M=w[r]){for(J=M.length;u<J;u++)if(d=M[u],!g||!A[\"@\"+d])if(h[z++]=d,b&&z===b)return fa(c,r+\":\"+u,h);u=0}}else!t||e&&\"not\"===e[0]||(h=a[0],k&&(k=parseInt(k[0],10)));if(b){g=h.length;k&&k>g&&(k=0);k=k||0;var R=k+b;\r\nR<g?h=h.slice(k,R):(R=0,k&&(h=h.slice(k)))}return fa(c,R,h)}function X(a){return\"string\"===typeof a}function N(a){return a.constructor===Array}function da(a){return\"function\"===typeof a}function U(a){return\"object\"===typeof a}function Q(a){return\"undefined\"===typeof a}function va(a){for(var b=Array(a),c=0;c<a;c++)b[c]=G();return b}function G(){return Object.create(null)}function Ea(){var a,b;self.onmessage=function(c){if(c=c.data)if(c.search){var d=b.search(c.content,c.threshold?{limit:c.limit,threshold:c.threshold,\r\nwhere:c.where}:c.limit);self.postMessage({id:a,content:c.content,limit:c.limit,result:d})}else c.add?b.add(c.id,c.content):c.update?b.update(c.id,c.content):c.remove?b.remove(c.id):c.clear?b.clear():c.info?(c=b.info(),c.worker=a,console.log(c)):c.register&&(a=c.id,c.options.cache=!1,c.options.async=!1,c.options.worker=!1,b=(new Function(c.register.substring(c.register.indexOf(\"{\")+1,c.register.lastIndexOf(\"}\"))))(),b=new b(c.options))}}function Fa(a,b,c,d){a=n(\"flexsearch\",\"id\"+a,Ea,function(f){(f=\r\nf.data)&&f.result&&d(f.id,f.content,f.result,f.limit,f.where,f.cursor,f.suggest)},b);var e=Ca.toString();c.id=b;a.postMessage({register:e,options:c,id:b});return a}var O={encode:\"icase\",g:\"forward\",split:/\\W+/,cache:!1,async:!1,i:!1,G:!1,a:!1,c:9,threshold:0,depth:0},wa={memory:{encode:\"extra\",g:\"strict\",threshold:0,c:1},speed:{encode:\"icase\",g:\"strict\",threshold:1,c:3,depth:2},match:{encode:\"extra\",g:\"full\",threshold:1,c:3},score:{encode:\"extra\",g:\"strict\",threshold:1,c:9,depth:4},balance:{encode:\"balance\",\r\ng:\"strict\",threshold:0,c:3,depth:3},fast:{encode:\"icase\",g:\"strict\",threshold:8,c:9,depth:1}},la=[],Da=0,xa={},ya={};p.create=function(a,b){return new p(a,b)};p.registerMatcher=function(a){for(var b in a)a.hasOwnProperty(b)&&la.push(l(b),a[b]);return this};p.registerEncoder=function(a,b){ia[a]=b.bind(ia);return this};p.registerLanguage=function(a,b){xa[a]=b.filter;ya[a]=b.stemmer;return this};p.encode=function(a,b){return ia[a](b)};p.prototype.init=function(a,b){this.h=[];if(b){var c=b.preset;a=b}else a||\r\n(a=O),c=a.preset;b={};X(a)?((b=wa[a])||console.warn(\"Preset not found: \"+a),a={}):c&&((b=wa[c])||console.warn(\"Preset not found: \"+c));if(c=a.worker)if(\"undefined\"===typeof Worker)a.worker=!1,this.b=null;else{var d=parseInt(c,10)||4;this.w=-1;this.D=0;this.A=[];this.H=null;this.b=Array(d);for(var e=0;e<d;e++)this.b[e]=Fa(this.id,e,a,D.bind(this))}this.g=a.tokenize||b.g||this.g||O.g;this.split=a.split||this.split||O.split;this.G=a.rtl||this.G||O.G;this.async=\"undefined\"===typeof Promise||Q(c=a.async)?\r\nthis.async||O.async:c;this.i=Q(c=a.worker)?this.i||O.i:c;this.threshold=Q(c=a.threshold)?b.threshold||this.threshold||O.threshold:c;this.c=Q(c=a.resolution)?c=b.c||this.c||O.c:c;c<=this.threshold&&(this.c=this.threshold+1);this.depth=\"strict\"!==this.g||Q(c=a.depth)?b.depth||this.depth||O.depth:c;this.j=(c=Q(c=a.encode)?b.encode||O.encode:c)&&ia[c]&&ia[c].bind(ia)||(da(c)?c:this.j||!1);(c=a.matcher)&&this.addMatcher(c);if(c=(b=a.lang)||a.filter){X(c)&&(c=xa[c]);if(N(c)){d=this.j;e=G();for(var f=0;f<\r\nc.length;f++){var g=d?d(c[f]):c[f];e[g]=1}c=e}this.filter=c}if(c=b||a.stemmer){b=X(c)?ya[c]:c;d=this.j;e=[];for(var h in b)b.hasOwnProperty(h)&&(f=d?d(h):h,e.push(l(f+\"($|\\\\W)\"),d?d(b[h]):b[h]));this.stemmer=e}this.a=e=(c=a.doc)?I(c):this.a||O.a;this.u=va(this.c-(this.threshold||0));this.s=G();this.f=G();if(e){this.m=G();a.doc=null;h=e.index={};b=e.keys=[];d=e.field;f=e.tag;N(e.id)||(e.id=e.id.split(\":\"));if(f){this.B=G();g=G();if(d)if(X(d))g[d]=a;else if(N(d))for(var k=0;k<d.length;k++)g[d[k]]=a;\r\nelse U(d)&&(g=d);N(f)||(e.tag=f=[f]);for(d=0;d<f.length;d++)this.B[f[d]]=G();this.I=f;d=g}if(d){if(!N(d))if(U(d)){var t=d;e.field=d=Object.keys(d)}else e.field=d=[d];for(e=0;e<d.length;e++)f=d[e],N(f)||(t&&(a=t[f]),b[e]=f,d[e]=f.split(\":\")),h[f]=new p(a),h[f].m=this.m}}this.o=!0;this.v=(this.cache=c=Q(c=a.cache)?this.cache||O.cache:c)?new Ga(c):!1;return this};p.prototype.encode=function(a){a&&la.length&&(a=E(a,la));a&&this.h.length&&(a=E(a,this.h));a&&this.j&&(a=this.j(a));a&&this.stemmer&&(a=E(a,\r\nthis.stemmer));return a};p.prototype.addMatcher=function(a){var b=this.h,c;for(c in a)a.hasOwnProperty(c)&&b.push(l(c),a[c]);return this};p.prototype.add=function(a,b,c,d,e){if(this.a&&U(a))return this.l(\"add\",a,b);if(b&&X(b)&&(a||0===a)){var f=\"@\"+a;if(this.f[f]&&!d)return this.update(a,b);if(this.i)return++this.w>=this.b.length&&(this.w=0),this.b[this.w].postMessage({add:!0,id:a,content:b}),this.f[f]=\"\"+this.w,c&&c(),this;if(!e){if(this.async&&\"function\"!==typeof importScripts){var g=this;f=new Promise(function(Y){setTimeout(function(){g.add(a,\r\nb,null,d,!0);g=null;Y()})});if(c)f.then(c);else return f;return this}if(c)return this.add(a,b,null,d,!0),c(),this}b=this.encode(b);if(!b.length)return this;c=this.g;e=da(c)?c(b):b.split(this.split);this.filter&&(e=ba(e,this.filter));var h=G();h._ctx=G();for(var k=e.length,t=this.threshold,y=this.depth,w=this.c,A=this.u,r=this.G,u=0;u<k;u++){var F=e[u];if(F){var z=F.length,C=(r?u+1:k-u)/k,x=\"\";switch(c){case \"reverse\":case \"both\":for(var B=z;--B;)x=F[B]+x,H(A,h,x,a,r?1:(z-B)/z,C,t,w-1);x=\"\";case \"forward\":for(B=\r\n0;B<z;B++)x+=F[B],H(A,h,x,a,r?(B+1)/z:1,C,t,w-1);break;case \"full\":for(B=0;B<z;B++)for(var J=(r?B+1:z-B)/z,P=z;P>B;P--)x=F.substring(B,P),H(A,h,x,a,J,C,t,w-1);break;default:if(z=H(A,h,F,a,1,C,t,w-1),y&&1<k&&z>=t)for(z=h._ctx[F]||(h._ctx[F]=G()),F=this.s[F]||(this.s[F]=va(w-(t||0))),C=u-y,x=u+y+1,0>C&&(C=0),x>k&&(x=k);C<x;C++)C!==u&&H(F,z,e[C],a,0,w-(C<u?u-C:C-u),t,w-1)}}}this.f[f]=1;this.o=!1}return this};p.prototype.l=function(a,b,c){if(N(b))for(var d=0,e=b.length;d<e;d++){if(d===e-1)return this.l(a,\r\nb[d],c);this.l(a,b[d])}else{d=this.a.index;e=this.a.keys;for(var f=this.a.tag,g=this.a.id,h,k,t,y,w=0;w<g.length;w++)h=(h||b)[g[w]];if(f){for(g=0;g<f.length;g++){t=f[g];k=t.split(\":\");for(w=0;w<k.length;w++)y=(y||b)[k[w]];y=\"@\"+y}k=this.B[t];k=k[y]||(k[y]=[])}if(\"remove\"===a)for(delete this.m[h],g=0,f=e.length;g<f;g++){if(g===f-1)return d[e[g]].remove(h,c),this;d[e[g]].remove(h)}g=this.a.field;k&&(k[k.length]=b);this.m[h]=b;f=0;for(t=g.length;f<t;f++){k=g[f];y=void 0;for(w=0;w<k.length;w++)y=(y||\r\nb)[k[w]];k=d[e[f]];w=\"add\"===a?k.add:k.update;f===t-1?w.call(k,h,y,c):w.call(k,h,y)}}return this};p.prototype.update=function(a,b,c){if(this.a&&U(a))return this.l(\"update\",a,b);this.f[\"@\"+a]&&X(b)&&(this.remove(a),this.add(a,b,c,!0));return this};p.prototype.remove=function(a,b,c){if(this.a&&U(a))return this.l(\"remove\",a,b);var d=\"@\"+a;if(this.f[d]){if(this.i)return this.b[this.f[d]].postMessage({remove:!0,id:a}),delete this.f[d],b&&b(),this;if(!c){if(this.async&&\"function\"!==typeof importScripts){var e=\r\nthis;d=new Promise(function(f){setTimeout(function(){e.remove(a,null,!0);e=null;f()})});if(b)d.then(b);else return d;return this}if(b)return this.remove(a,null,!0),b(),this}for(b=0;b<this.c-(this.threshold||0);b++)ca(this.u[b],a);this.depth&&ca(this.s,a);delete this.f[d];this.o=!1}return this};var W;p.prototype.search=function(a,b,c,d){if(U(b)){if(N(b))for(var e=0;e<b.length;e++)b[e].query=a;else b.query=a;a=b;b=1E3}else b&&da(b)?(c=b,b=1E3):b||0===b||(b=1E3);var f=[],g=a;if(U(a)&&!N(a)){c||(c=a.callback)&&\r\n(g.callback=null);var h=a.sort;var k=a.page;b=a.limit;var t=a.threshold;var y=a.suggest;a=a.query}if(this.a){t=this.a.index;var w=g.where,A=g.bool||\"or\",r=g.field,u=A,F,z;if(r)N(r)||(r=[r]);else if(N(g)){var C=g;r=[];u=[];for(var x=0;x<g.length;x++)d=g[x],e=d.bool||A,r[x]=d.field,u[x]=e,\"not\"===e?F=!0:\"and\"===e&&(z=!0)}else r=this.a.keys;A=r.length;for(x=0;x<A;x++)C&&(g=C[x]),k&&!X(g)&&(g.page=null,g.limit=0),f[x]=t[r[x]].search(g,0);if(this.i){this.H=c;this.D=0;this.A=[];for(t=0;t<this.i;t++)this.b[t].postMessage({search:!0,\r\nlimit:b,content:g});return}if(c)return c(m.call(this,a,u,f,h,b,y,w,k,z,F));if(this.async){var B=this;return new Promise(function(oa){Promise.all(f).then(function(Ha){oa(m.call(B,a,u,Ha,h,b,y,w,k,z,F))})})}return m.call(this,a,u,f,h,b,y,w,k,z,F)}t||(t=this.threshold||0);if(!d){if(this.async&&\"function\"!==typeof importScripts){var J=this;t=new Promise(function(oa){setTimeout(function(){oa(J.search(g,b,null,!0));J=null})});if(c)t.then(c);else return t;return this}if(c)return c(this.search(g,b,null,!0)),\r\nthis}if(!a||!X(a))return f;g=a;if(this.cache)if(this.o){if(c=this.v.get(a))return c}else this.v.clear(),this.o=!0;g=this.encode(g);if(!g.length)return f;c=this.g;c=da(c)?c(g):g.split(this.split);this.filter&&(c=ba(c,this.filter));C=c.length;d=!0;e=[];var P=G(),Y=0;1<C&&(this.depth&&\"strict\"===this.g?A=!0:c.sort(V));if(!A||(x=this.s))for(var ha=this.c;Y<C;Y++){var L=c[Y];if(L){if(A){if(!r)if(x[L])r=L,P[L]=1;else if(!y)return f;if(y&&Y===C-1&&!e.length)A=!1,L=r||L,P[L]=0;else if(!r)continue}if(!P[L]){var M=\r\n[],aa=!1,S=0,T=A?x[r]:this.u;if(T)for(var ea=void 0,R=0;R<ha-t;R++)if(ea=T[R]&&T[R][L])M[S++]=ea,aa=!0;if(aa)r=L,e[e.length]=1<S?M.concat.apply([],M):M[0];else if(!y){d=!1;break}P[L]=1}}}else d=!1;d&&(f=ua(e,b,k,y));this.cache&&this.v.set(a,f);return f};p.prototype.find=function(a,b){return this.where(a,b,1)[0]||null};p.prototype.where=function(a,b,c,d){var e=this.m,f=[],g=0,h;if(U(a)){c||(c=b);var k=Object.keys(a);var t=k.length;var y=!1;if(1===t&&\"id\"===k[0])return[e[a.id]];if((h=this.I)&&!d)for(var w=\r\n0;w<h.length;w++){var A=h[w],r=a[A];if(!Q(r)){var u=this.B[A][\"@\"+r];if(0===--t)return u;k.splice(k.indexOf(A),1);delete a[A];break}}h=Array(t);for(w=0;w<t;w++)h[w]=k[w].split(\":\")}else{if(da(a)){b=d||Object.keys(e);c=b.length;for(k=0;k<c;k++)t=e[b[k]],a(t)&&(f[g++]=t);return f}if(Q(b))return[e[a]];if(\"id\"===a)return[e[b]];k=[a];t=1;h=[a.split(\":\")];y=!0}d=u||d||Object.keys(e);w=d.length;for(A=0;A<w;A++){r=u?d[A]:e[d[A]];for(var F=!0,z=0;z<t;z++){y||(b=a[k[z]]);var C=h[z],x=C.length,B=r;if(1<x)for(var J=\r\n0;J<x;J++)B=B[C[J]];else B=B[C[0]];if(B!==b){F=!1;break}}if(F&&(f[g++]=r,c&&g===c))break}return f};p.prototype.info=function(){if(this.i)for(var a=0;a<this.i;a++)this.b[a].postMessage({info:!0,id:this.id});else return{id:this.id,items:this.length,cache:this.cache&&this.cache.C?this.cache.C.length:!1,matcher:la.length+(this.h?this.h.length:0),worker:this.i,threshold:this.threshold,depth:this.depth,resolution:this.c,contextual:this.depth&&\"strict\"===this.g}};p.prototype.clear=function(){return this.destroy().init()};\r\np.prototype.destroy=function(){this.cache&&(this.v.clear(),this.v=null);this.u=this.s=this.f=null;if(this.a){for(var a=this.a.keys,b=0;b<a.length;b++)this.a.index[a[b]].destroy();this.a=this.m=null}return this};p.prototype.export=function(){if(this.a){var a=this.a.keys;var b=Array(a.length+1);for(var c=0;c<a.length;c++){var d=this.a.index[a[c]];b[c]=[d.u,d.s,Object.keys(d.f)]}b[c]=this.m}else b=[this.u,this.s,Object.keys(this.f)];return JSON.stringify(b)};p.prototype.import=function(a){a=JSON.parse(a);\r\nvar b=G();if(this.a){for(var c=this.a.keys,d=c.length,e=a[0][2],f=0;f<e.length;f++)b[e[f]]=1;for(e=0;e<d;e++)f=this.a.index[c[e]],f.u=a[e][0],f.s=a[e][1],f.f=b,f.m=a[d];this.m=a[d]}else{c=a[2];for(d=0;d<c.length;d++)b[c[d]]=1;this.u=a[0];this.s=a[1];this.f=b}};var ia={icase:function(a){return a.toLowerCase()},simple:function(){var a=[l(\"[\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e5]\"),\"a\",l(\"[\\u00e8\\u00e9\\u00ea\\u00eb]\"),\"e\",l(\"[\\u00ec\\u00ed\\u00ee\\u00ef]\"),\"i\",l(\"[\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u0151]\"),\"o\",\r\nl(\"[\\u00f9\\u00fa\\u00fb\\u00fc\\u0171]\"),\"u\",l(\"[\\u00fd\\u0177\\u00ff]\"),\"y\",l(\"\\u00f1\"),\"n\",l(\"[\\u00e7c]\"),\"k\",l(\"\\u00df\"),\"s\",l(\" & \"),\" and \",l(\"[-/]\"),\" \",l(\"[^a-z0-9 ]\"),\"\",l(\"\\\\s+\"),\" \"];return function(b){b=E(b.toLowerCase(),a);return\" \"===b?\"\":b}}(),advanced:function(){var a=[l(\"ae\"),\"a\",l(\"ai\"),\"ei\",l(\"ay\"),\"ei\",l(\"ey\"),\"ei\",l(\"oe\"),\"o\",l(\"ue\"),\"u\",l(\"ie\"),\"i\",l(\"sz\"),\"s\",l(\"zs\"),\"s\",l(\"sh\"),\"s\",l(\"ck\"),\"k\",l(\"cc\"),\"k\",l(\"th\"),\"t\",l(\"dt\"),\"t\",l(\"ph\"),\"f\",l(\"pf\"),\"f\",l(\"ou\"),\"o\",l(\"uo\"),\"u\"];return function(b,\r\nc){if(!b)return b;b=this.simple(b);2<b.length&&(b=E(b,a));c||1<b.length&&(b=K(b));return b}}(),extra:function(){var a=[l(\"p\"),\"b\",l(\"z\"),\"s\",l(\"[cgq]\"),\"k\",l(\"n\"),\"m\",l(\"d\"),\"t\",l(\"[vw]\"),\"f\",l(\"[aeiouy]\"),\"\"];return function(b){if(!b)return b;b=this.advanced(b,!0);if(1<b.length){b=b.split(\" \");for(var c=0;c<b.length;c++){var d=b[c];1<d.length&&(b[c]=d[0]+E(d.substring(1),a))}b=b.join(\" \");b=K(b)}return b}}(),balance:function(){var a=[l(\"[-/]\"),\" \",l(\"[^a-z0-9 ]\"),\"\",l(\"\\\\s+\"),\" \"];return function(b){return K(E(b.toLowerCase(),\r\na))}}()},Ga=function(){function a(b){this.clear();this.J=!0!==b&&b}a.prototype.clear=function(){this.cache=G();this.count=G();this.index=G();this.C=[]};a.prototype.set=function(b,c){if(this.J&&Q(this.cache[b])){var d=this.C.length;if(d===this.J){d--;var e=this.C[d];delete this.cache[e];delete this.count[e];delete this.index[e]}this.index[b]=d;this.C[d]=b;this.count[b]=-1;this.cache[b]=c;this.get(b)}else this.cache[b]=c};a.prototype.get=function(b){var c=this.cache[b];if(this.J&&c){var d=++this.count[b],\r\ne=this.index,f=e[b];if(0<f){for(var g=this.C,h=f;this.count[g[--f]]<=d&&-1!==f;);f++;if(f!==h){for(d=h;d>f;d--)h=g[d-1],g[d]=h,e[h]=d;g[f]=b;e[b]=f}}}return c};return a}();return p}(function(){var n={},q=\"undefined\"!==typeof Blob&&\"undefined\"!==typeof URL&&URL.createObjectURL;return function(p,D,I,ba,m){I=q?URL.createObjectURL(new Blob([\"(\"+I.toString()+\")()\"],{type:\"text/javascript\"})):p+\".es5.js\";p+=\"-\"+D;n[p]||(n[p]=[]);n[p][m]=new Worker(I);n[p][m].onmessage=ba;console.log(\"Register Worker: \"+\r\np+\"@\"+m);return n[p][m]}}()),this);\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopeTypes = void 0;\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n// @flow\nvar ScopeTypes = {\n  TEAM: 'team',\n  CHANNEL: 'channel'\n};\nexports.ScopeTypes = ScopeTypes;","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n","/*!***************************************************\n* mark.js v8.11.1\n* https://markjs.io/\n* Copyright (c) 2014–2018, Julian Kühnel\n* Released under the MIT license https://git.io/vwTVl\n*****************************************************/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Mark = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar DOMIterator = function () {\n  function DOMIterator(ctx) {\n    var iframes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var iframesTimeout = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5000;\n    classCallCheck(this, DOMIterator);\n\n    this.ctx = ctx;\n    this.iframes = iframes;\n    this.exclude = exclude;\n    this.iframesTimeout = iframesTimeout;\n  }\n\n  createClass(DOMIterator, [{\n    key: 'getContexts',\n    value: function getContexts() {\n      var ctx = void 0,\n          filteredCtx = [];\n      if (typeof this.ctx === 'undefined' || !this.ctx) {\n        ctx = [];\n      } else if (NodeList.prototype.isPrototypeOf(this.ctx)) {\n        ctx = Array.prototype.slice.call(this.ctx);\n      } else if (Array.isArray(this.ctx)) {\n        ctx = this.ctx;\n      } else if (typeof this.ctx === 'string') {\n        ctx = Array.prototype.slice.call(document.querySelectorAll(this.ctx));\n      } else {\n        ctx = [this.ctx];\n      }\n      ctx.forEach(function (ctx) {\n        var isDescendant = filteredCtx.filter(function (contexts) {\n          return contexts.contains(ctx);\n        }).length > 0;\n        if (filteredCtx.indexOf(ctx) === -1 && !isDescendant) {\n          filteredCtx.push(ctx);\n        }\n      });\n      return filteredCtx;\n    }\n  }, {\n    key: 'getIframeContents',\n    value: function getIframeContents(ifr, successFn) {\n      var errorFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n\n      var doc = void 0;\n      try {\n        var ifrWin = ifr.contentWindow;\n        doc = ifrWin.document;\n        if (!ifrWin || !doc) {\n          throw new Error('iframe inaccessible');\n        }\n      } catch (e) {\n        errorFn();\n      }\n      if (doc) {\n        successFn(doc);\n      }\n    }\n  }, {\n    key: 'isIframeBlank',\n    value: function isIframeBlank(ifr) {\n      var bl = 'about:blank',\n          src = ifr.getAttribute('src').trim(),\n          href = ifr.contentWindow.location.href;\n      return href === bl && src !== bl && src;\n    }\n  }, {\n    key: 'observeIframeLoad',\n    value: function observeIframeLoad(ifr, successFn, errorFn) {\n      var _this = this;\n\n      var called = false,\n          tout = null;\n      var listener = function listener() {\n        if (called) {\n          return;\n        }\n        called = true;\n        clearTimeout(tout);\n        try {\n          if (!_this.isIframeBlank(ifr)) {\n            ifr.removeEventListener('load', listener);\n            _this.getIframeContents(ifr, successFn, errorFn);\n          }\n        } catch (e) {\n          errorFn();\n        }\n      };\n      ifr.addEventListener('load', listener);\n      tout = setTimeout(listener, this.iframesTimeout);\n    }\n  }, {\n    key: 'onIframeReady',\n    value: function onIframeReady(ifr, successFn, errorFn) {\n      try {\n        if (ifr.contentWindow.document.readyState === 'complete') {\n          if (this.isIframeBlank(ifr)) {\n            this.observeIframeLoad(ifr, successFn, errorFn);\n          } else {\n            this.getIframeContents(ifr, successFn, errorFn);\n          }\n        } else {\n          this.observeIframeLoad(ifr, successFn, errorFn);\n        }\n      } catch (e) {\n        errorFn();\n      }\n    }\n  }, {\n    key: 'waitForIframes',\n    value: function waitForIframes(ctx, done) {\n      var _this2 = this;\n\n      var eachCalled = 0;\n      this.forEachIframe(ctx, function () {\n        return true;\n      }, function (ifr) {\n        eachCalled++;\n        _this2.waitForIframes(ifr.querySelector('html'), function () {\n          if (! --eachCalled) {\n            done();\n          }\n        });\n      }, function (handled) {\n        if (!handled) {\n          done();\n        }\n      });\n    }\n  }, {\n    key: 'forEachIframe',\n    value: function forEachIframe(ctx, filter, each) {\n      var _this3 = this;\n\n      var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n      var ifr = ctx.querySelectorAll('iframe'),\n          open = ifr.length,\n          handled = 0;\n      ifr = Array.prototype.slice.call(ifr);\n      var checkEnd = function checkEnd() {\n        if (--open <= 0) {\n          end(handled);\n        }\n      };\n      if (!open) {\n        checkEnd();\n      }\n      ifr.forEach(function (ifr) {\n        if (DOMIterator.matches(ifr, _this3.exclude)) {\n          checkEnd();\n        } else {\n          _this3.onIframeReady(ifr, function (con) {\n            if (filter(ifr)) {\n              handled++;\n              each(con);\n            }\n            checkEnd();\n          }, checkEnd);\n        }\n      });\n    }\n  }, {\n    key: 'createIterator',\n    value: function createIterator(ctx, whatToShow, filter) {\n      return document.createNodeIterator(ctx, whatToShow, filter, false);\n    }\n  }, {\n    key: 'createInstanceOnIframe',\n    value: function createInstanceOnIframe(contents) {\n      return new DOMIterator(contents.querySelector('html'), this.iframes);\n    }\n  }, {\n    key: 'compareNodeIframe',\n    value: function compareNodeIframe(node, prevNode, ifr) {\n      var compCurr = node.compareDocumentPosition(ifr),\n          prev = Node.DOCUMENT_POSITION_PRECEDING;\n      if (compCurr & prev) {\n        if (prevNode !== null) {\n          var compPrev = prevNode.compareDocumentPosition(ifr),\n              after = Node.DOCUMENT_POSITION_FOLLOWING;\n          if (compPrev & after) {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'getIteratorNode',\n    value: function getIteratorNode(itr) {\n      var prevNode = itr.previousNode();\n      var node = void 0;\n      if (prevNode === null) {\n        node = itr.nextNode();\n      } else {\n        node = itr.nextNode() && itr.nextNode();\n      }\n      return {\n        prevNode: prevNode,\n        node: node\n      };\n    }\n  }, {\n    key: 'checkIframeFilter',\n    value: function checkIframeFilter(node, prevNode, currIfr, ifr) {\n      var key = false,\n          handled = false;\n      ifr.forEach(function (ifrDict, i) {\n        if (ifrDict.val === currIfr) {\n          key = i;\n          handled = ifrDict.handled;\n        }\n      });\n      if (this.compareNodeIframe(node, prevNode, currIfr)) {\n        if (key === false && !handled) {\n          ifr.push({\n            val: currIfr,\n            handled: true\n          });\n        } else if (key !== false && !handled) {\n          ifr[key].handled = true;\n        }\n        return true;\n      }\n      if (key === false) {\n        ifr.push({\n          val: currIfr,\n          handled: false\n        });\n      }\n      return false;\n    }\n  }, {\n    key: 'handleOpenIframes',\n    value: function handleOpenIframes(ifr, whatToShow, eCb, fCb) {\n      var _this4 = this;\n\n      ifr.forEach(function (ifrDict) {\n        if (!ifrDict.handled) {\n          _this4.getIframeContents(ifrDict.val, function (con) {\n            _this4.createInstanceOnIframe(con).forEachNode(whatToShow, eCb, fCb);\n          });\n        }\n      });\n    }\n  }, {\n    key: 'iterateThroughNodes',\n    value: function iterateThroughNodes(whatToShow, ctx, eachCb, filterCb, doneCb) {\n      var _this5 = this;\n\n      var itr = this.createIterator(ctx, whatToShow, filterCb);\n      var ifr = [],\n          elements = [],\n          node = void 0,\n          prevNode = void 0,\n          retrieveNodes = function retrieveNodes() {\n        var _getIteratorNode = _this5.getIteratorNode(itr);\n\n        prevNode = _getIteratorNode.prevNode;\n        node = _getIteratorNode.node;\n\n        return node;\n      };\n      while (retrieveNodes()) {\n        if (this.iframes) {\n          this.forEachIframe(ctx, function (currIfr) {\n            return _this5.checkIframeFilter(node, prevNode, currIfr, ifr);\n          }, function (con) {\n            _this5.createInstanceOnIframe(con).forEachNode(whatToShow, function (ifrNode) {\n              return elements.push(ifrNode);\n            }, filterCb);\n          });\n        }\n        elements.push(node);\n      }\n      elements.forEach(function (node) {\n        eachCb(node);\n      });\n      if (this.iframes) {\n        this.handleOpenIframes(ifr, whatToShow, eachCb, filterCb);\n      }\n      doneCb();\n    }\n  }, {\n    key: 'forEachNode',\n    value: function forEachNode(whatToShow, each, filter) {\n      var _this6 = this;\n\n      var done = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n      var contexts = this.getContexts();\n      var open = contexts.length;\n      if (!open) {\n        done();\n      }\n      contexts.forEach(function (ctx) {\n        var ready = function ready() {\n          _this6.iterateThroughNodes(whatToShow, ctx, each, filter, function () {\n            if (--open <= 0) {\n              done();\n            }\n          });\n        };\n        if (_this6.iframes) {\n          _this6.waitForIframes(ctx, ready);\n        } else {\n          ready();\n        }\n      });\n    }\n  }], [{\n    key: 'matches',\n    value: function matches(element, selector) {\n      var selectors = typeof selector === 'string' ? [selector] : selector,\n          fn = element.matches || element.matchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector || element.webkitMatchesSelector;\n      if (fn) {\n        var match = false;\n        selectors.every(function (sel) {\n          if (fn.call(element, sel)) {\n            match = true;\n            return false;\n          }\n          return true;\n        });\n        return match;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return DOMIterator;\n}();\n\nvar Mark$1 = function () {\n  function Mark(ctx) {\n    classCallCheck(this, Mark);\n\n    this.ctx = ctx;\n    this.ie = false;\n    var ua = window.navigator.userAgent;\n    if (ua.indexOf('MSIE') > -1 || ua.indexOf('Trident') > -1) {\n      this.ie = true;\n    }\n  }\n\n  createClass(Mark, [{\n    key: 'log',\n    value: function log(msg) {\n      var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'debug';\n\n      var log = this.opt.log;\n      if (!this.opt.debug) {\n        return;\n      }\n      if ((typeof log === 'undefined' ? 'undefined' : _typeof(log)) === 'object' && typeof log[level] === 'function') {\n        log[level]('mark.js: ' + msg);\n      }\n    }\n  }, {\n    key: 'escapeStr',\n    value: function escapeStr(str) {\n      return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    }\n  }, {\n    key: 'createRegExp',\n    value: function createRegExp(str) {\n      if (this.opt.wildcards !== 'disabled') {\n        str = this.setupWildcardsRegExp(str);\n      }\n      str = this.escapeStr(str);\n      if (Object.keys(this.opt.synonyms).length) {\n        str = this.createSynonymsRegExp(str);\n      }\n      if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n        str = this.setupIgnoreJoinersRegExp(str);\n      }\n      if (this.opt.diacritics) {\n        str = this.createDiacriticsRegExp(str);\n      }\n      str = this.createMergedBlanksRegExp(str);\n      if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n        str = this.createJoinersRegExp(str);\n      }\n      if (this.opt.wildcards !== 'disabled') {\n        str = this.createWildcardsRegExp(str);\n      }\n      str = this.createAccuracyRegExp(str);\n      return str;\n    }\n  }, {\n    key: 'createSynonymsRegExp',\n    value: function createSynonymsRegExp(str) {\n      var syn = this.opt.synonyms,\n          sens = this.opt.caseSensitive ? '' : 'i',\n          joinerPlaceholder = this.opt.ignoreJoiners || this.opt.ignorePunctuation.length ? '\\0' : '';\n      for (var index in syn) {\n        if (syn.hasOwnProperty(index)) {\n          var value = syn[index],\n              k1 = this.opt.wildcards !== 'disabled' ? this.setupWildcardsRegExp(index) : this.escapeStr(index),\n              k2 = this.opt.wildcards !== 'disabled' ? this.setupWildcardsRegExp(value) : this.escapeStr(value);\n          if (k1 !== '' && k2 !== '') {\n            str = str.replace(new RegExp('(' + this.escapeStr(k1) + '|' + this.escapeStr(k2) + ')', 'gm' + sens), joinerPlaceholder + ('(' + this.processSynomyms(k1) + '|') + (this.processSynomyms(k2) + ')') + joinerPlaceholder);\n          }\n        }\n      }\n      return str;\n    }\n  }, {\n    key: 'processSynomyms',\n    value: function processSynomyms(str) {\n      if (this.opt.ignoreJoiners || this.opt.ignorePunctuation.length) {\n        str = this.setupIgnoreJoinersRegExp(str);\n      }\n      return str;\n    }\n  }, {\n    key: 'setupWildcardsRegExp',\n    value: function setupWildcardsRegExp(str) {\n      str = str.replace(/(?:\\\\)*\\?/g, function (val) {\n        return val.charAt(0) === '\\\\' ? '?' : '\\x01';\n      });\n      return str.replace(/(?:\\\\)*\\*/g, function (val) {\n        return val.charAt(0) === '\\\\' ? '*' : '\\x02';\n      });\n    }\n  }, {\n    key: 'createWildcardsRegExp',\n    value: function createWildcardsRegExp(str) {\n      var spaces = this.opt.wildcards === 'withSpaces';\n      return str.replace(/\\u0001/g, spaces ? '[\\\\S\\\\s]?' : '\\\\S?').replace(/\\u0002/g, spaces ? '[\\\\S\\\\s]*?' : '\\\\S*');\n    }\n  }, {\n    key: 'setupIgnoreJoinersRegExp',\n    value: function setupIgnoreJoinersRegExp(str) {\n      return str.replace(/[^(|)\\\\]/g, function (val, indx, original) {\n        var nextChar = original.charAt(indx + 1);\n        if (/[(|)\\\\]/.test(nextChar) || nextChar === '') {\n          return val;\n        } else {\n          return val + '\\0';\n        }\n      });\n    }\n  }, {\n    key: 'createJoinersRegExp',\n    value: function createJoinersRegExp(str) {\n      var joiner = [];\n      var ignorePunctuation = this.opt.ignorePunctuation;\n      if (Array.isArray(ignorePunctuation) && ignorePunctuation.length) {\n        joiner.push(this.escapeStr(ignorePunctuation.join('')));\n      }\n      if (this.opt.ignoreJoiners) {\n        joiner.push('\\\\u00ad\\\\u200b\\\\u200c\\\\u200d');\n      }\n      return joiner.length ? str.split(/\\u0000+/).join('[' + joiner.join('') + ']*') : str;\n    }\n  }, {\n    key: 'createDiacriticsRegExp',\n    value: function createDiacriticsRegExp(str) {\n      var sens = this.opt.caseSensitive ? '' : 'i',\n          dct = this.opt.caseSensitive ? ['aàáảãạăằắẳẵặâầấẩẫậäåāą', 'AÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ', 'cçćč', 'CÇĆČ', 'dđď', 'DĐĎ', 'eèéẻẽẹêềếểễệëěēę', 'EÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ', 'iìíỉĩịîïī', 'IÌÍỈĨỊÎÏĪ', 'lł', 'LŁ', 'nñňń', 'NÑŇŃ', 'oòóỏõọôồốổỗộơởỡớờợöøō', 'OÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ', 'rř', 'RŘ', 'sšśșş', 'SŠŚȘŞ', 'tťțţ', 'TŤȚŢ', 'uùúủũụưừứửữựûüůū', 'UÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ', 'yýỳỷỹỵÿ', 'YÝỲỶỸỴŸ', 'zžżź', 'ZŽŻŹ'] : ['aàáảãạăằắẳẵặâầấẩẫậäåāąAÀÁẢÃẠĂẰẮẲẴẶÂẦẤẨẪẬÄÅĀĄ', 'cçćčCÇĆČ', 'dđďDĐĎ', 'eèéẻẽẹêềếểễệëěēęEÈÉẺẼẸÊỀẾỂỄỆËĚĒĘ', 'iìíỉĩịîïīIÌÍỈĨỊÎÏĪ', 'lłLŁ', 'nñňńNÑŇŃ', 'oòóỏõọôồốổỗộơởỡớờợöøōOÒÓỎÕỌÔỒỐỔỖỘƠỞỠỚỜỢÖØŌ', 'rřRŘ', 'sšśșşSŠŚȘŞ', 'tťțţTŤȚŢ', 'uùúủũụưừứửữựûüůūUÙÚỦŨỤƯỪỨỬỮỰÛÜŮŪ', 'yýỳỷỹỵÿYÝỲỶỸỴŸ', 'zžżźZŽŻŹ'];\n      var handled = [];\n      str.split('').forEach(function (ch) {\n        dct.every(function (dct) {\n          if (dct.indexOf(ch) !== -1) {\n            if (handled.indexOf(dct) > -1) {\n              return false;\n            }\n            str = str.replace(new RegExp('[' + dct + ']', 'gm' + sens), '[' + dct + ']');\n            handled.push(dct);\n          }\n          return true;\n        });\n      });\n      return str;\n    }\n  }, {\n    key: 'createMergedBlanksRegExp',\n    value: function createMergedBlanksRegExp(str) {\n      return str.replace(/[\\s]+/gmi, '[\\\\s]+');\n    }\n  }, {\n    key: 'createAccuracyRegExp',\n    value: function createAccuracyRegExp(str) {\n      var _this = this;\n\n      var chars = '!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~¡¿';\n      var acc = this.opt.accuracy,\n          val = typeof acc === 'string' ? acc : acc.value,\n          ls = typeof acc === 'string' ? [] : acc.limiters,\n          lsJoin = '';\n      ls.forEach(function (limiter) {\n        lsJoin += '|' + _this.escapeStr(limiter);\n      });\n      switch (val) {\n        case 'partially':\n        default:\n          return '()(' + str + ')';\n        case 'complementary':\n          lsJoin = '\\\\s' + (lsJoin ? lsJoin : this.escapeStr(chars));\n          return '()([^' + lsJoin + ']*' + str + '[^' + lsJoin + ']*)';\n        case 'exactly':\n          return '(^|\\\\s' + lsJoin + ')(' + str + ')(?=$|\\\\s' + lsJoin + ')';\n      }\n    }\n  }, {\n    key: 'getSeparatedKeywords',\n    value: function getSeparatedKeywords(sv) {\n      var _this2 = this;\n\n      var stack = [];\n      sv.forEach(function (kw) {\n        if (!_this2.opt.separateWordSearch) {\n          if (kw.trim() && stack.indexOf(kw) === -1) {\n            stack.push(kw);\n          }\n        } else {\n          kw.split(' ').forEach(function (kwSplitted) {\n            if (kwSplitted.trim() && stack.indexOf(kwSplitted) === -1) {\n              stack.push(kwSplitted);\n            }\n          });\n        }\n      });\n      return {\n        'keywords': stack.sort(function (a, b) {\n          return b.length - a.length;\n        }),\n        'length': stack.length\n      };\n    }\n  }, {\n    key: 'isNumeric',\n    value: function isNumeric(value) {\n      return Number(parseFloat(value)) == value;\n    }\n  }, {\n    key: 'checkRanges',\n    value: function checkRanges(array) {\n      var _this3 = this;\n\n      if (!Array.isArray(array) || Object.prototype.toString.call(array[0]) !== '[object Object]') {\n        this.log('markRanges() will only accept an array of objects');\n        this.opt.noMatch(array);\n        return [];\n      }\n      var stack = [];\n      var last = 0;\n      array.sort(function (a, b) {\n        return a.start - b.start;\n      }).forEach(function (item) {\n        var _callNoMatchOnInvalid = _this3.callNoMatchOnInvalidRanges(item, last),\n            start = _callNoMatchOnInvalid.start,\n            end = _callNoMatchOnInvalid.end,\n            valid = _callNoMatchOnInvalid.valid;\n\n        if (valid) {\n          item.start = start;\n          item.length = end - start;\n          stack.push(item);\n          last = end;\n        }\n      });\n      return stack;\n    }\n  }, {\n    key: 'callNoMatchOnInvalidRanges',\n    value: function callNoMatchOnInvalidRanges(range, last) {\n      var start = void 0,\n          end = void 0,\n          valid = false;\n      if (range && typeof range.start !== 'undefined') {\n        start = parseInt(range.start, 10);\n        end = start + parseInt(range.length, 10);\n        if (this.isNumeric(range.start) && this.isNumeric(range.length) && end - last > 0 && end - start > 0) {\n          valid = true;\n        } else {\n          this.log('Ignoring invalid or overlapping range: ' + ('' + JSON.stringify(range)));\n          this.opt.noMatch(range);\n        }\n      } else {\n        this.log('Ignoring invalid range: ' + JSON.stringify(range));\n        this.opt.noMatch(range);\n      }\n      return {\n        start: start,\n        end: end,\n        valid: valid\n      };\n    }\n  }, {\n    key: 'checkWhitespaceRanges',\n    value: function checkWhitespaceRanges(range, originalLength, string) {\n      var end = void 0,\n          valid = true,\n          max = string.length,\n          offset = originalLength - max,\n          start = parseInt(range.start, 10) - offset;\n      start = start > max ? max : start;\n      end = start + parseInt(range.length, 10);\n      if (end > max) {\n        end = max;\n        this.log('End range automatically set to the max value of ' + max);\n      }\n      if (start < 0 || end - start < 0 || start > max || end > max) {\n        valid = false;\n        this.log('Invalid range: ' + JSON.stringify(range));\n        this.opt.noMatch(range);\n      } else if (string.substring(start, end).replace(/\\s+/g, '') === '') {\n        valid = false;\n        this.log('Skipping whitespace only range: ' + JSON.stringify(range));\n        this.opt.noMatch(range);\n      }\n      return {\n        start: start,\n        end: end,\n        valid: valid\n      };\n    }\n  }, {\n    key: 'getTextNodes',\n    value: function getTextNodes(cb) {\n      var _this4 = this;\n\n      var val = '',\n          nodes = [];\n      this.iterator.forEachNode(NodeFilter.SHOW_TEXT, function (node) {\n        nodes.push({\n          start: val.length,\n          end: (val += node.textContent).length,\n          node: node\n        });\n      }, function (node) {\n        if (_this4.matchesExclude(node.parentNode)) {\n          return NodeFilter.FILTER_REJECT;\n        } else {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n      }, function () {\n        cb({\n          value: val,\n          nodes: nodes\n        });\n      });\n    }\n  }, {\n    key: 'matchesExclude',\n    value: function matchesExclude(el) {\n      return DOMIterator.matches(el, this.opt.exclude.concat(['script', 'style', 'title', 'head', 'html']));\n    }\n  }, {\n    key: 'wrapRangeInTextNode',\n    value: function wrapRangeInTextNode(node, start, end) {\n      var hEl = !this.opt.element ? 'mark' : this.opt.element,\n          startNode = node.splitText(start),\n          ret = startNode.splitText(end - start);\n      var repl = document.createElement(hEl);\n      repl.setAttribute('data-markjs', 'true');\n      if (this.opt.className) {\n        repl.setAttribute('class', this.opt.className);\n      }\n      repl.textContent = startNode.textContent;\n      startNode.parentNode.replaceChild(repl, startNode);\n      return ret;\n    }\n  }, {\n    key: 'wrapRangeInMappedTextNode',\n    value: function wrapRangeInMappedTextNode(dict, start, end, filterCb, eachCb) {\n      var _this5 = this;\n\n      dict.nodes.every(function (n, i) {\n        var sibl = dict.nodes[i + 1];\n        if (typeof sibl === 'undefined' || sibl.start > start) {\n          if (!filterCb(n.node)) {\n            return false;\n          }\n          var s = start - n.start,\n              e = (end > n.end ? n.end : end) - n.start,\n              startStr = dict.value.substr(0, n.start),\n              endStr = dict.value.substr(e + n.start);\n          n.node = _this5.wrapRangeInTextNode(n.node, s, e);\n          dict.value = startStr + endStr;\n          dict.nodes.forEach(function (k, j) {\n            if (j >= i) {\n              if (dict.nodes[j].start > 0 && j !== i) {\n                dict.nodes[j].start -= e;\n              }\n              dict.nodes[j].end -= e;\n            }\n          });\n          end -= e;\n          eachCb(n.node.previousSibling, n.start);\n          if (end > n.end) {\n            start = n.end;\n          } else {\n            return false;\n          }\n        }\n        return true;\n      });\n    }\n  }, {\n    key: 'wrapMatches',\n    value: function wrapMatches(regex, ignoreGroups, filterCb, eachCb, endCb) {\n      var _this6 = this;\n\n      var matchIdx = ignoreGroups === 0 ? 0 : ignoreGroups + 1;\n      this.getTextNodes(function (dict) {\n        dict.nodes.forEach(function (node) {\n          node = node.node;\n          var match = void 0;\n          while ((match = regex.exec(node.textContent)) !== null && match[matchIdx] !== '') {\n            if (!filterCb(match[matchIdx], node)) {\n              continue;\n            }\n            var pos = match.index;\n            if (matchIdx !== 0) {\n              for (var i = 1; i < matchIdx; i++) {\n                pos += match[i].length;\n              }\n            }\n            node = _this6.wrapRangeInTextNode(node, pos, pos + match[matchIdx].length);\n            eachCb(node.previousSibling);\n            regex.lastIndex = 0;\n          }\n        });\n        endCb();\n      });\n    }\n  }, {\n    key: 'wrapMatchesAcrossElements',\n    value: function wrapMatchesAcrossElements(regex, ignoreGroups, filterCb, eachCb, endCb) {\n      var _this7 = this;\n\n      var matchIdx = ignoreGroups === 0 ? 0 : ignoreGroups + 1;\n      this.getTextNodes(function (dict) {\n        var match = void 0;\n        while ((match = regex.exec(dict.value)) !== null && match[matchIdx] !== '') {\n          var start = match.index;\n          if (matchIdx !== 0) {\n            for (var i = 1; i < matchIdx; i++) {\n              start += match[i].length;\n            }\n          }\n          var end = start + match[matchIdx].length;\n          _this7.wrapRangeInMappedTextNode(dict, start, end, function (node) {\n            return filterCb(match[matchIdx], node);\n          }, function (node, lastIndex) {\n            regex.lastIndex = lastIndex;\n            eachCb(node);\n          });\n        }\n        endCb();\n      });\n    }\n  }, {\n    key: 'wrapRangeFromIndex',\n    value: function wrapRangeFromIndex(ranges, filterCb, eachCb, endCb) {\n      var _this8 = this;\n\n      this.getTextNodes(function (dict) {\n        var originalLength = dict.value.length;\n        ranges.forEach(function (range, counter) {\n          var _checkWhitespaceRange = _this8.checkWhitespaceRanges(range, originalLength, dict.value),\n              start = _checkWhitespaceRange.start,\n              end = _checkWhitespaceRange.end,\n              valid = _checkWhitespaceRange.valid;\n\n          if (valid) {\n            _this8.wrapRangeInMappedTextNode(dict, start, end, function (node) {\n              return filterCb(node, range, dict.value.substring(start, end), counter);\n            }, function (node) {\n              eachCb(node, range);\n            });\n          }\n        });\n        endCb();\n      });\n    }\n  }, {\n    key: 'unwrapMatches',\n    value: function unwrapMatches(node) {\n      var parent = node.parentNode;\n      var docFrag = document.createDocumentFragment();\n      while (node.firstChild) {\n        docFrag.appendChild(node.removeChild(node.firstChild));\n      }\n      parent.replaceChild(docFrag, node);\n      if (!this.ie) {\n        parent.normalize();\n      } else {\n        this.normalizeTextNode(parent);\n      }\n    }\n  }, {\n    key: 'normalizeTextNode',\n    value: function normalizeTextNode(node) {\n      if (!node) {\n        return;\n      }\n      if (node.nodeType === 3) {\n        while (node.nextSibling && node.nextSibling.nodeType === 3) {\n          node.nodeValue += node.nextSibling.nodeValue;\n          node.parentNode.removeChild(node.nextSibling);\n        }\n      } else {\n        this.normalizeTextNode(node.firstChild);\n      }\n      this.normalizeTextNode(node.nextSibling);\n    }\n  }, {\n    key: 'markRegExp',\n    value: function markRegExp(regexp, opt) {\n      var _this9 = this;\n\n      this.opt = opt;\n      this.log('Searching with expression \"' + regexp + '\"');\n      var totalMatches = 0,\n          fn = 'wrapMatches';\n      var eachCb = function eachCb(element) {\n        totalMatches++;\n        _this9.opt.each(element);\n      };\n      if (this.opt.acrossElements) {\n        fn = 'wrapMatchesAcrossElements';\n      }\n      this[fn](regexp, this.opt.ignoreGroups, function (match, node) {\n        return _this9.opt.filter(node, match, totalMatches);\n      }, eachCb, function () {\n        if (totalMatches === 0) {\n          _this9.opt.noMatch(regexp);\n        }\n        _this9.opt.done(totalMatches);\n      });\n    }\n  }, {\n    key: 'mark',\n    value: function mark(sv, opt) {\n      var _this10 = this;\n\n      this.opt = opt;\n      var totalMatches = 0,\n          fn = 'wrapMatches';\n\n      var _getSeparatedKeywords = this.getSeparatedKeywords(typeof sv === 'string' ? [sv] : sv),\n          kwArr = _getSeparatedKeywords.keywords,\n          kwArrLen = _getSeparatedKeywords.length,\n          sens = this.opt.caseSensitive ? '' : 'i',\n          handler = function handler(kw) {\n        var regex = new RegExp(_this10.createRegExp(kw), 'gm' + sens),\n            matches = 0;\n        _this10.log('Searching with expression \"' + regex + '\"');\n        _this10[fn](regex, 1, function (term, node) {\n          return _this10.opt.filter(node, kw, totalMatches, matches);\n        }, function (element) {\n          matches++;\n          totalMatches++;\n          _this10.opt.each(element);\n        }, function () {\n          if (matches === 0) {\n            _this10.opt.noMatch(kw);\n          }\n          if (kwArr[kwArrLen - 1] === kw) {\n            _this10.opt.done(totalMatches);\n          } else {\n            handler(kwArr[kwArr.indexOf(kw) + 1]);\n          }\n        });\n      };\n\n      if (this.opt.acrossElements) {\n        fn = 'wrapMatchesAcrossElements';\n      }\n      if (kwArrLen === 0) {\n        this.opt.done(totalMatches);\n      } else {\n        handler(kwArr[0]);\n      }\n    }\n  }, {\n    key: 'markRanges',\n    value: function markRanges(rawRanges, opt) {\n      var _this11 = this;\n\n      this.opt = opt;\n      var totalMatches = 0,\n          ranges = this.checkRanges(rawRanges);\n      if (ranges && ranges.length) {\n        this.log('Starting to mark with the following ranges: ' + JSON.stringify(ranges));\n        this.wrapRangeFromIndex(ranges, function (node, range, match, counter) {\n          return _this11.opt.filter(node, range, match, counter);\n        }, function (element, range) {\n          totalMatches++;\n          _this11.opt.each(element, range);\n        }, function () {\n          _this11.opt.done(totalMatches);\n        });\n      } else {\n        this.opt.done(totalMatches);\n      }\n    }\n  }, {\n    key: 'unmark',\n    value: function unmark(opt) {\n      var _this12 = this;\n\n      this.opt = opt;\n      var sel = this.opt.element ? this.opt.element : '*';\n      sel += '[data-markjs]';\n      if (this.opt.className) {\n        sel += '.' + this.opt.className;\n      }\n      this.log('Removal selector \"' + sel + '\"');\n      this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT, function (node) {\n        _this12.unwrapMatches(node);\n      }, function (node) {\n        var matchesSel = DOMIterator.matches(node, sel),\n            matchesExclude = _this12.matchesExclude(node);\n        if (!matchesSel || matchesExclude) {\n          return NodeFilter.FILTER_REJECT;\n        } else {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n      }, this.opt.done);\n    }\n  }, {\n    key: 'opt',\n    set: function set$$1(val) {\n      this._opt = _extends({}, {\n        'element': '',\n        'className': '',\n        'exclude': [],\n        'iframes': false,\n        'iframesTimeout': 5000,\n        'separateWordSearch': true,\n        'diacritics': true,\n        'synonyms': {},\n        'accuracy': 'partially',\n        'acrossElements': false,\n        'caseSensitive': false,\n        'ignoreJoiners': false,\n        'ignoreGroups': 0,\n        'ignorePunctuation': [],\n        'wildcards': 'disabled',\n        'each': function each() {},\n        'noMatch': function noMatch() {},\n        'filter': function filter() {\n          return true;\n        },\n        'done': function done() {},\n        'debug': false,\n        'log': window.console\n      }, val);\n    },\n    get: function get$$1() {\n      return this._opt;\n    }\n  }, {\n    key: 'iterator',\n    get: function get$$1() {\n      return new DOMIterator(this.ctx, this.opt.iframes, this.opt.exclude, this.opt.iframesTimeout);\n    }\n  }]);\n  return Mark;\n}();\n\nfunction Mark(ctx) {\n  var _this = this;\n\n  var instance = new Mark$1(ctx);\n  this.mark = function (sv, opt) {\n    instance.mark(sv, opt);\n    return _this;\n  };\n  this.markRegExp = function (sv, opt) {\n    instance.markRegExp(sv, opt);\n    return _this;\n  };\n  this.markRanges = function (sv, opt) {\n    instance.markRanges(sv, opt);\n    return _this;\n  };\n  this.unmark = function (opt) {\n    instance.unmark(opt);\n    return _this;\n  };\n  return this;\n}\n\nreturn Mark;\n\n})));\n"],"sourceRoot":""}