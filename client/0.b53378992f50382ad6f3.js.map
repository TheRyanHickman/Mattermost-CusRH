{"version":3,"sources":["webpack:///./actions/admin_actions.jsx","webpack:///./selectors/views/admin.js"],"names":["dispatch","store","getState","saveConfig","_x","_x2","_x3","_saveConfig","apply","this","arguments","_callee","config","success","error","_ref2","data","err","regeneratorRuntime","wrap","_context","prev","next","AdminActions","sent","_objectSpread","id","server_error_id","stop","reloadConfig","_x4","_x5","_reloadConfig","_callee2","_ref3","_context2","adminResetMfa","_x6","_x7","_x8","_adminResetMfa","_callee3","userId","_ref4","_context3","UserActions","getClusterStatus","_x9","_x10","_getClusterStatus","_callee4","_ref5","_context4","ldapTest","_x11","_x12","_ldapTest","_callee5","_ref6","_context5","invalidateAllCaches","_x13","_x14","_invalidateAllCaches","_callee6","_ref7","_context6","recycleDatabaseConnection","_x15","_x16","_recycleDatabaseConnection","_callee7","_ref8","_context7","adminResetPassword","_x17","_x18","_x19","_x20","_x21","_adminResetPassword","_callee8","currentPassword","password","_ref9","_context8","adminResetEmail","_x22","_x23","_x24","_adminResetEmail","_callee9","user","_ref10","_context9","getOAuthAppInfo","clientId","bindClientFunc","clientFunc","Client4","params","allowOAuth2","_ref","responseType","redirectUri","state","scope","authorizeOAuthApp","emailToLdap","_x27","_x28","_x29","_x30","_x31","_x32","_x33","_emailToLdap","_callee11","loginId","token","ldapId","ldapPassword","_ref12","_context11","emailToOAuth","_x34","_x35","_x36","_x37","_x38","_x39","_emailToOAuth","_callee12","newType","_ref13","_context12","oauthToEmail","_x40","_x41","_x42","_x43","_x44","_oauthToEmail","_callee13","currentService","email","_ref14","_context13","follow_link","emitUserLoggedOutEvent","uploadBrandImage","_x45","_x46","_x47","_uploadBrandImage","_callee14","brandImage","_ref15","_context14","uploadPublicSamlCertificate","_x48","_x49","_x50","_uploadPublicSamlCertificate","_callee15","file","_ref16","_context15","uploadPrivateSamlCertificate","_x51","_x52","_x53","_uploadPrivateSamlCertificate","_callee16","_ref17","_context16","uploadIdpSamlCertificate","_x54","_x55","_x56","_uploadIdpSamlCertificate","_callee17","_ref18","_context17","removePublicSamlCertificate","_x57","_x58","_removePublicSamlCertificate","_callee18","_ref19","_context18","removePrivateSamlCertificate","_x59","_x60","_removePrivateSamlCertificate","_callee19","_ref20","_context19","removeIdpSamlCertificate","_x61","_x62","_removeIdpSamlCertificate","_callee20","_ref21","_context20","getStandardAnalytics","_x63","_getStandardAnalytics","_callee21","teamId","_context21","getAdvancedAnalytics","_x64","_getAdvancedAnalytics","_callee22","_context22","getBotPostsPerDayAnalytics","_x65","_getBotPostsPerDayAnalytics","_callee23","_context23","getPostsPerDayAnalytics","_x66","_getPostsPerDayAnalytics","_callee24","_context24","getUsersPerDayAnalytics","_x67","_getUsersPerDayAnalytics","_callee25","_context25","elasticsearchTest","_x68","_x69","_x70","_elasticsearchTest","_callee26","_ref22","_context26","testS3Connection","_x71","_x72","_testS3Connection","_callee27","_ref23","_context27","elasticsearchPurgeIndexes","_x73","_x74","_elasticsearchPurgeIndexes","_callee28","_ref24","_context28","setNavigationBlocked","blocked","type","ActionTypes","SET_NAVIGATION_BLOCKED","deferNavigation","onNavigationConfirmed","DEFER_NAVIGATION","cancelNavigation","CANCEL_NAVIGATION","confirmNavigation","thunkDispatch","thunkGetState","callback","getOnNavigationConfirmed","CONFIRM_NAVIGATION","invalidateAllEmailInvites","_x75","_x76","_invalidateAllEmailInvites","_callee29","_ref25","_context29","TeamActions","testSmtp","_x77","_x78","_testSmtp","_callee30","_ref26","_context30","getNavigationBlocked","views","admin","navigationBlock","showNavigationPrompt","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"0.b53378992f50382ad6f3.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as AdminActions from 'mattermost-redux/actions/admin';\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport * as TeamActions from 'mattermost-redux/actions/teams';\nimport {Client4} from 'mattermost-redux/client';\nimport {bindClientFunc} from 'mattermost-redux/actions/helpers';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport {getOnNavigationConfirmed} from 'selectors/views/admin';\nimport store from 'stores/redux_store.jsx';\nimport {ActionTypes} from 'utils/constants.jsx';\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport async function saveConfig(config, success, error) {\n    const {data, error: err} = await AdminActions.updateConfig(config)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function reloadConfig(success, error) {\n    const {data, error: err} = await dispatch(AdminActions.reloadConfig());\n    if (data && success) {\n        dispatch(AdminActions.getConfig());\n        dispatch(AdminActions.getEnvironmentConfig());\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function adminResetMfa(userId, success, error) {\n    const {data, error: err} = await UserActions.updateUserMfa(userId, false)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function getClusterStatus(success, error) {\n    const {data, error: err} = await AdminActions.getClusterStatus()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function ldapTest(success, error) {\n    const {data, error: err} = await AdminActions.testLdap()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function invalidateAllCaches(success, error) {\n    const {data, error: err} = await AdminActions.invalidateCaches()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function recycleDatabaseConnection(success, error) {\n    const {data, error: err} = await AdminActions.recycleDatabase()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function adminResetPassword(userId, currentPassword, password, success, error) {\n    const {data, error: err} = await UserActions.updateUserPassword(userId, currentPassword, password)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function adminResetEmail(user, success, error) {\n    const {data, error: err} = await UserActions.patchUser(user)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function samlCertificateStatus(success, error) {\n    const {data, error: err} = await AdminActions.getSamlCertificateStatus()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function getOAuthAppInfo(clientId) {\n    return bindClientFunc({\n        clientFunc: Client4.getOAuthAppInfo,\n        params: [clientId],\n    });\n}\n\nexport function allowOAuth2({responseType, clientId, redirectUri, state, scope}) {\n    return bindClientFunc({\n        clientFunc: Client4.authorizeOAuthApp,\n        params: [responseType, clientId, redirectUri, state, scope],\n    });\n}\n\nexport async function emailToLdap(loginId, password, token, ldapId, ldapPassword, success, error) {\n    const {data, error: err} = await UserActions.switchEmailToLdap(loginId, password, ldapId, ldapPassword, token)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function emailToOAuth(loginId, password, token, newType, success, error) {\n    const {data, error: err} = await UserActions.switchEmailToOAuth(newType, loginId, password, token)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function oauthToEmail(currentService, email, password, success, error) {\n    const {data, error: err} = await UserActions.switchOAuthToEmail(currentService, email, password)(dispatch, getState);\n    if (data) {\n        if (data.follow_link) {\n            emitUserLoggedOutEvent(data.follow_link);\n        }\n        if (success) {\n            success(data);\n        }\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadBrandImage(brandImage, success, error) {\n    const {data, error: err} = await AdminActions.uploadBrandImage(brandImage)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadPublicSamlCertificate(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadPublicSamlCertificate(file)(dispatch, getState);\n    if (data && success) {\n        success('saml-public.crt');\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadPrivateSamlCertificate(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadPrivateSamlCertificate(file)(dispatch, getState);\n    if (data && success) {\n        success('saml-private.key');\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function uploadIdpSamlCertificate(file, success, error) {\n    const {data, error: err} = await AdminActions.uploadIdpSamlCertificate(file)(dispatch, getState);\n    if (data && success) {\n        success('saml-idp.crt');\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removePublicSamlCertificate(success, error) {\n    const {data, error: err} = await AdminActions.removePublicSamlCertificate()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removePrivateSamlCertificate(success, error) {\n    const {data, error: err} = await AdminActions.removePrivateSamlCertificate()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function removeIdpSamlCertificate(success, error) {\n    const {data, error: err} = await AdminActions.removeIdpSamlCertificate()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function getStandardAnalytics(teamId) {\n    await AdminActions.getStandardAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getAdvancedAnalytics(teamId) {\n    await AdminActions.getAdvancedAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getBotPostsPerDayAnalytics(teamId) {\n    await AdminActions.getBotPostsPerDayAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getPostsPerDayAnalytics(teamId) {\n    await AdminActions.getPostsPerDayAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function getUsersPerDayAnalytics(teamId) {\n    await AdminActions.getUsersPerDayAnalytics(teamId)(dispatch, getState);\n}\n\nexport async function elasticsearchTest(config, success, error) {\n    const {data, error: err} = await AdminActions.testElasticsearch(config)(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function testS3Connection(success, error) {\n    const {data, error: err} = await AdminActions.testS3Connection()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function elasticsearchPurgeIndexes(success, error) {\n    const {data, error: err} = await AdminActions.purgeElasticsearchIndexes()(dispatch, getState);\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport function setNavigationBlocked(blocked) {\n    return {\n        type: ActionTypes.SET_NAVIGATION_BLOCKED,\n        blocked,\n    };\n}\n\nexport function deferNavigation(onNavigationConfirmed) {\n    return {\n        type: ActionTypes.DEFER_NAVIGATION,\n        onNavigationConfirmed,\n    };\n}\n\nexport function cancelNavigation() {\n    return {\n        type: ActionTypes.CANCEL_NAVIGATION,\n    };\n}\n\nexport function confirmNavigation() {\n    // have to rename these because of lint no-shadow\n    return (thunkDispatch, thunkGetState) => {\n        const callback = getOnNavigationConfirmed(thunkGetState());\n\n        if (callback) {\n            callback();\n        }\n\n        thunkDispatch({\n            type: ActionTypes.CONFIRM_NAVIGATION,\n        });\n    };\n}\n\nexport async function invalidateAllEmailInvites(success, error) {\n    const {data, error: err} = await dispatch(TeamActions.invalidateAllEmailInvites());\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n\nexport async function testSmtp(success, error) {\n    const {data, error: err} = await dispatch(AdminActions.testEmail());\n    if (data && success) {\n        success(data);\n    } else if (err && error) {\n        error({id: err.server_error_id, ...err});\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport function getNavigationBlocked(state) {\n    return state.views.admin.navigationBlock.blocked;\n}\n\nexport function showNavigationPrompt(state) {\n    return state.views.admin.navigationBlock.showNavigationPrompt;\n}\n\nexport function getOnNavigationConfirmed(state) {\n    return state.views.admin.navigationBlock.onNavigationConfirmed;\n}"],"sourceRoot":""}