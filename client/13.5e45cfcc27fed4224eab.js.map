{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/icon/next_icon.jsx","webpack:///./components/common/site_name_and_description.jsx","webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/team_url.jsx","webpack:///./components/create_team/components/team_url/index.js","webpack:///./components/create_team/create_team.jsx","webpack:///./components/create_team/index.js"],"names":["BackButton","React","PureComponent","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","id","className","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","onClick","this","props","to","url","react_intl__WEBPACK_IMPORTED_MODULE_4__","defaultMessage","title","PropTypes","string","func","module","exports","__webpack_require__","p","NextIcon","additionalClassName","SiteNameAndDescription","_this$props","customDescriptionText","siteName","description","Fragment","TeamSignupDisplayNamePage","_this","_classCallCheck","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","e","preventDefault","displayName","ReactDOM","findDOMNode","refs","name","value","trim","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","setState","nameError","react_default","index_es","values","min","max","newState","state","wizard","team","display_name","cleanUpUrlable","updateParent","currentTarget","select","trackEvent","nameDivClass","alt","src","logoImage","type","ref","placeholder","maxLength","defaultValue","autoFocus","onFocus","handleFocus","spellCheck","submitNext","next_icon","object","TeamUrl","team_url_classCallCheck","team_url_getPrototypeOf","team_url_defineProperty","team_url_assertThisInitialized","_ref","regeneratorRuntime","mark","_callee","cleanedName","urlRegex","_this$props$actions","checkIfTeamExists","createTeam","index","teamSignup","_ref2","_ref3","data","error","wrap","_context","prev","next","URL","actions","abrupt","test","RESERVED_TEAM_NAMES","indexOf","formatted_markdown_message","isLoading","JSON","parse","stringify","sent","exists","history","push","DEFAULT_CHANNEL","message","stop","_x","apply","arguments","concat","urlTooltip","Tooltip","finishMessage","OverlayTrigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","Button","bsStyle","disabled","href","submitBack","shape","isRequired","connect","dispatch","bindActionCreators","CreateTeam","create_team_classCallCheck","create_team_getPrototypeOf","create_team_defineProperty","create_team_assertThisInitialized","_this2","currentChannel","currentTeam","match","announcement_bar","back_button","site_name_and_description","react_router","path","render","display_name_TeamSignupDisplayNamePage","Object","assign","team_url","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName"],"mappings":"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","file":"13.5e45cfcc27fed4224eab.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/786f906c373b98400b1e6f6c3341ce7d.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class NextIcon extends React.PureComponent {\n    static propTypes = {\n        additionalClassName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        additionalClassName: null,\n    };\n\n    render() {\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <FormattedMessage\n                id='generic_icons.next'\n                defaultMessage='Next Icon'\n            >\n                {(title) => (\n                    <i\n                        className={className}\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h4\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable} from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\nimport NextIcon from 'components/icon/next_icon';\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e) => {\n        e.preventDefault();\n\n        var displayName = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team.display_name = displayName;\n        newState.team.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        var nameError = null;\n        var nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            defaultMessage='Team Name'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    id='teamNameInput'\n                                    type='text'\n                                    ref='name'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength='128'\n                                    defaultValue={this.props.state.team.display_name}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        id='teamNameNextButton'\n                        type='submit'\n                        className='btn btn-primary margin--extra'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url.jsx';\nimport logoImage from 'images/logo.png';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class TeamUrl extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n\n        /*\n         * Object with redux action creators\n         */\n        actions: PropTypes.shape({\n\n            /*\n             * Action creator to check if a team already exists\n             */\n            checkIfTeamExists: PropTypes.func.isRequired,\n\n            /*\n             * Action creator to create a new team\n             */\n            createTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    submitBack = (e) => {\n        e.preventDefault();\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    submitNext = async (e) => {\n        e.preventDefault();\n\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedMarkdownMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n                    />),\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        const {exists} = await checkIfTeamExists(name);\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const {data, error} = await createTeam(teamSignup.team);\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup team logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        id='teamURLInput'\n                                        type='text'\n                                        ref='name'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength='128'\n                                        defaultValue={this.props.state.team.name}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul>\n                    <div className='margin--extra'>\n                        <Button\n                            id='teamURLFinishButton'\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={this.submitNext}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='margin--extra'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {checkIfTeamExists, createTeam} from 'mattermost-redux/actions/teams';\n\nimport TeamUrl from './team_url';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            checkIfTeamExists,\n            createTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\nexport default class CreateTeam extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing information on the current team, used to define BackButton's url\n         */\n        currentTeam: PropTypes.object,\n\n        /*\n         * Object containing information on the current selected channel, used to define BackButton's url\n         */\n        currentChannel: PropTypes.object,\n\n        /*\n         * String containing the custom branding's text\n         */\n        customDescriptionText: PropTypes.string,\n\n        /*\n         * String containing the custom branding's Site Name\n         */\n        siteName: PropTypes.string,\n\n        /*\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const state = {};\n        state.team = {};\n        state.wizard = 'display_name';\n        this.state = state;\n    }\n\n    updateParent = (state) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    }\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n"],"sourceRoot":""}