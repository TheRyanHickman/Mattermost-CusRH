{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/icon/logout_icon.jsx","webpack:///./actions/views/mfa.js","webpack:///./components/mfa/setup/setup.jsx","webpack:///./components/mfa/setup/index.js","webpack:///./components/mfa/confirm.jsx","webpack:///./components/mfa/mfa_controller/mfa_controller.jsx","webpack:///./components/mfa/mfa_controller/index.js"],"names":["BackButton","React","PureComponent","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","id","className","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","onClick","this","props","to","url","react_intl__WEBPACK_IMPORTED_MODULE_4__","defaultMessage","title","PropTypes","string","func","module","exports","__webpack_require__","p","LogoutIcon","react__WEBPACK_IMPORTED_MODULE_2___default","react_intl__WEBPACK_IMPORTED_MODULE_3__","d","__webpack_exports__","activateMfa","deactivateMfa","generateMfaSecret","mattermost_redux_actions_users__WEBPACK_IMPORTED_MODULE_0__","mattermost_redux_selectors_entities_users__WEBPACK_IMPORTED_MODULE_1__","code","dispatch","getState","currentUserId","getCurrentUserId","UserActions","Setup","_this","_classCallCheck","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","e","preventDefault","refs","value","replace","length","setState","error","actions","then","_ref","server_error_id","Utils","message","history","push","state","secret","qrCode","Component","_this2","user","currentUser","mfa_active","_ref2","data","serverError","qr_code","errorContent","mfaRequired","formClass","react_default","enforceMultifactorAuthentication","formatted_markdown_message","values","siteName","onSubmit","submit","alt","style","src","index_es","localized_input","ref","placeholder","t","autoFocus","type","object","bool","isRequired","shape","maxHeight","connect","config","getConfig","SiteName","EnforceMultifactorAuthentication","getCurrentUser","bindActionCreators","KeyCodes","Constants","Confirm","redirectUserToDefaultTeam","isKeyPressed","ENTER","document","body","addEventListener","onKeyPress","removeEventListener","MFAController","emitUserLoggedOutEvent","classList","add","getElementById","enableMultifactorAuthentication","remove","backButton","mfa","handleOnClick","logout_icon","back_button","logoImage","react_router","path","concat","match","render","setup","Object","assign","updateParent","confirm_Confirm","propTypes","location","children","node","license","getLicense","MFA","EnableMultifactorAuthentication"],"mappings":"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","file":"12.df6774cc6b359c14cd51.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/786f906c373b98400b1e6f6c3341ce7d.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class LogoutIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.logout'\n                defaultMessage='Logout Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-1x fa-angle-left'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nexport function activateMfa(code) {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.updateUserMfa(currentUserId, true, code));\n    };\n}\n\nexport function deactivateMfa() {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.updateUserMfa(currentUserId, false));\n    };\n}\n\nexport function generateMfaSecret() {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.generateMfaSecret(currentUserId));\n    };\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nexport default class Setup extends React.Component {\n    static propTypes = {\n        currentUser: PropTypes.object,\n        siteName: PropTypes.string,\n        enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            activateMfa: PropTypes.func.isRequired,\n            generateMfaSecret: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {secret: '', qrCode: ''};\n    }\n\n    componentDidMount() {\n        const user = this.props.currentUser;\n        if (!user || user.mfa_active) {\n            this.props.history.push('/');\n            return;\n        }\n\n        this.props.actions.generateMfaSecret().then(({data, error}) => {\n            if (error) {\n                this.setState({\n                    serverError: error.message,\n                });\n                return;\n            }\n\n            this.setState({\n                secret: data.secret,\n                qrCode: data.qr_code,\n            });\n        });\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        const code = this.refs.code.value.replace(/\\s/g, '');\n        if (!code || code.length === 0) {\n            this.setState({error: Utils.localizeMessage('mfa.setup.codeError', 'Please enter the code from Google Authenticator.')});\n            return;\n        }\n\n        this.setState({error: null});\n\n        this.props.actions.activateMfa(code).then(({error}) => {\n            if (error) {\n                if (error.server_error_id === 'ent.mfa.activate.authenticate.app_error') {\n                    this.setState({\n                        error: Utils.localizeMessage('mfa.setup.badCode', 'Invalid code. If this issue persists, contact your System Administrator.'),\n                    });\n                } else {\n                    this.setState({\n                        error: error.message,\n                    });\n                }\n\n                return;\n            }\n\n            this.props.history.push('/mfa/confirm');\n        });\n    }\n\n    render() {\n        let formClass = 'form-group';\n        let errorContent;\n        if (this.state.error) {\n            errorContent = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n            formClass += ' has-error';\n        }\n\n        let mfaRequired;\n        if (this.props.enforceMultifactorAuthentication) {\n            mfaRequired = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='mfa.setup.required'\n                        defaultMessage='**Multi-factor authentication is required on {siteName}.**'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    className={formClass}\n                >\n                    {mfaRequired}\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step1'\n                            defaultMessage=\"**Step 1: **On your phone, download Google Authenticator from [iTunes](!https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8') or [Google Play](!https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en)\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step2'\n                            defaultMessage='**Step 2: **Use Google Authenticator to scan this QR code, or manually type in the secret key'\n                        />\n                    </p>\n                    <div className='form-group'>\n                        <div className='col-sm-12'>\n                            <img\n                                alt={'qr code image'}\n                                style={style.qrCode}\n                                src={'data:image/png;base64,' + this.state.qrCode}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className='form-group'>\n                        <p className='col-sm-12'>\n                            <FormattedMessage\n                                id='mfa.setup.secret'\n                                defaultMessage='Secret: {secret}'\n                                values={{\n                                    secret: this.state.secret,\n                                }}\n                            />\n                        </p>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step3'\n                            defaultMessage='**Step 3: **Enter the code generated by Google Authenticator'\n                        />\n                    </p>\n                    <p>\n                        <LocalizedInput\n                            ref='code'\n                            className='form-control'\n                            placeholder={{id: t('mfa.setup.code'), defaultMessage: 'MFA Code'}}\n                            autoFocus={true}\n                        />\n                    </p>\n                    {errorContent}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.setup.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    qrCode: {maxHeight: 170},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {activateMfa, generateMfaSecret} from 'actions/views/mfa';\n\nimport Setup from './setup.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        currentUser: getCurrentUser(state),\n        siteName,\n        enforceMultifactorAuthentication,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            activateMfa,\n            generateMfaSecret,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Setup);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\nimport {isKeyPressed} from 'utils/utils.jsx';\n\nimport {redirectUserToDefaultTeam} from 'actions/global_actions.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class Confirm extends React.Component {\n    componentDidMount() {\n        document.body.addEventListener('keydown', this.onKeyPress);\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('keydown', this.onKeyPress);\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        redirectUserToDefaultTeam();\n    }\n\n    onKeyPress = (e) => {\n        if (isKeyPressed(e, KeyCodes.ENTER)) {\n            this.submit(e);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    onKeyPress={this.onKeyPress}\n                    className='form-group'\n                >\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.confirm.complete'\n                            defaultMessage='**Set up complete!**'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='mfa.confirm.secure'\n                            defaultMessage='Your account is now secure. Next time you sign in, you will be asked to enter a code from the Google Authenticator app on your phone.'\n                        />\n                    </p>\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.confirm.okay'\n                            defaultMessage='Okay'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button.jsx';\nimport LogoutIcon from 'components/icon/logout_icon';\n\nimport Setup from '../setup';\nimport Confirm from '../confirm';\n\nexport default class MFAController extends React.Component {\n    componentDidMount() {\n        document.body.classList.add('sticky');\n        document.getElementById('root').classList.add('container-fluid');\n\n        if (!this.props.enableMultifactorAuthentication) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('sticky');\n        document.getElementById('root').classList.remove('container-fluid');\n    }\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    render() {\n        let backButton;\n        if (this.props.mfa && this.props.enforceMultifactorAuthentication) {\n            backButton = (\n                <div className='signup-header'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleOnClick}\n                    >\n                        <LogoutIcon/>\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </button>\n                </div>\n            );\n        } else {\n            backButton = (<BackButton/>);\n        }\n\n        return (\n            <div className='inner-wrap'>\n                <div className='row content'>\n                    <div>\n                        {backButton}\n                        <div className='col-sm-12'>\n                            <div className='signup-team__container'>\n                                <h3>\n                                    <FormattedMessage\n                                        id='mfa.setupTitle'\n                                        defaultMessage='Multi-factor Authentication Setup'\n                                    />\n                                </h3>\n                                <img\n                                    alt={'signup team logo'}\n                                    className='signup-team-logo'\n                                    src={logoImage}\n                                />\n                                <div id='mfa'>\n                                    <Switch>\n                                        <Route\n                                            path={`${this.props.match.url}/setup`}\n                                            render={(props) => (\n                                                <Setup\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                            path={`${this.props.match.url}/confirm`}\n                                            render={(props) => (\n                                                <Confirm\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMFAController.propTypes = {\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    mfa: PropTypes.bool.isRequired,\n    enableMultifactorAuthentication: PropTypes.bool.isRequired,\n    enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n\n    /*\n     * Object from react-router\n     */\n    match: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n    }).isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport MFAController from './mfa_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const mfa = license.MFA === 'true';\n    const enableMultifactorAuthentication = config.EnableMultifactorAuthentication === 'true';\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        mfa,\n        enableMultifactorAuthentication,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(MFAController);\n"],"sourceRoot":""}