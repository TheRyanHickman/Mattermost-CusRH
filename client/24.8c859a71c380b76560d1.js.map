{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./components/should_verify_email/should_verify_email.js","webpack:///./components/should_verify_email/index.js"],"names":["BackButton","React","PureComponent","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","id","className","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","onClick","this","props","to","url","react_intl__WEBPACK_IMPORTED_MODULE_4__","defaultMessage","title","PropTypes","string","func","ShouldVerifyEmail","_this","_classCallCheck","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","_asyncToGenerator","regeneratorRuntime","mark","_callee","email","_ref2","data","error","wrap","_context","prev","next","URLSearchParams","location","search","get","setState","resendStatus","actions","sendVerificationEmail","sent","stop","state","resendConfirm","react_default","success_icon","index_es","back_button","values","siteName","handleResend","object","isRequired","shape","connect","getConfig","SiteName","dispatch","bindActionCreators"],"mappings":"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","file":"24.8c859a71c380b76560d1.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport BackButton from 'components/common/back_button.jsx';\nimport SuccessIcon from 'components/icon/success_icon';\n\nexport default class ShouldVerifyEmail extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n        siteName: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            sendVerificationEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            resendStatus: 'none',\n        };\n    }\n\n    handleResend = async () => {\n        const email = (new URLSearchParams(this.props.location.search)).get('email');\n\n        this.setState({resendStatus: 'sending'});\n\n        const {data, error} = await this.props.actions.sendVerificationEmail(email);\n        if (data) {\n            this.setState({resendStatus: 'success'});\n        } else if (error) {\n            this.setState({resendStatus: 'failure'});\n        }\n    }\n\n    render() {\n        let resendConfirm = '';\n\n        if (this.state.resendStatus === 'success') {\n            resendConfirm = (\n                <div>\n                    <br/>\n                    <p className='alert alert-success'>\n                        <SuccessIcon/>\n                        <FormattedMessage\n                            id='email_verify.sent'\n                            defaultMessage=' Verification email sent.'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        if (this.state.resendStatus === 'failure') {\n            resendConfirm = (\n                <div>\n                    <br/>\n                    <p className='alert alert-danger'>\n                        <FormattedMessage\n                            id='generic_icons.fail'\n                            defaultMessage='Faliure Icon'\n                        >\n                            {(title) => (\n                                <i\n                                    className='fa fa-times'\n                                    title={title}\n                                />\n                            )}\n                        </FormattedMessage>\n                        <FormattedMessage id='email_verify.failed'/>\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='email_verify.almost'\n                                defaultMessage='{siteName}: You are almost done'\n                                values={{\n                                    siteName: this.props.siteName,\n                                }}\n                            />\n                        </h3>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='email_verify.notVerifiedBody'\n                                    defaultMessage='Please verify your email address. Check your inbox for an email.'\n                                />\n                            </p>\n                            <button\n                                onClick={this.handleResend}\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='email_verify.resend'\n                                    defaultMessage='Resend Email'\n                                />\n                            </button>\n                            {resendConfirm}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {sendVerificationEmail} from 'mattermost-redux/actions/users';\n\nimport ShouldVerifyEmail from './should_verify_email';\n\nconst mapStateToProps = (state) => {\n    const {SiteName: siteName} = getConfig(state);\n    return {siteName};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators({\n        sendVerificationEmail,\n    }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShouldVerifyEmail);\n"],"sourceRoot":""}