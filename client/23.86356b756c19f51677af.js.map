{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./components/password_reset_send_link/password_reset_send_link.js","webpack:///./components/password_reset_send_link/index.js"],"names":["BackButton","React","PureComponent","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","id","className","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","onClick","this","props","to","url","react_intl__WEBPACK_IMPORTED_MODULE_4__","defaultMessage","title","PropTypes","string","func","PasswordResetSendLink","error","updateText","createRef","_callee","e","input","email","_ref2","data","regeneratorRuntime","wrap","_context","prev","next","preventDefault","_this","emailInput","current","value","trim","toLowerCase","isEmail","setState","react_default","index_es","abrupt","actions","sendPasswordResetEmail","sent","resetForm","hidden","message","update_text","stop","state","formClass","back_button","onSubmit","handleSendLink","ref","localized_input","type","name","placeholder","t","spellCheck","autoFocus","shape","isRequired","connect","dispatch","bindActionCreators"],"mappings":"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","file":"23.86356b756c19f51677af.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport BackButton from 'components/common/back_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nexport default class PasswordResetSendLink extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            sendPasswordResetEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    state = {\n        error: null,\n        updateText: null,\n    };\n    resetForm = React.createRef();\n    emailInput = React.createRef();\n\n    handleSendLink = async (e) => {\n        e.preventDefault();\n\n        const input = this.emailInput.current && this.emailInput.current.input.current;\n        const email = input && input.value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id={'password_send.error'}\n                        defaultMessage={'Please enter a valid email address.'}\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({error: null});\n\n        const {data, error} = await this.props.actions.sendPasswordResetEmail(email);\n        if (data) {\n            this.setState({\n                error: null,\n                updateText: (\n                    <div\n                        id='passwordResetEmailSent'\n                        className='reset-form alert alert-success'\n                    >\n                        <FormattedMessage\n                            id='password_send.link'\n                            defaultMessage='If the account exists, a password reset email will be sent to:'\n                        />\n                        <div>\n                            <b>{email}</b>\n                        </div>\n                        <br/>\n                        <FormattedMessage\n                            id='password_send.checkInbox'\n                            defaultMessage='Please check your inbox.'\n                        />\n                    </div>\n                ),\n            });\n            if (this.resetForm.current) {\n                this.resetForm.current.hidden = true;\n            }\n        } else if (error) {\n            this.setState({\n                error: error.message,\n                update_text: null,\n            });\n        }\n    }\n\n    render() {\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.error}</label>\n                </div>\n            );\n        }\n\n        let formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref={this.resetForm}\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <LocalizedInput\n                                    id='passwordResetEmailInput'\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    placeholder={{id: t('password_send.email'), defaultMessage: 'Email'}}\n                                    ref={this.emailInput}\n                                    spellCheck='false'\n                                    autoFocus={true}\n                                />\n                            </div>\n                            {error}\n                            <button\n                                id='passwordResetButton'\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {sendPasswordResetEmail} from 'mattermost-redux/actions/users';\n\nimport PasswordResetSendLink from './password_reset_send_link';\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators({\n        sendPasswordResetEmail,\n    }, dispatch),\n});\n\nexport default connect(null, mapDispatchToProps)(PasswordResetSendLink);\n"],"sourceRoot":""}