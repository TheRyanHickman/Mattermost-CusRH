{"version":3,"sources":["webpack:///./components/common/back_button.jsx","webpack:///./images/logo.png","webpack:///./components/common/site_name_and_description.jsx","webpack:///./components/icon/logout_icon.jsx","webpack:///./components/svg/team_info_icon.jsx","webpack:///./components/select_team/components/select_team_item.jsx","webpack:///./components/select_team/select_team.jsx","webpack:///./components/select_team/index.js"],"names":["BackButton","React","PureComponent","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","id","className","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","onClick","this","props","to","url","react_intl__WEBPACK_IMPORTED_MODULE_4__","defaultMessage","title","PropTypes","string","func","module","exports","__webpack_require__","p","SiteNameAndDescription","_this$props","customDescriptionText","siteName","description","Fragment","LogoutIcon","react__WEBPACK_IMPORTED_MODULE_2___default","react_intl__WEBPACK_IMPORTED_MODULE_3__","TeamInfoIcon","react_default","index_es","ariaLabel","width","height","viewBox","style","role","aria-label","transform","d","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","SelectTeamItem","e","preventDefault","_this","onTeamClick","team","descriptionTooltip","Tooltip","OverlayTrigger","delayShow","placement","overlay","ref","rootClose","container","select_team_item_assertThisInitialized","team_info_icon_TeamInfoIcon","icon","formatMessage","context","intl","canJoinPublicTeams","canJoinPrivateTeams","loading","canJoin","allow_open_invite","renderDescriptionTooltip","href","Utils","display_name","handleTeamClick","object","isRequired","bool","intlShape","TEAM_MEMBERSHIP_DENIAL_ERROR_ID","SelectTeam","select_team_classCallCheck","select_team_getPrototypeOf","call","select_team_defineProperty","select_team_assertThisInitialized","_ref","regeneratorRuntime","mark","_callee","siteURL","currentUserRoles","_ref2","data","error","errorMsg","wrap","_context","prev","next","setState","loadingTeamId","actions","addUserToTeam","currentUserId","sent","history","push","concat","name","Constants","DEFAULT_CHANNEL","message","server_error_id","includes","PERMISSIONS_SYSTEM_ADMIN","formatted_markdown_message","values","stop","_x","apply","arguments","emitUserLoggedOutEvent","state","Component","getTeams","_this$props2","loadRolesIfNeeded","split","openContent","_this2","_this$props3","canManageSystem","isMemberOfTeam","listableTeams","canCreateTeams","loading_screen","joinableTeamContents","forEach","listableTeam","select_team_item_SelectTeamItem","key","length","system_permission_gate","permissions","Permissions","CREATE_TEAM","invert","adminConsoleLink","headerButton","teamSignUp","react_router_dom","UserAgent","MANAGE_SYSTEM","back_button","clearError","handleLogoutClick","logout_icon","announcement_bar","alt","src","logoImage","site_name_and_description","array","shape","withRouter","connect","config","getConfig","currentUser","getCurrentUser","myTeamMemberships","Object","getTeamMemberships","roles","CustomDescriptionText","getSortedListableTeams","locale","SiteName","haveISystemPermission","permission","JOIN_PUBLIC_TEAMS","JOIN_PRIVATE_TEAMS","SiteURL","dispatch","bindActionCreators"],"mappings":"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","file":"14.da7d9b1c40b7d8578faa.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nexport default class BackButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * URL to return to\n         */\n        url: PropTypes.string,\n\n        /**\n         * An optional click handler that will trigger when the user clicks on the back button\n         */\n        onClick: PropTypes.func,\n    };\n\n    static defaultProps = {\n        url: '/',\n    };\n\n    render() {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/786f906c373b98400b1e6f6c3341ce7d.png\";","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SiteNameAndDescription extends React.PureComponent {\n    static propTypes = {\n        customDescriptionText: PropTypes.string,\n        siteName: PropTypes.string,\n    };\n\n    static defaultProps = {\n        siteName: 'Mattermost',\n    };\n\n    render() {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h4\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class LogoutIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.logout'\n                defaultMessage='Logout Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-1x fa-angle-left'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class TeamInfoIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <FormattedMessage\n                    id='generic_icons.info'\n                    defaultMessage='Info Icon'\n                >\n                    {(ariaLabel) => (\n                        <svg\n                            width='100%'\n                            height='100%'\n                            viewBox='0 0 20 20'\n                            style={style}\n                            role='icon'\n                            aria-label={ariaLabel}\n                        >\n                            <g transform='matrix(1.17647,0,0,1.17647,-1.55431e-15,-1.00573e-14)'>\n                                <path d='M8.5,0C3.797,0 0,3.797 0,8.5C0,13.203 3.797,17 8.5,17C13.203,17 17,13.203 17,8.5C17,3.797 13.203,0 8.5,0ZM10,8.5C10,7.672 9.328,7 8.5,7C7.672,7 7,7.672 7,8.5L7,12.45C7,13.278 7.672,13.95 8.5,13.95C9.328,13.95 10,13.278 10,12.45L10,8.5ZM8.5,3C9.328,3 10,3.672 10,4.5C10,5.328 9.328,6 8.5,6C7.672,6 7,5.328 7,4.5C7,3.672 7.672,3 8.5,3Z'/>\n                            </g>\n                        </svg>\n                    )}\n                </FormattedMessage>\n            </span>\n        );\n    }\n}\n\nconst style = {\n    fillRule: 'evenodd',\n    clipRule: 'evenodd',\n    strokeLinejoin: 'round',\n    strokeMiterlimit: 1.41421,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {intlShape} from 'react-intl';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport TeamInfoIcon from 'components/svg/team_info_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class SelectTeamItem extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onTeamClick: PropTypes.func.isRequired,\n        loading: PropTypes.bool.isRequired,\n        canJoinPublicTeams: PropTypes.bool.isRequired,\n        canJoinPrivateTeams: PropTypes.bool.isRequired,\n    };\n\n    static contextTypes = {\n        intl: intlShape.isRequired,\n    };\n\n    handleTeamClick = (e) => {\n        e.preventDefault();\n        this.props.onTeamClick(this.props.team);\n    }\n\n    renderDescriptionTooltip = () => {\n        const team = this.props.team;\n        if (!team.description) {\n            return null;\n        }\n\n        const descriptionTooltip = (\n            <Tooltip id='team-description__tooltip'>\n                {team.description}\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                delayShow={1000}\n                placement='top'\n                overlay={descriptionTooltip}\n                ref='descriptionOverlay'\n                rootClose={true}\n                container={this}\n            >\n                <TeamInfoIcon className='icon icon--info'/>\n            </OverlayTrigger>\n        );\n    }\n\n    render() {\n        const {formatMessage} = this.context.intl;\n        const {canJoinPublicTeams, canJoinPrivateTeams, loading, team} = this.props;\n        let icon;\n        if (loading) {\n            icon = (\n                <span\n                    className='fa fa-refresh fa-spin right signup-team__icon'\n                    title={formatMessage({id: 'generic_icons.loading', defaultMessage: 'Loading Icon'})}\n                />\n            );\n        } else {\n            icon = (\n                <span\n                    className='fa fa-angle-right right signup-team__icon'\n                    title={formatMessage({id: 'select_team.join.icon', defaultMessage: 'Join Team Icon'})}\n                />\n            );\n        }\n\n        const canJoin = (team.allow_open_invite && canJoinPublicTeams) || (!team.allow_open_invite && canJoinPrivateTeams);\n\n        return (\n            <div className='signup-team-dir'>\n                {this.renderDescriptionTooltip()}\n                <a\n                    href='#'\n                    id={Utils.createSafeId(team.display_name)}\n                    onClick={canJoin ? this.handleTeamClick : null}\n                    className={canJoin ? '' : 'disabled'}\n                >\n                    <span className='signup-team-dir__name'>{team.display_name}</span>\n                    {!team.allow_open_invite &&\n                        <span\n                            className='fa fa-lock light'\n                            title={formatMessage({id: 'select_team.private.icon', defaultMessage: 'Private team'})}\n                        />}\n                    {canJoin && icon}\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\n\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport LogoutIcon from 'components/icon/logout_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport SelectTeamItem from './components/select_team_item.jsx';\n\nconst TEAMS_PER_PAGE = 200;\nconst TEAM_MEMBERSHIP_DENIAL_ERROR_ID = 'api.team.add_members.user_denied';\n\nexport default class SelectTeam extends React.Component {\n    static propTypes = {\n        currentUserId: PropTypes.string.isRequired,\n        currentUserRoles: PropTypes.string,\n        customDescriptionText: PropTypes.string,\n        isMemberOfTeam: PropTypes.bool.isRequired,\n        listableTeams: PropTypes.array,\n        siteName: PropTypes.string,\n        canCreateTeams: PropTypes.bool.isRequired,\n        canManageSystem: PropTypes.bool.isRequired,\n        canJoinPublicTeams: PropTypes.bool.isRequired,\n        canJoinPrivateTeams: PropTypes.bool.isRequired,\n        history: PropTypes.object,\n        siteURL: PropTypes.string,\n        actions: PropTypes.shape({\n            getTeams: PropTypes.func.isRequired,\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            addUserToTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingTeamId: '',\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getTeams(0, TEAMS_PER_PAGE);\n    }\n\n    UNSAFE_componentWillMount() { // eslint-disable-line camelcase\n        const {\n            actions,\n            currentUserRoles,\n        } = this.props;\n\n        actions.loadRolesIfNeeded(currentUserRoles.split(' '));\n    }\n\n    handleTeamClick = async (team) => {\n        const {siteURL, currentUserRoles} = this.props;\n        this.setState({loadingTeamId: team.id});\n\n        const {data, error} = await this.props.actions.addUserToTeam(team.id, this.props.currentUserId);\n        if (data) {\n            this.props.history.push(`/${team.name}/channels/${Constants.DEFAULT_CHANNEL}`);\n        } else if (error) {\n            let errorMsg = error.message;\n\n            if (error.server_error_id === TEAM_MEMBERSHIP_DENIAL_ERROR_ID) {\n                if (currentUserRoles.includes(Constants.PERMISSIONS_SYSTEM_ADMIN)) {\n                    errorMsg = (\n                        <FormattedMarkdownMessage\n                            id='join_team_group_constrained_denied_admin'\n                            defaultMessage={`You need to be a member of a linked group to join this team. You can add a group to this team [here](${siteURL}/admin_console/user_management/groups).`}\n                            values={{siteURL}}\n                        />\n                    );\n                } else {\n                    errorMsg = (\n                        <FormattedMarkdownMessage\n                            id='join_team_group_constrained_denied'\n                            defaultMessage='You need to be a member of a linked group to join this team.'\n                        />\n                    );\n                }\n            }\n\n            this.setState({\n                error: errorMsg,\n                loadingTeamId: '',\n            });\n        }\n    };\n\n    handleLogoutClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    };\n\n    clearError = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            error: null,\n        });\n    };\n\n    render() {\n        const {\n            canManageSystem,\n            customDescriptionText,\n            isMemberOfTeam,\n            listableTeams,\n            siteName,\n            canCreateTeams,\n            canJoinPublicTeams,\n            canJoinPrivateTeams,\n        } = this.props;\n\n        let openContent;\n        if (this.state.loadingTeamId) {\n            openContent = <LoadingScreen/>;\n        } else if (this.state.error) {\n            openContent = (\n                <div className='signup__content'>\n                    <div className={'form-group has-error'}>\n                        <label className='control-label'>{this.state.error}</label>\n                    </div>\n                </div>\n            );\n        } else {\n            let joinableTeamContents = [];\n            listableTeams.forEach((listableTeam) => {\n                if ((listableTeam.allow_open_invite && canJoinPublicTeams) || (!listableTeam.allow_open_invite && canJoinPrivateTeams)) {\n                    joinableTeamContents.push(\n                        <SelectTeamItem\n                            key={'team_' + listableTeam.name}\n                            team={listableTeam}\n                            onTeamClick={this.handleTeamClick}\n                            loading={this.state.loadingTeamId === listableTeam.id}\n                            canJoinPublicTeams={canJoinPublicTeams}\n                            canJoinPrivateTeams={canJoinPrivateTeams}\n                        />\n                    );\n                }\n            });\n\n            if (joinableTeamContents.length === 0 && (canCreateTeams || canManageSystem)) {\n                joinableTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <FormattedMessage\n                                id='signup_team.no_open_teams_canCreate'\n                                defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                            />\n                        </div>\n                    </div>\n                );\n            } else if (joinableTeamContents.length === 0) {\n                joinableTeamContents = (\n                    <div className='signup-team-dir-err'>\n                        <div>\n                            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams_canCreate'\n                                    defaultMessage='No teams are available to join. Please create a new team or ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                            <SystemPermissionGate\n                                permissions={[Permissions.CREATE_TEAM]}\n                                invert={true}\n                            >\n                                <FormattedMessage\n                                    id='signup_team.no_open_teams'\n                                    defaultMessage='No teams are available to join. Please ask your administrator for an invite.'\n                                />\n                            </SystemPermissionGate>\n                        </div>\n                    </div>\n                );\n            }\n\n            openContent = (\n                <div\n                    id='teamsYouCanJoinContent'\n                    className='signup__content'\n                >\n                    <h4>\n                        <FormattedMessage\n                            id='signup_team.join_open'\n                            defaultMessage='Teams you can join: '\n                        />\n                    </h4>\n                    <div className='signup-team-all'>\n                        {joinableTeamContents}\n                    </div>\n                </div>\n            );\n        }\n\n        const teamSignUp = (\n            <SystemPermissionGate permissions={[Permissions.CREATE_TEAM]}>\n                <div className='margin--extra'>\n                    <Link\n                        id='createNewTeamLink'\n                        to='/create_team'\n                        className='signup-team-login'\n                    >\n                        <FormattedMessage\n                            id='login.createTeam'\n                            defaultMessage='Create a new team'\n                        />\n                    </Link>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        let adminConsoleLink;\n        if (!UserAgent.isMobileApp()) {\n            adminConsoleLink = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                    <div className='margin--extra hidden-xs'>\n                        <Link\n                            to='/admin_console'\n                            className='signup-team-login'\n                        >\n                            <FormattedMessage\n                                id='signup_team_system_console'\n                                defaultMessage='Go to System Console'\n                            />\n                        </Link>\n                    </div>\n                </SystemPermissionGate>\n            );\n        }\n\n        let headerButton;\n        if (this.state.error) {\n            headerButton = <BackButton onClick={this.clearError}/>;\n        } else if (isMemberOfTeam) {\n            headerButton = <BackButton/>;\n        } else {\n            headerButton = (\n                <div className='signup-header'>\n                    <a\n                        href='#'\n                        id='logout'\n                        onClick={this.handleLogoutClick}\n                    >\n                        <LogoutIcon/>\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </a>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <AnnouncementBar/>\n                {headerButton}\n                <div className='col-sm-12'>\n                    <div className={'signup-team__container'}>\n                        <img\n                            alt={'signup team logo'}\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        {openContent}\n                        {teamSignUp}\n                        {adminConsoleLink}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getSortedListableTeams, getTeamMemberships} from 'mattermost-redux/selectors/entities/teams';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {addUserToTeam} from 'actions/team_actions';\n\nimport SelectTeam from './select_team.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentUser = getCurrentUser(state);\n    const myTeamMemberships = Object.values(getTeamMemberships(state));\n\n    return {\n        currentUserId: currentUser.id,\n        currentUserRoles: currentUser.roles || '',\n        customDescriptionText: config.CustomDescriptionText,\n        isMemberOfTeam: myTeamMemberships && myTeamMemberships.length > 0,\n        listableTeams: getSortedListableTeams(state, currentUser.locale),\n        siteName: config.SiteName,\n        canCreateTeams: haveISystemPermission(state, {permission: Permissions.CREATE_TEAM}),\n        canManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n        canJoinPublicTeams: haveISystemPermission(state, {permission: Permissions.JOIN_PUBLIC_TEAMS}),\n        canJoinPrivateTeams: haveISystemPermission(state, {permission: Permissions.JOIN_PRIVATE_TEAMS}),\n        siteURL: config.SiteURL,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            loadRolesIfNeeded,\n            addUserToTeam,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SelectTeam));\n"],"sourceRoot":""}